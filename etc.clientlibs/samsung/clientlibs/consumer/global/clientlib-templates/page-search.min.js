(function (win, $) {
	'use strict';

	win.smg = win.smg || {};

	//
	// String functions
	//
	if (!String.prototype.startsWith) {
		String.prototype.startsWith = function startsWith(s) {
			return s && typeof (s) === 'string' && this.indexOf(s) === 0;
		};
	}
	if (!String.prototype.endsWith) {
		String.prototype.endsWith = function endsWith(s) {
			return s && typeof (s) === 'string' && this.lastIndexOf(s) === (this.length - s.length);
		};
	}
	if (!String.prototype.trim) {
		String.prototype.trim = function trim() {
			return $.trim(this);
		};
	}
	String.prototype.encodeHtml = function encodeHtml() {
		return $("<div/>").text(this).html();
	};
	String.prototype.decodeHtml = function decodeHtml() {
		return $("<div/>").html(this).text();
	};

	win.smg.sga = win.smg.sga || (function () {

		var _console = win.console || {
			log: function () {},
			dir: function () {},
			error: function () {}
		};
		var _domKey = {
			"all" : "all",
			"product" : "product",
			"accessory" : "accessory",
			"support" : "support"
		};

		return {
			console: _console,
			domKey: _domKey
		};
	})();

})(window, jQuery);
(function (win, $) {
	'use strict';

	win.smg = win.smg || {};
	var sga = win.smg.sga = win.smg.sga || {};

	sga.template = sga.template || (function () {

		var _DEFAULT_PREFIX = "{{";
		var _DEFAULT_SUFFIX = "}}";
		var _DEFAULT_CONFIG = {
			prefix: _DEFAULT_PREFIX,
			suffix: _DEFAULT_SUFFIX
		};

		function _compileTemplates($jqObj, config) {
			var tmpls = {};

			if (!$jqObj) {
				$jqObj = $(".sga-templates .sga-tmpl");
			} else {
				if (!$jqObj.hasClass("sga-templates")) {
					$jqObj = $jqObj.find(".sga-templates .sga-tmpl");
				} else {
					$jqObj = $jqObj.find(".sga-tmpl");
				}
			}
			$jqObj.each(function (i, elem) {
				var $elem = $(elem);

				var tmplName = _templateName($elem.attr("class").split(" "));
				if (!tmplName) {
					return;
				}
				var txt = $.trim($elem.html());
				if (txt.length === 0) {
					return;
				}

				tmpls[tmplName] = _parseTemplateText(txt, config);
			});

			return tmpls;
		}

		function _templateName(clsAttrs) {
			for (var i = 0; i < clsAttrs.length; i++) {
				var cls = clsAttrs[i];
				if (cls.startsWith("sga-tmpl-")) {
					var nm = $.trim(cls.substring(9));
					return nm.length > 0 ? nm : null;
				}
			}
			return null;
		}

		function _parseTemplateText(txt, config) {
			var si = 0,
				ei = 0;
			var tokens = [];

			while (si < txt.length) {
				si = txt.indexOf(config.prefix, ei);
				if (si < 0) {
					tokens.push(txt.substring(ei));
					break;
				}

				// push text
				tokens.push(txt.substring(ei, si));

				ei = txt.indexOf(config.suffix, si + config.prefix.length);
				if (ei < 0) {
					tokens.push(txt.substring(si));
					break;
				}

				// push variable
				tokens.push(txt.substring(si + config.prefix.length, ei));

				si = ei = ei + config.suffix.length;
			}

			return tokens;
		}

		function _bindTemplate(tmpls, tmplName, dataMap) {
			var tokens = tmpls[tmplName];
			var result = [];
			if (tokens && tokens.length > 0) {
				for (var i = 0; i < tokens.length; i++) {
					var s = tokens[i];
					result.push(i % 2 == 0 ? s : (dataMap[s] || ""));
				}
			}
			return result.join("");
		}

		function _id(tnm) {
			return $.trim((tnm || "").toString());
		}

		var _prototype = {

			// this._config : <MUST_OVERRIDE>,
			// this._templates : <MUST_OVERRIDE>,

			bind: function (tmplName, dataMap) {
				return _bindTemplate(this._templates, _id(tmplName), dataMap);
			},
			hasTemplate: function (tmplName) {
				var t = this._templates[_id(tmplName)];
				return t && t.length > 0;
			},
			register: function (tmplName, text) {
				var nm = _id(tmplName);
				var s = $.trim(text || "");
				if (nm !== "" && s !== "") {
					this._templates[nm] = _parseTemplateText(s, this._config);
				}
			},
			unregister: function (tmplName) {
				var nm = _id(tmplName);
				if (nm !== "" && this._templates[nm]) {
					delete this._templates[nm];
				}
			}
		};

		function _createFromPrototype(cfg, tmpl) {
			return $.extend({
				_config: cfg,
				_templates: tmpl
			}, _prototype);
		}

		return {
			DEFAULT_PREFIX: _DEFAULT_CONFIG.prefix,
			DEFAULT_SUFFIX: _DEFAULT_CONFIG.suffix,

			getDefaultConfig: function () {
				$.extend(_DEFAULT_CONFIG);
			},

			create: function (config) {
				return _createFromPrototype(config || _DEFAULT_CONFIG, []);
			},

			compile: function ($jqObj, config) {
				var cfg = config || _DEFAULT_CONFIG;
				return _createFromPrototype(cfg, _compileTemplates($jqObj, cfg));
			}
		}
	})();

})(window, window.jQuery);
(function (win, $) {
	'use strict';

	win.smg = win.smg || {};
	var sga = win.smg.sga = win.smg.sga || {};

	var _eventListeners = {};

	sga.ui = sga.ui || {

		registerEventListener: function (evtId, lsnrId, callback, context) {
			if (evtId && callback) {
				var lsnrs = _eventListeners[evtId];
				if (!lsnrs) {
					lsnrs = [];
					_eventListeners[evtId] = lsnrs;
				}
				lsnrs.push({
					id: lsnrId,
					callback: callback,
					context: context
				});
			}
		},

		unregisterEventListener: function (evtId, lsnrId) {
			if (evtId && lsnrId) {
				var lsnrs = _eventListeners[evtId];
				if (lsnrs) {
					for (var i = 0, len = lsnrs.length; i < len; i++) {
						if (lsnrs[i].id === lsnrId) {
							lsnrs.splice(i, 1);
						}
					}
				}
			}
		},

		triggerEvent: function (evtId, evtObj) {
			if (evtId) {
				var lsnrs = _eventListeners[evtId];
				if (lsnrs) {
					var args = [evtObj];
					for (var i = 0, len = lsnrs.length; i < len; i++) {
						var lsnr = lsnrs[i];
						if (lsnr.callback) {
							try {
								lsnr.callback.apply((lsnr.context || null), args);
							} catch (e) {
								sga.console.error("Listener Error" + e);
							}
						}
					}
				}
			}
		}
	};

})(window, window.jQuery);
(function (win, $, sga) {
	'use strict';

	var search = sga.search = sga.search || {};

	search.config = {
		CALLBACK_NAME: "jQuery1910499421933433041_1385598221584"
	};

	var _DEFAULT_SEARCH_STAGE = "qa";

	var _apiConfig = {
		domain: null,
		stage: _DEFAULT_SEARCH_STAGE
	};

	function _invoke(fn, ctx, args) {
		try {
			return fn.apply((ctx || null), args);
		} catch (e) {
			sga.console.error("Invoke failure: " + e);
		}
		return undefined;
	}

	function _extractPimResponseData(data, cbSuccess, cbError) {
		var res = data.response;
		if (res && res.statusCode === 200 && res.statusMessage === 'OK') {
			if (res.resultData) {
				return {
					callback: cbSuccess,
					data: res.resultData
				};
			}
		}
		return {
			callback: cbError
		};
	}

	function _validateUrl(url) {
		if (url.lastIndexOf('/') === url.length - 1)
			return url.substr(0, url.length - 1)

		return url;
	}

	function _init() {
		_apiConfig.domain = $.trim($("#esapiSearchDomain").val().split("/").splice(0, 3).join("/"));
		_apiConfig.stage = $.trim($("#apiStageInfo").val());
	}

	/**
	 * EPP는 product, support 2가지만 사용하며
	 * product tab의 데이터는 search api의 호출 결과를 표시하고
	 * support tab의 데이터는 es api의 호출 결과를 표시한다.
	 * product일 경우 호출 결과를 es api 호출 결과의 포맷에 맞게 mapping해야 하고
	 * convertApiDataToEsData 메소드가 결과값을 mapping하는 함수입니다.
	 */
	function convertApiDataToEsData(prdData, sppData, relData, params){
		let addProdctResult = false;
		let addSupportResult = false;
		
		let esObj = {
			response: {
				statusCode : 200,
				statusMessage : 'OK',
				siteCode : null,
				resultData : {
					common:	{
						siteCode : null,
						categoryTab : params.categoryTab,
						tabInfoList : [],
						originSearchValue : params.searchValue,
						searchValue : params.searchValue,
						searchCount : '0',
						startNum : '0',
						endNum : '0',
						relKeywords : null
					},
					resultList : null,
					countFilterList : null,
					countSupportProductFilterList : null
				}
			}
		};

		/**
		 * [S] resultData : common property setting
		 */
		//prdData result 체크하고 있으면 tabInfoList 추가
		if ( prdData && parseInt(prdData.response.resultData.common.totalRecord,10) > 0 ){
			let data = prdData.response.resultData;
			esObj.response.siteCode = prdData.response.resultData.common.siteCode;
			esObj.response.resultData.common.siteCode = prdData.response.resultData.common.siteCode;
			esObj.response.resultData.common.searchCount = prdData.response.resultData.common.totalRecord;
			esObj.response.resultData.common.startNum = prdData.response.resultData.common.fromRecord;
			esObj.response.resultData.common.endNum = prdData.response.resultData.common.toRecord;
			esObj.response.resultData.common.tabInfoList.push({tabType:'PRD',tabParam:'product',count:prdData.response.resultData.common.totalRecord});
			addProdctResult = true;
		}
		//sppData result 체크하고 있으면 tabInfoList 추가
		if ( sppData ){
			esObj.response.siteCode = sppData.response.resultData.common.siteCode;
			esObj.response.resultData.common.siteCode = sppData.response.resultData.common.siteCode;
			esObj.response.resultData.common.searchCount = sppData.response.resultData.common.searchCount;
			esObj.response.resultData.common.startNum = sppData.response.resultData.common.startNum;
			esObj.response.resultData.common.endNum = sppData.response.resultData.common.endNum;
			
			if ( sppData.response.resultData.common.tabInfoList != null ) { 
				sppData.response.resultData.common.tabInfoList.forEach(function(sppTab, ids){
					if ( 'SPP' === sppTab.tabType && parseInt(sppTab.count,10) > 0 ){
						esObj.response.resultData.common.tabInfoList.push({tabType:'SPP',tabParam:'support',count:sppTab.count});
						addSupportResult = true;
						return false;
					}
				});
			}
		}
		
		//common relatedKeyword setting
		if ( relData 
			&& relData.response.resultData.common.relatedKeywords != null 
			&& relData.response.resultData.common.relatedKeywords.length > 0 ){
			esObj.response.resultData.common.relatedKeywords = relData.response.resultData.common.relatedKeywords;
		} else {
			if ( params.categoryTab === 'support' ){
				esObj.response.resultData.common.relatedKeywords = sppData.response.resultData.common.relatedKeywords;
			}
		}
		
		/**
		 * [E] resultData : common property setting
		 */

		if ( 'product' === params.categoryTab ) {
			if ( addProdctResult ){
				addSupportResult = false;				
			} else {
				if ( sppData ){
					addSupportResult = true;
					params.categoryTab = 'support';
				}
			} 
		} else {
			if ( addSupportResult ){
				addProdctResult = false;
			} else {
				if ( prdData ) {
					addProdctResult = true;
					params.categoryTab = 'product';
				}
			} 
		}
		
		/**
		 * [S] resultData : resultList property setting
		 */
		//categoryTab product이고 결과가 있을 경우 prdData로 resultList 구성
		//categoryTab support이면 sppData로 resultList 구성
		if ( addProdctResult ) {
			let data = prdData.response.resultData;
			if ( data.productList ){
				esObj.response.resultData.resultList = [];
				let result = {
					resultCount : data.common.totalRecord,
					resultType : params.categoryTab,
					contentList : []
				};
				
				data.productList.forEach(function(schObj, idx){
					let contents = {};
					contents.contentSource = "Products";
					contents.contentType = "Products";
					contents.sourceType = "B2CProduct";
					contents.familyRecord = schObj.familyRecord;
					contents.title = "";
					contents.description = "";
					contents.linkUrl = "";
					contents.thumbnailUrl = "";
					contents.familyDisplayName = schObj.fmyMarketingName;
					contents.categoryTypeCode = schObj.categorySubTypeCode.substring(0,4) + "00" + schObj.categorySubTypeCode.substring(6);
					contents.skuDisplayable = "";
					contents.categorySubTypeCode = schObj.categorySubTypeCode;
					contents.simplePdYN = schObj.simplePdYN;
					contents.fmyIconType = "";
					contents.fmyIconStDate = "";
					contents.fmyIconEndDate = "";
					contents.displaySortTitle = "";
					if ( schObj.modelList.length > 0 ){
						let modelInfo = {};
						contents.modelList = new Array();
						schObj.modelList.forEach(function(modelObj, jdx){
							if ( "Y" === modelObj.selected ) {
								modelInfo.modelCode = modelObj.modelCode;
								modelInfo.modelName = modelObj.modelName;
								modelInfo.thumbUrl = modelObj.thumbUrl;
								contents.thumbnailUrl = modelObj.thumbUrl;
								modelInfo.thumbUrlAlt = modelObj.thumbUrlAlt;
								modelInfo.pdpURL = modelObj.pdpUrl;
								modelInfo.mdlRegTypeCd = "M";
								modelInfo.energyLabelGrade = modelObj.energyLabelGrade;
								modelInfo.energyLabelClass1 = modelObj.energyLabelClass1;
								modelInfo.energyLabelClass2 = modelObj.energyLabelClass2;
								modelInfo.energyFileUrl = modelObj.energyFileUrl;
								modelInfo.selected = modelObj.selected;
								modelInfo.ficheFileUrl = modelObj.ficheFileUrl;
								modelInfo.sno = "";
								modelInfo.dispNm = modelObj.displayName;
								//title, displaySortName 변경 : fmyMarketingName -> model display name
								contents.title = modelObj.displayName;
								contents.displaySortTitle = modelObj.displayName;
								
								modelInfo.currentPrice = "";
								modelInfo.retailPrice = "";
								modelInfo.currentPriceDisplay = "";
								modelInfo.retailPriceDisplay = "";
								modelInfo.wtbUseYN = modelObj.wtbUseFlag;
								modelInfo.energyLabelClass = modelObj.energyLabelClass;
								modelInfo.ratings = modelObj.ratings;
								modelInfo.reviewsCount = modelObj.reviewCount;
								modelInfo.linkUrlReview = modelObj.reviewUrl;
								modelInfo.fmyFilters = [];
								modelInfo.shopSKU = modelObj.shopSKU;
								modelInfo.iconTypeCd = "";
								modelInfo.iconTitle = "";
								modelInfo.galleryImage = [];
								modelInfo.galleryImageAlt = [];
								modelInfo.linkUrlAccessories = "";
								modelInfo.linkUrlCompatible = "";
								modelInfo.linkUrlSpecs = "";
								modelInfo.regLinkUrl = "";
								modelInfo.supportLinkUrlManuals = "";
								modelInfo.supportLinkUrlAnswer = "";
								modelInfo.supportLinkUrl = modelObj.supportLinkUrl;
								modelInfo.b2bLinkUrl = "";
								modelInfo.originPdpUrl = modelObj.originPdpUrl;
								modelInfo.shopYN = "Y";
								modelInfo.storePromotions = (modelObj.storePromotions)? modelObj.storePromotions.map(promo => {return promo.promotionText}) : [];								
								modelInfo.storePromotions2 = modelObj.storePromotions;
								modelInfo.stockStatus = modelObj.stockStatusText;
								modelInfo.caculatorYN = "";
								modelInfo.priceCurrencyCode = "";
								modelInfo.priceCurrency = modelObj.priceDisplay;
								if('Hybris' === $('#shopIntegrationFlag').val()) {
									modelInfo.promotionPrice = "";
									if(modelObj.priceDisplay) {
										modelInfo.price = modelObj.price;
									} else {
										modelInfo.price = "";
									}
								} else {
									modelInfo.promotionPrice = modelObj.promotionPrice;
									modelInfo.price = modelObj.price;
								}
								modelInfo.promotionCurrencyCode = "";
								modelInfo.promotionPriceCurrency = modelObj.promotionPriceDisplay;
								modelInfo.saveInfoText = "";
								modelInfo.priceInfoText = "";
								modelInfo.offerYN = "";
								modelInfo.configuratorUrl = modelObj.configuratorUrl;
								modelInfo.shopFlag = "";
								modelInfo.nationFlag = "";
								modelInfo.ctaType = modelObj.ctaType;
								modelInfo.awardList = [];
								modelInfo.tradeInDesc = modelObj.tradeInDesc;
								modelInfo.tradeInFormattedDesc = modelObj.tradeInFormattedDesc;
								modelInfo.premiumCareDesc = modelObj.premiumCareDesc;
								modelInfo.premiumCareFormattedDesc = modelObj.premiumCareFormattedDesc;
								modelInfo.financingDesc = modelObj.financingDesc;
								modelInfo.financingFormattedDesc = modelObj.financingFormattedDesc;
								modelInfo.upgradeDesc = modelObj.upgradeDesc;
								modelInfo.upgradeFormattedDesc = modelObj.upgradeFormattedDesc;
								modelInfo.uspDesc = modelObj.usp;
								modelInfo.repairabilityIndex = modelObj.repairabilityIndex;
								modelInfo.repairabilityIndexPdfUrl = modelObj.repairabilityIndexPdfUrl;
								modelInfo.newEnergyLabel = modelObj.newEnergyLabel;
								
								contents.modelList.push(modelInfo);
							}
						});
					}
					
					result.contentList.push(contents);
				});
			
				esObj.response.resultData.resultList.push(result);
			}
			
			if ( data.navGroups ){
				esObj.response.resultData.categoryFilterList = [];
				esObj.response.resultData.countFilterList = [];
				esObj.response.resultData.countSupportProductFilterList = [];
				
				let categoryFilterList = new Array();
				let categoryFilter = {};
				categoryFilter.tabType = "PRD";
				categoryFilter.tabParam = "product";
				categoryFilter.filterList = new Array();
				let filterList = null;
				const groupFilterList = data.navGroups.filter(cate => 'GROUP' === cate.categoryFilterName).map(gf => gf.productFinderFilter).flat().map(pfFilter => setEsFilter(pfFilter, 0));
				const typeFilterList = data.navGroups.filter(cate => 'TYPE' === cate.categoryFilterName).map(tf => tf.productFinderFilter).flat().map(pfFilter => setEsFilter(pfFilter, 1));
				if ( groupFilterList.length > 0 ){
					groupFilterList.forEach(function(group, idx){
						typeFilterList.forEach(function(type, jdx){
							let myParent = type.code.substring(0,2) + '00' + type.code.substring(4);
							if ( group.code === myParent ){
								group.filterList.push(type);
							}
						});
					});
					
					categoryFilter.filterList = groupFilterList;
					categoryFilterList.push(categoryFilter);
					
					esObj.response.resultData.categoryFilterList = categoryFilterList;
				}
				
				if ( typeFilterList.length > 0 ){
					typeFilterList.forEach(function(tf, idx){
						let filterCount = {
							code : 'I' + tf.code,
							count : '' + tf.count
						};
						esObj.response.resultData.countFilterList.push(filterCount);
					});
				}
			}
		}
		
		if ( addSupportResult ) {
			let data = sppData.response.resultData;
			if ( data.resultList ){
				esObj.response.resultData.resultList = data.resultList;
			}
			if ( data.countFilterList ){
				esObj.response.resultData.countFilterList = data.countFilterList;
			}
			if ( data.countSupportProductFilterList ){
				esObj.response.resultData.countSupportProductFilterList = data.countSupportProductFilterList;
			}
		}
		/**
		 * [S] resultData : resultList property setting
		 */
		
		//product, support 모두 없을 경우 return object null 처리
		if ( !addProdctResult && !addSupportResult ) {
			esObj = null;
		}
		
		return esObj;
	}
	
	/**
	 * Search api navGroups filter를 ES Api categoryFilterList object로 변환한다.
	 * 'count' attribute는 countFilterList에서 사용하기 위해 추가함.
	 */
	function setEsFilter(schFilter, depth){
		let filObj = {
			localName 	: schFilter.filterLocalName,
			code 		: schFilter.filterSearchCode,
			regName 	: schFilter.filterRegName,
			depth		: depth,
			selectable	: schFilter.selectable,
			selected	: schFilter.selected,
			count		: schFilter.filterCount,
			filterList	: []								
		};
		return filObj;		
	}
	
	search.apibase = {

		API_DATASERVICE: "/aemapi/v6/search/ds.do",

		invokeSafeLocal: _invoke,

		config: _apiConfig,

		/**
		 * cfg params: {
		 * 	success,
		 *  error,
		 *  context,
		 * }
		 */
		invokeFront: function (apiPath, params, cfg) {
			$.ajax({
				type: "GET",
				data: params,
				url: this.API_DATASERVICE + "/front" + apiPath,
				success: function (data) {
					var r = _extractPimResponseData(data, cfg.success, cfg.error);
					if (r.callback) {
						_invoke(r.callback, cfg.context, [r.data]);
					}
				},
				error: function (data) {
					if (cfg.error) {
						_invoke(cfg.error, cfg.context, [data]);
					}
				}
			});
		},

		/**
		 * cfg params: {
		 * 	success,
		 *  error,
		 *  context,
		 * }
		 */
		invokeSearch: function (apiPath, params, cfg) {
			var cbFnName = search.config.CALLBACK_NAME;
			win[cbFnName] = function (data) {
				if (data && data.response && data.response.statusCode === 200 && data.response.resultData) {
					_invoke(cfg.success, cfg.context, [data.response.resultData]);
				} else {
					if (cfg.error) {
						_invoke(cfg.error, cfg.context, [data.response || {}]);
					}
				}
				delete window[cbFnName];
			};

			params.callback = cbFnName;
			params.stage = this.config.stage;

			$.ajax({
				type: "GET",
				data: params,
				url: _validateUrl(this.config.domain) + apiPath,
				success: function (data) {
					if (win[cbFnName]) {
						win[cbFnName](data);
					}
				}
			});
		},
		
		invokeSearchForEpp: function (searchApiPath, esApiPath, searchParams, params, cfg) {
			let originCategoryTab = params.categoryTab;
			
			let cbFnName = search.config.CALLBACK_NAME;
			win[cbFnName] = function (data) {
				if (data && data.response && data.response.statusCode === 200 && data.response.resultData) {
					_invoke(cfg.success, cfg.context, [data.response.resultData]);
				} else {
					if (cfg.error) {
						_invoke(cfg.error, cfg.context, [data.response || {}]);
					}
				}
				delete window[cbFnName];
			};
			
			params.callback = cbFnName;
			params.stage = this.config.stage;
			
			$.when(
				search.apibase.productCallForEpp(searchApiPath, searchParams, params),
				search.apibase.supportCallForEpp(esApiPath, params),
				search.apibase.relatedCallForEpp(esApiPath, params) 
			).done(function(pData, sData, rData){
				params.categoryTab = originCategoryTab;
				const mappingData = convertApiDataToEsData(pData[0], sData[0], rData[0], params);
				if ( mappingData ){
					if (win[cbFnName]) {
						win[cbFnName](mappingData);
					}
				} else {
					_invoke(cfg.success, cfg.context, [{}]);
				}
			}).fail(function(err){
				if (cfg.error) {
					_invoke(cfg.error, cfg.context, [err.response || {}]);
				}				
			});
		},
		
		productCallForEpp : function(searchApiPath, searchParams, params) {
			params.categoryTab = 'product';
			return $.ajax({
						type: "GET",
						data: searchParams,
						url: $.trim($("#searchDomain").val()) + searchApiPath,
						dataType: "json"
					});						
		},

		supportCallForEpp : function(esApiPath, params){
			// epp ru 국가 product tab만 사용(support api 호출 불필요)
			if ( params.siteCd !== 'ru' ){
				params.categoryTab = 'support';
				params.num = 20;
				return	$.ajax({
					type: "GET",
					data: params,
					url: _validateUrl(this.config.domain) + esApiPath
				});
			} else {
				return {};
			}
		},
		
		relatedCallForEpp : function(esApiPath, params){
			if ( 'Y' === params.firstSearchYN ){
				params.num = 1;
				params.categoryTab = 'product';
				return	$.ajax({
							type: "GET",
							data: params,
							url: _validateUrl(this.config.domain) + esApiPath
						});					
			} else {
				return {};
			}
		}
		
	};

	//
	// Initialize module
	//
	$(function () {
		_init();
	});

})(window, window.jQuery, window.smg.sga);
(function ($, sga, search, api) {
	'use strict';

	var b2bFlag = ($("#b2bFlag").val() === 'Y');
	var _metadata = {};
	var _filterSet = {}; // key: siteCode, value: ordered cateory map
	var _filterMap = {};
	var _parmMap = {};
	var _parms = {};
	var eppFlag = ($("#eppFlag").val() === 'Y');
	
	$("div.sga-metadata.sga-component-scope").find("div[data-key]").each(function () {
		var $this = $(this),
			key = $.trim($this.attr("data-key") || "");
		_metadata[key] = $.trim($this.text());
	});
	if (_metadata.filterSet) {
		_filterSet = $.parseJSON(_metadata.filterSet);
	}
	var isNotNull = function(_str){

		return !fnIsNull(_str) && _str != "null";
				
	};
	function _setFilterMap(data) {
		var filterMap = {};

		if (Array.isArray(data) && data.length > 0) {
			for (var i = 0; i < data.length; i++) {
				Object.assign(filterMap, setFilterMap(data[i]));
			}
		} else if (data) {
			if (data.hasOwnProperty('code') && data.hasOwnProperty('localName')) {
				filterMap[data.code] = data.localName;
			}
			if (data.filterList) Object.assign(filterMap, setFilterMap(data.filterList));
		}
		return filterMap;
	}

	_filterMap = _setFilterMap(_filterSet.categoryFilterList);

	var _apiClient = {
		initTargetParm: function () {
			_parmMap = {};
		},
		setSearchKeyword: function (q) {
			this.q = encodeURIComponent(q);
		},
		setTargetParm: function (id) {
			this.id = id;

			if (!_parmMap.hasOwnProperty(this.id)) {
				_parmMap[this.id] = {
					start: 0,
					num: 20,
					sort: "",
					filterCd: "",
					firstSearchYN: "N",
					categoryTab: this.id,
					searchValue: this.q
				};
			}
			_parms = _parmMap[this.id];
		},
		initParm: function () {
			_parms = {
				start: 0,
				num: 20,
				sort: "",
				filterCd: "",
				firstSearchYN: "N"
			};
		},

		setParm: function (pramId, value) {
			_parms[pramId] = value;
		},

		getParm: function () {
			return _parms;
		},

		deleteParm: function (pramId) {
			delete _parms[pramId];
		},
		/**
		 * @param siteCd 사이트 코드
		 * @param params {
		 *	searchValue: 검색어,
		 *	categoryTab: 탭 유형 (all, product, accessory, support),
		 *	start: 목록 시작,
		 *	num: 목록 수
		 *	sort: 정렬 (연관순(relevance), 최신순(date_desc), 오래된순(date_asc), 인기순(popularity), 상품평순(rating),
		 *	      가나다라순(text_asc), 가나다역순(text_desc), 높은 가격순(price_desc), 낮은 가격순(price_asc)),
		 *	filterCd: 선택된 필터 코드 CSV,
		 *	firstSearchYN: Y/N
		 *	      Y : 각 탭별 조회결과목록(resultList), 카테고리목록(categoryFilterList), 베스트매치목록(bestMatchList), 연관키워드목록(relatedKeywords), 탭정보목록(tabInfoList)
		 *	      N : 각 탭별 조회결과목록(resultList), 카테고리목록(categoryFilterList)
		 * }
		 * @param cfg {
		 *	success: callback function for success
		 *	error: callback function for error
		 * }
		 */
		searchForCategory: function (siteCd, params, cfg) {
            //shopfaq이 #으로 올경우 support로 대체
            if(this.id==='shopfaq'){
                this.id='support';
                params.categoryTab='support';
                params.filterCd = 'S70000000';
            }
            
            params.siteCd = siteCd;
			_parmMap[this.id] = params;

			// ae, ae_ar, levant, levant_ar, n_africa 관련 :: S
			if(siteCd === "ae" || siteCd === "ae_ar" || siteCd === "levant" || siteCd === "levant_ar" || siteCd === "n_africa"){
				let dotcom_multistore = $.cookies.get("estoreSitecode") ? $.cookies.get("estoreSitecode").toString() : '';
				let shopSiteCd = "";
				if(siteCd === "ae" || siteCd==="ae_ar"){
					//NOTICE : dotcomMultistore 값이 존재 하는 경우 ae, ae_ar, kw, kw_ar, om, om_ar, bh, bh_ar 인 경우만 세팅 
					if(dotcom_multistore === "ae" || dotcom_multistore === "ae_ar" || dotcom_multistore === "kw" || dotcom_multistore === "kw_ar" || dotcom_multistore === "om" || dotcom_multistore === "om_ar" || dotcom_multistore === "bh" || dotcom_multistore === "bh_ar"
						|| dotcom_multistore === "qa" || dotcom_multistore === "qa_ar"
						) {
						shopSiteCd = isNotNull(dotcom_multistore) ? dotcom_multistore : siteCd;
					}else{
						shopSiteCd = siteCd;
					}
				} else if(siteCd === "levant"){
			    	shopSiteCd = "jo";
			    } else if(siteCd === "levant_ar"){
			    	shopSiteCd = "jo_ar";
			    } else if(siteCd === "n_africa"){
			    	shopSiteCd = "ma";
			    }
			    params.shopSiteCd = shopSiteCd;
		    }
			// ae, ae_ar, levant, levant_ar, n_africa 관련 :: E
			//only SECA 
			let dotcom_countryRegion = $.cookies.get("country_region") ? $.cookies.get("country_region").toString() : '';
			let regionCode = ''; // default CA-ON
			if(siteCd === "ca" || siteCd === "ca_fr"){
				if(isNotNull(dotcom_countryRegion)) {
					regionCode = dotcom_countryRegion;
				} else {
					regionCode = 'CA-ON'; // default CA-ON
				}
				params['regionCode'] = regionCode;
			}
			if (b2bFlag) {
				api.invokeSearch("/business/v6/search/query", params, cfg);
			} else {
				if ( !eppFlag ) {
					api.invokeSearch("/search/query/v6", params, cfg);
				} else {
					let apiUri =  '/' + $('#apiStageInfo').val() + '/epp/v2/search/query/';
					let intgFlag = $('#shopIntegrationFlag').val();
					if ( 'GPv2' === intgFlag ){
						apiUri += 'gpv2';
					} else if ( 'Hybris-intg' === intgFlag ){
						apiUri += 'hybris';
					} else if ( 'Hybris-new' === intgFlag ){
						apiUri += 'newhybris';
					} else {
						apiUri += 'global';
					}
					let schParams = {};
					schParams.siteCode = SITE_CD;
					schParams.companyCode = $.trim($('#companyCode').val());
					schParams.start = params.start + 1;
					schParams.num = 20;
					schParams.onlyFilterInfoYN = 'N';
					if ( params.categoryTab == 'product' ){
						schParams.sort = params.sort;
					} else {
						schParams.sort = '';
					}
					schParams.q = decodeURIComponent(this.q);
					if ( params.filterCd ){
						schParams.typeFilter = params.filterCd.replace(/I/g, '');
					} else {
						schParams.typeFilter = '';
					}
					
					//22.09.20 ca,ca_fr 지역코드 파라미터 추가 
					if( siteCd === "ca" || siteCd === "ca_fr" ){
						schParams.regionCode = regionCode;
					}
					
					//[S] 22.09.27 user group pricing parameter setting
					let isugp = isNotNull(window.sg.epp.common.isUserGroupPricing) ? window.sg.epp.common.isUserGroupPricing : false;
					if ( isugp ) {
						let groupName = isNotNull(window.sg.epp.common.groupName) ? window.sg.epp.common.groupName : '';
						schParams.groupName = groupName;
					}
					//[E] 22.09.27 user group pricing parameter setting
					
					api.invokeSearchForEpp(apiUri, "/search/query/v6", schParams, params, cfg);						
				}
			}
		},
		
		getMatchedContetns: function (siteCd, searchValue, cfg) {
			var param = {
				siteCd: siteCd,
				searchValue: searchValue
			};

			if (b2bFlag) {
				api.invokeSearch("/business/v6/search/suggest", param, cfg);
			} else {
				api.invokeSearch("/search/suggest/v6", param, cfg);
			}
		},

		getFilterName: function (code) {
			return _filterMap[code];
		}

	};
	search.apiClient = search.apiClient || _apiClient;

})(window.jQuery, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apibase);
(function(win, $, doc, sga, search) {
    'use strict';

    var _$COMP = $('.sc-g-search-templates');

    if(_$COMP != null && _$COMP.length > 0 ){
        var _template = sga.template.compile($('div.sga-templates'));
        search.template = search.template || _template;
    }

})(window, jQuery, document, window.smg.sga, window.smg.sga.search);
(() => {
  const $q = window.sg.common.$q;
  const utils = window.sg.common.utils;
  let preBreakpoints = null;

  function resize() {
    const moveSupportInfo = document.querySelectorAll('.search-support-info');
    if (moveSupportInfo.length === 0) {
      return;
    }
    const moveRelatedSearches = document.querySelectorAll('.related-searches');
    const moveSupportInfoWrapPc = document.querySelector('#all .result__side');
    const moveWrapMo = document.querySelector('#all .result__panel');
    const moveRelatedSearchesWrapPc = document.getElementById('all');

    if(preBreakpoints !== utils.getCurrentDevice() ){
      if( utils.getCurrentDevice() === 'desktop' ) {
        [...moveRelatedSearches].forEach((el) => {
          moveRelatedSearchesWrapPc.appendChild(el);
        });
        [...moveSupportInfo].forEach((el) => {
          moveSupportInfoWrapPc.appendChild(el);
        });
      }else{
        [...moveRelatedSearches].forEach((el) => {
          moveWrapMo.appendChild(el);
        });
        [...moveSupportInfo].forEach((el) => {
          moveWrapMo.appendChild(el);
        });
      }
      preBreakpoints = utils.getCurrentDevice();
    }
  }

  window.sg.components.srp = {
    resize,
  };
  
  $q.ready(() => {
    resize();
    $q(window).off('resize',resize).on('resize',resize);
  });
})();

(() => {
  const $q = window.sg.common.$q;

  let getStockAlertPopupElements = {};
  let requiredCheckboxesCount = 0;

  function getElements() {
    getStockAlertPopupElements = {
      getStockAlertPopup: document.querySelector('.get-stock-alert-popup'),
      getStockAlertPopupDimmed: document.querySelector('.get-stock-alert-popup__dimmed'),
      getStockAlertPopupContents: document.querySelector('.get-stock-alert-popup__contents'),
      getStockAlertPopupInnerWrap: document.querySelector('.get-stock-alert-popup__inner-wrap'),
      getStockAlertPopupInputWrap: document.querySelector('.get-stock-alert-popup__text-field-wrap .text-field-v2'),
      getStockAlertPopupInput: document.querySelector('.get-stock-alert-popup__text-field-wrap input'),
      getStockAlertPopupCheckboxes: document.querySelectorAll('.get-stock-alert-popup__checkbox'),
      getStockAlertPopupRequiredCheckboxes: document.querySelectorAll('.get-stock-alert-popup__checkbox-wrap.is-required .get-stock-alert-popup__checkbox'),
      getStockAlertPopupBtnWrap: document.querySelector('.get-stock-alert-popup__btn-wrap'),
      getStockAlertPopupBtnClose: document.querySelector('.get-stock-alert-popup__btn-close'),
      getStockAlertPopupBtnSubmit: document.querySelector('.get-stock-alert-popup__btn-submit'),
      getStockAlertPopupClose: document.querySelectorAll('.get-stock-alert-popup__close'),
      getStockAlertPopupFinalWrap: document.querySelector('.get-stock-alert-popup__final-wrap'),
      getStockAlertPopupFinalDesc: document.querySelector('.get-stock-alert-popup__final-desc'),
      getStockAlertPopupFinalBtnWrap: document.querySelector('.get-stock-alert-popup__final-btn-wrap'),
      getStockAlertPopupFinalBtnClose: document.querySelector('.get-stock-alert-popup__final-btn-close'),
      scrollbarEl: document.querySelector('.scrollbar'),
      vertScrollbarWrapEl: document.querySelector('.scrollbar__wrap'),
    };
  }

  function init() {
    getElements();

    if (!getStockAlertPopupElements.getStockAlertPopup) {
      return;
    }

    bindEvents();
    changeInnerWrapMaxHeight();
  }

  function bindEvents() {
    getStockAlertPopupElements.getStockAlertPopupInput.addEventListener('input', () => {
      bindInputEvent();
    });

    for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length; i++) {
      getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes[i].addEventListener('click', () => {
        bindCheckboxEvent();
      });
    }

    if (getStockAlertPopupElements.getStockAlertPopupBtnClose) {
      getStockAlertPopupElements.getStockAlertPopupBtnClose.addEventListener('click', () => {
        close();
      });
    }

    getStockAlertPopupElements.getStockAlertPopupFinalBtnClose.addEventListener('click', () => {
      close();
    });

    for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupClose.length; i++) {
      getStockAlertPopupElements.getStockAlertPopupClose[i].addEventListener('click', () => {
        close();
      });
    }

    window.addEventListener('resize', () => {
      changeInnerWrapMaxHeight();
    });
  }

  function showFinalPopup() {
    getStockAlertPopupElements.getStockAlertPopupContents.style.display = 'none';
    getStockAlertPopupElements.getStockAlertPopupDimmed.style.display = 'block';
    getStockAlertPopupElements.getStockAlertPopupFinalWrap.style.display = 'block';
    changeFinalPopupMaxHeight();

    window.addEventListener('resize', () => {
      changeFinalPopupMaxHeight();
    });
  }

  function bindInputEvent() {
    if (getStockAlertPopupElements.getStockAlertPopupInput.value.length !== 0) {
      requiredCheckboxesCount = 0;

      for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length; i++) {
        if (getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes[i].checked) {
          requiredCheckboxesCount++;
        }
      }

      if (getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length === requiredCheckboxesCount) {
        getStockAlertPopupElements.getStockAlertPopupBtnSubmit.classList.remove('cta--disabled');
      } else {
        getStockAlertPopupElements.getStockAlertPopupBtnSubmit.classList.add('cta--disabled');
      }
    } else {
      getStockAlertPopupElements.getStockAlertPopupBtnSubmit.classList.add('cta--disabled');
    }
  }

  function bindCheckboxEvent() {
    requiredCheckboxesCount = 0;

    for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length; i++) {
      if (getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes[i].checked) {
        requiredCheckboxesCount++;
      }
    }

    if (getStockAlertPopupElements.getStockAlertPopupInput.value.length !== 0 && (getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length === requiredCheckboxesCount)) {
      getStockAlertPopupElements.getStockAlertPopupBtnSubmit.classList.remove('cta--disabled');
    } else {
      getStockAlertPopupElements.getStockAlertPopupBtnSubmit.classList.add('cta--disabled');
    }
  }

  function close() {
    getStockAlertPopupElements.getStockAlertPopupInput.value = '';
    getStockAlertPopupElements.getStockAlertPopupInputWrap.className = 'text-field-v2';

    for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupCheckboxes.length; i++) {
      getStockAlertPopupElements.getStockAlertPopupCheckboxes[i].checked = false;
    }

    getStockAlertPopupElements.getStockAlertPopupBtnSubmit.classList.add('cta--disabled');
    getStockAlertPopupElements.getStockAlertPopupContents.style.display = 'block';
    getStockAlertPopupElements.getStockAlertPopupFinalWrap.style.display = 'none';
    getStockAlertPopupElements.getStockAlertPopup.style.display = 'none';

    document.body.removeAttribute('style');
  }

  function changeInnerWrapMaxHeight() {
    getStockAlertPopupElements.vertScrollbarWrapEl.style.maxHeight = `${window.innerHeight - ((getStockAlertPopupElements.getStockAlertPopupInnerWrap.getBoundingClientRect().top - getStockAlertPopupElements.getStockAlertPopupContents.getBoundingClientRect().top) * 2) - getStockAlertPopupElements.getStockAlertPopupBtnWrap.getBoundingClientRect().height}px`;
    window.sg.common.scrollbar.resize(getStockAlertPopupElements.scrollbarEl);
  }

  function changeFinalPopupMaxHeight() {
    getStockAlertPopupElements.vertScrollbarWrapEl.style.maxHeight = `${window.innerHeight - ((getStockAlertPopupElements.getStockAlertPopupFinalDesc.getBoundingClientRect().top - getStockAlertPopupElements.getStockAlertPopupFinalWrap.getBoundingClientRect().top) * 2) - getStockAlertPopupElements.getStockAlertPopupFinalBtnWrap.getBoundingClientRect().height}px`;
    window.sg.common.scrollbar.resize(getStockAlertPopupElements.scrollbarEl);
  }

  function reInit() {
    getStockAlertPopupElements.getStockAlertPopupInput.removeEventListener('input', () => {
      bindInputEvent();
    });

    for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length; i++) {
      getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes[i].removeEventListener('click', () => {
        bindCheckboxEvent();
      });
    }

    getElements();

    getStockAlertPopupElements.getStockAlertPopupInput.addEventListener('input', () => {
      bindInputEvent();
    });

    for (let i = 0; i < getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes.length; i++) {
      getStockAlertPopupElements.getStockAlertPopupRequiredCheckboxes[i].addEventListener('click', () => {
        bindCheckboxEvent();
      });
    }
  }

  window.sg.components.getStockAlertPopup = { init, reInit, showFinalPopup };

  $q.ready(() => init());
})();

(function ($, search) {
    'use strict';
    var b2bFlage = false;
    var nonShopFlag = $("#nonShopFlag").val();
    var srpStoreDomain = $("#srpStoreDomain").val();
    var srpStoreDomainB2b = $("#srpStoreDomainB2b").val();
    var storeSiteCode = $("#srpStoreSiteCode").val();
    var hreflang = $("#localLang").val();
    var multiLanguageYN = $("#multiLanguageYn").val();
    var isGpv2 = $("#isSrpGpv2Flag").val();
    var isNewHybrisFlag = $('#isSrpNewHybrisFlag').val();						//new-hybris
    var srpShopIntegrationFlagB2b = $("#srpShopIntegrationFlagB2b").val();			//b2b
    var siteCode = $("#siteCode").val();
    var countryIsoCode = $("#countryIsoCode").val();
    var TnC_SITE = ["uk", "fr", "be", "be_fr", "nl", "de", "pl"];
    var getStockAlertPopup = $(".get-stock-alert-popup");
    var getStockTextField = getStockAlertPopup.find(".text-field-v2");
    var tempProductCode = "";
    var eppFlag = $('#eppFlag').val(); 
    
    Granite.I18n.setLocale($("#language").val());

    var hideError = function () {
        getStockTextField.removeClass("error");
    }
    var showError = function () {
        getStockTextField.addClass("error");
    }
    var popupClose = function () {
        getStockAlertPopup.find(".get-stock-alert-popup__close").trigger("click");
    }

    var showFinalWrap = function (text) {
        var finalDesc = getStockAlertPopup.find(".get-stock-alert-popup__final-desc")

        finalDesc.html(text);
        window.sg.components.getStockAlertPopup.showFinalPopup();
    }

    var openSuccess = function () {
        var successText = "";
        if(siteCode == "in"){
            successText = Granite.I18n.get("We will notify you when inventory is added.");
        }else{
            successText = Granite.I18n.get("We will email you when inventory is added.");
        }
        successText += "<br>" + Granite.I18n.get("Thank you.");
        showFinalWrap(successText);
    }

    var emailValidCheck = function (addr) {
        if (!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(addr)) {
            return false;
        }
        return true;
    }

    var phoneValidCheck = function (phone) {
        if(!/^[0-9]{10}$/.test(phone)){
            return false;
        }
        return true;
    }

    var isNotNull = function(_str){
        return !fnIsNull(_str) && _str != "null";
    };
    /*
    var callInStockApiNonShop = function(emailAddr){
        if (siteCode == "ru"){
            $.ajax({
                url : storeDomain + "/" + siteCode + "/ng/p4v1/stockNotification/register",
                type : "GET",
                data : {
                    "emailAddress" : emailAddr,
                    "productCode" : tempProductCode
                },
                dataType : "jsonp",
                jsonp : "callback",
                timeout : 10000,
                success : function(data){
                    var resultCode,  resultMessage;
                    if(data != null && data != undefined && data.hasOwnProperty('resultCode') && data.hasOwnProperty('resultMessage')){
                        resultCode = data.resultCode;
                        resultMessage = data.resultMessage;
                    }
                    
                    if(resultCode == "0000" && resultMessage == "SUCCESS"){
                        hideError();openSuccess();
                    }else{
                        showError();
                    }
                },error : function(){
                    if(siteCode=="ae" || siteCode=="ae_ar"){
                        // TODO 예외처리 (체크박스)
                        $("#remIdChkYN").attr('value','N');
                        $("#getStockAlertSubmit").addClass('s-btn-disabled');
                        $("#remIdChkYN").attr('checked',false);
                    }
                    hideError();popupClose();
                }
            });
        } else {
            $.ajax({
                url : storeDomain + "/" + siteCode + "/ng/p4v1/stockNotification/register",
                type : "POST",
                contentType : "application/x-www-form-urlencoded",
                data : {
                    "emailAddress" : emailAddr,
                    "productCode" : tempProductCode
                },
                dataType : "json",
                crossDomain : true,
                timeout : 10000,
                success : function(data){
                    var resultCode,  resultMessage;
                    if(data != null && data != undefined && data.hasOwnProperty('resultCode') && data.hasOwnProperty('resultMessage')){
                        resultCode = data.resultCode;
                        resultMessage = data.resultMessage;
                    }
                    
                    if(resultCode == "0000" && resultMessage == "SUCCESS"){
                        hideError();openSuccess();
                    }else{
                        showError();
                    }
                },error : function(){
                    if(siteCode=="ae" || siteCode=="ae_ar"){
                        // TODO 예외처리 (체크박스)
                        $("#remIdChkYN").attr('value','N');
                        $("#getStockAlertSubmit").addClass('s-btn-disabled');
                        $("#remIdChkYN").attr('checked',false);
                    }
                    hideError();popupClose();
                }
            });
        }
    };
    */
    //new-hybris
    var callInStockNewHybrisApi = function (emailAddr) {
        var callInStockParam;
        var callInStockParamObj = {
            "emailAddress": emailAddr,
            "productCode": tempProductCode
        };
      
        var stockAlertUrl = srpStoreDomain + "/tokocommercewebservices/v2/" + siteCode + "/notifications/stockAlert";
        if(b2bFlage){
        	stockAlertUrl = srpStoreDomainB2b + "/tokocommercewebservices/v2/" + storeSiteCode + "/notifications/stockAlert";	
        }
        if ( 'Y' === eppFlag ){
        	let companyCode = $('#companyCode').val();
        	stockAlertUrl = srpStoreDomain + "/tokocommercewebservices/v2/" + companyCode + "/notifications/stockAlert";
        }
        
        $.ajax({
            headers: {
                "Content-Type": "application/json"
            },
            url: stockAlertUrl,
            type: 'POST',
            dataType : 'json',
            data: JSON.stringify(callInStockParamObj),
            crossDomain : true,
            xhrFields: {
                withCredentials: true
            },
            timeout: 20000,
            cache: true,
            success: function (data) {
                InStockApiCallback(data);
            },
            error: function () {
                hideError();
                popupClose();
            }
        });
       
    };
    
    var InStockApiCallback = function (data) {
        var resultCode, resultMessage;
        if (data != null && data.hasOwnProperty("resultCode") && data.hasOwnProperty("resultMessage")) {
            resultCode = data.resultCode;
            resultMessage = data.resultMessage;
        }

        if (data != null) {
            if ((resultCode === "0000" && resultMessage === "SUCCESS") || isNewHybrisFlag || srpShopIntegrationFlagB2b==='true') {			//new-hybris
                hideError();
                openSuccess();
            } else {
                showError();
            }
        } else {
            showError();
        }
    }

    var callInStockApi = function (emailAddr) {
    	var registerUrl = srpStoreDomain + "/" + siteCode + "/ng/p4v1/stockNotification/register";
    	if(b2bFlage){
    		registerUrl = srpStoreDomainB2b + "/" + siteCode + "/ng/p4v1/stockNotification/register";
    	}
        $.ajax({
            url: registerUrl,
            type: "POST",
            contentType : "application/x-www-form-urlencoded",
            data: {
                "emailAddress": emailAddr,
                "productCode": tempProductCode
            },
            xhrFields: {
                withCredentials: true
            },
            crossDomain: true,
            dataType: "json",
            jsonp: "callback",
            timeout: 10000,
            success: function (data) {
                var resultCode, resultMessage;
                if (data != null && data.hasOwnProperty("resultCode") && data.hasOwnProperty("resultMessage")) {
                    resultCode = data.resultCode;
                    resultMessage = data.resultMessage;
                }

                if (data != null) {
                    if (resultCode === "0000" && resultMessage === "SUCCESS") {
                        hideError();
                        openSuccess();
                    } else {
                        showError();
                    }
                } else {
                    showError();
                }
            },
            error: function () {
                /* nonshop 예외처리
                if(siteCode=="ae" || siteCode=="ae_ar"){
                    // TODO 예외처리 (체크박스)
                    $("#remIdChkYN").attr('value','N');
                    $("#remIdChkYN").attr('checked',false);
                }
                */
                hideError();
                popupClose();
            }
        });
    };

    var callInStockApiGpv2 = function (validJwtTkn, loginJwt, paramObj, successPopupMsg) {
        // 샵통합
    	var stockUrl = srpStoreDomain + "/v4/identity/notification/preferences/in-stock";
    	if(b2bFlage){
    		stockUrl = srpStoreDomainB2b + "/v4/identity/notification/preferences/in-stock";
    	}
        $.ajax({
            headers: {
                "Cache-Control": "no-cache",
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "x-ecom-app-id": "identity-store-global"
            },
            url: stockUrl,
            type: "PUT",
            data: paramObj,
            dataType: "json",
            timeout: 20000,
            xhrFields: {
                withCredentials: true
            },
            beforeSend: function (xhr) {
                /* Login 여부 체크 후 Login 되어있을 시 헤더값 추가 */
                if (validJwtTkn) {
                    xhr.setRequestHeader("x-ecom-jwt", loginJwt);
                }
                /* GPv2 api 호출 시 multiLanguageYN 이 Y인 경우  헤더 추가 */
                if (multiLanguageYN === "Y") {
                    xhr.setRequestHeader("x-ecom-locale", hreflang);
                }
            },
            success: function (data) {
                if (data != null) {
                    if (data["notification"] != null) {
                        if (data["notification"]["in-stock"]["is_active"]) {
                            if(successPopupMsg){
                                getStockAlertPopup.show();
                                //popup open시 scroll 제거
                                document.body.style.overflow = "hidden";
                                showFinalWrap(successPopupMsg);
                            }else{
                            	hideError();
                            	openSuccess();
                            }
                        } else {
                            showError();
                        }
                    }
                } else {
                    showError();
                }
            },
            error: function (e) {
                hideError();

                /* 네트워크 에러 시 error message 노출 */
                var errorText = Granite.I18n.get("ERROR");
                if (e.responseJSON != null) {
                    var errmsg = e.responseJSON;
                    if (errmsg.message != null && errmsg.message !== "") {
                        showFinalWrap(errmsg.message);
                    } else {
                        showFinalWrap(errorText);
                    }
                } else {
                    showFinalWrap(errorText);
                }
            }
        });
    };

    var isPhonenumber = function(phonenumber){
        if(phonenumber.length == 10 && phonenumber.indexOf("@")<0){
            return phoneValidCheck(phonenumber);
        }
        return false;
    }
    var inUserInstockReg = function (data) {
        var popupText = "";
        var sendData = {};

        if(data.login_type == "otp"){ //otp login
            if(isNotNull(data.user_info.email_address) && isNotNull(data.user_info.phone_number)){
                sendData.email = data.user_info.email_address;
                sendData.phone = data.user_info.phone_number;
            }else if(isNotNull(data.user_info.email_address)){
                sendData.email = data.user_info.email_address;
            }else if(isNotNull(data.user_info.phone_number)){
                sendData.phone = data.user_info.phone_number;
            }else if(isNotNull(data.user_identity.user_id)){
                if(isPhonenumber(data.user_identity.user_id)){
                    sendData.phone = data.user_identity.user_id;
                }else{
                    sendData.email = data.user_identity.user_id;
                }
            }
        }else{
            if(isNotNull(data.user_info.email_address) && isNotNull(data.user_info.otp_verified_phone_number)){
                sendData.email = data.user_info.email_address;
                sendData.phone = data.user_info.otp_verified_phone_number;
            }else if(isNotNull(data.user_info.email_address)){
                sendData.email = data.user_info.email_address;
            }else if(isNotNull(data.user_info.otp_verified_phone_number)){
                sendData.phone = data.user_info.otp_verified_phone_number;
            }
        }
        var suffix = " once the stock is available.<br><br>"+
                  "By providing your email/mobile number you agree to marketing communications & inventory alerts from Samsung on Email, SMS & WhatsApp.<br>"+
                  "By clicking submit you are agreeing to the above Terms and Conditions.";
        var paramStr = "";
        if(sendData.email && sendData.phone){
            popupText = Granite.I18n.get("You will be notified on registered email <b>{0}</b> & registered mobile number <b>+91 {1}</b>" + suffix, [sendData.email, sendData.phone]);
            paramStr = "{\"notification\":{\"in-stock\":{\"is_active\": true,\"skus\":{\"" + tempProductCode + "\":{}}}},\"email\" : \"" + sendData.email + "\",\"mobile\" : \"" + sendData.phone + "\"}";
        }else if(sendData.email){
                     popupText = Granite.I18n.get("You will be notified on registered email <b>{0}</b>" + suffix, sendData.email);
            paramStr = "{\"notification\":{\"in-stock\":{\"is_active\": true,\"skus\":{\"" + tempProductCode + "\":{}}}},\"email\" : \"" + sendData.email + "\"}";
        }else if(sendData.phone){
            popupText = Granite.I18n.get("You will be notified on registered mobile number <b>+91 {0}</b>" + suffix, sendData.phone);
            paramStr = "{\"notification\":{\"in-stock\":{\"is_active\": true,\"skus\":{\"" + tempProductCode + "\":{}}}},\"mobile\" : \"" + sendData.phone + "\"}";
        }

        var paramJson = JSON.parse(paramStr);
        var paramObj = JSON.stringify(paramJson);
        var loginJwt = $.cookies.get("jwt_" + countryIsoCode, {
            domain: ".samsung.com"
        });
        var validJwtTkn = false;

        if (loginJwt != null) {
            // jwt validate 체크
        	var validateUrl = srpStoreDomain + "/v1/sso/user/validate";
        	if(b2bFlage){
        		validateUrl = srpStoreDomainB2b + "/v1/sso/user/validate";
        	}
        	
            $.ajax({
                headers: {
                    "Cache-Control": "no-cache",
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*"
                },
                url: validateUrl,
                type: "POST",
                dataType: "json",
                data: JSON.stringify({
                    "jwt": loginJwt
                }),
                timeout: 10000,
                xhrFields: {
                    withCredentials: true
                },
                beforeSend: function (xhr) {
                    if (multiLanguageYN === "Y") {
                        xhr.setRequestHeader("x-ecom-locale", hreflang);
                    }
                },
                success: function (data) {
                    if (data.statusCode === 200 || data.statusCode === "200") {
                        validJwtTkn = true;
                    }
                    callInStockApiGpv2(validJwtTkn, loginJwt, paramObj, popupText);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    callInStockApiGpv2(validJwtTkn, loginJwt, paramObj, popupText);
                }
            });
        } else {
            callInStockApiGpv2(validJwtTkn, loginJwt, paramObj, popupText);
        }
    }
    
    var _getStockAlert = {
        bindEvent: function () {
            $(".result-list__item .result-cta .js-cta-stock").off("click");
            $(".result-list__item .result-cta .js-cta-stock").on("click", function () {
                // out of stock, not for sale 일 경우
                if ($(this).hasClass("result-cta__link--disabled")) {
                    return;
                }
                b2bFlage = false;
                sefault($(this));
            });
            
            $(".result-list__item .result-cta .js-cta-stock-b2b").off("click");
            $(".result-list__item .result-cta .js-cta-stock-b2b").on("click", function () {
                // out of stock, not for sale 일 경우
                if ($(this).hasClass("result-cta__link--disabled")) {
                    return;
                }
                
                b2bFlage = true;
                sefault($(this));
            });
        }
    };
    
    var sefault = function($target){
        var tempModelName = $target.attr("data-modelName");
        tempProductCode = $target.attr("data-modelcode");

        if(siteCode == "in" && login_user_info.login_type){
            inUserInstockReg(login_user_info);
        }else{
            getStockAlertPopup.find(".get-stock-alert-popup__btn-close").attr("data-modelcode", tempProductCode).attr("data-modelname", tempModelName);
            getStockAlertPopup.find(".get-stock-alert-popup__btn-submit").attr("data-modelcode", tempProductCode).attr("data-modelname", tempModelName);
            getStockAlertPopup.show();

            //popup open시 scroll 제거
            document.body.style.overflow = "hidden";
        }
        
        getStockAlertPopup.find('.get-stock-alert-popup__disclaimer p').eq(1).remove();
        if(b2bFlage == true){
        	getStockAlertPopup.find('.gpv2Flag').hide();
        	if(srpShopIntegrationFlagB2b !=='true' && $("#stockPrivacyPolicyB2b").val() !==''){
        		var html = '<p>' +$("#stockPrivacyPolicyB2b").val() +'</p>';
        		getStockAlertPopup.find('.get-stock-alert-popup__disclaimer').append(html);
        	}
        	
        }else{
            if(isGpv2 === 'Y'){
            	getStockAlertPopup.find('.gpv2Flag').show();
            }else{
            	getStockAlertPopup.find('.gpv2Flag').hide();
            }
            
            if(nonShopFlag !== '' && $("#stockPrivacyPolicy").val() !==''){
            	var html = '<p>' +$("#stockPrivacyPolicy").val() +'</p>';
            	getStockAlertPopup.find('.get-stock-alert-popup__disclaimer').append(html);
            }
        }
    }
    
    
    /* Get Stock Alerts 팝업 SUBMIT 클릭 Event */
    $(document).on("click", ".get-stock-alert-popup .get-stock-alert-popup__btn-submit:not(.cta--disabled)", function () {
        /* Get Stock Alerts 팝업 Error 표시 여부 */
        var emailAddr = $("#getStockAlertEmailInput").val();
        
        if(siteCode == "in"){
            if(emailAddr.length == 10 && emailAddr.indexOf("@")<0){
                if(!phoneValidCheck(emailAddr)){
                    showError();
                    return false;
                }
            }else if (!emailValidCheck(emailAddr)) {
                showError();
                return false;
            }
        }else{
            if (!emailValidCheck(emailAddr)) {
                showError();
                return false;
            }
        }
        
        hideError();

        if (isGpv2 === 'Y') {
            //샵통합
            var consents = "";
            /* eu 국가 T&C data */
            //if (siteCode == "uk" || siteCode == "fr" || siteCode == "be" || siteCode == "be_fr" || siteCode == "nl" || siteCode == "de") {
            if (TnC_SITE.includes(siteCode)) {
                var checkBox = getStockAlertPopup.find(".get-stock-alert-popup__checkbox");
                var idStr = "";
                consents = ",\"consents\": {";
                checkBox.each(function () {
                    var _this = $(this);
                    if (idStr.length > 0) {
                        idStr += ",";
                    }
                    idStr += "\"" + _this.attr("id") + "\": {\"is_accepted\": " + _this.is(":checked") + "}";
                });
                consents += idStr;
                consents += "}";
                if (idStr === "") {
                    consents = "";
                }
            }

            var paramStr = "{\"notification\":{\"in-stock\":{\"is_active\": true,\"skus\":{\"" + tempProductCode + "\":{}}}},\"email\" : \"" + emailAddr + "\"" + consents + "}";
            
            if(siteCode == "in" && isPhonenumber(emailAddr)){
                paramStr = "{\"notification\":{\"in-stock\":{\"is_active\": true,\"skus\":{\"" + tempProductCode + "\":{}}}},\"mobile\" : \"" + emailAddr + "\"" + consents + "}";
            }

            var paramJson = JSON.parse(paramStr);
            var paramObj = JSON.stringify(paramJson);
            var loginJwt = $.cookies.get("jwt_" + countryIsoCode, {
                domain: ".samsung.com"
            });
            var validJwtTkn = false;

            if (loginJwt != null) {
                // jwt validate 체크
            	var validateUrl = srpStoreDomain + "/v1/sso/user/validate";
            	if(b2bFlage){
            		validateUrl = srpStoreDomainB2b + "/v1/sso/user/validate";
            	}
                $.ajax({
                    headers: {
                        "Cache-Control": "no-cache",
                        "Content-Type": "application/json",
                        "Access-Control-Allow-Origin": "*"
                    },
                    url: validateUrl,
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify({
                        "jwt": loginJwt
                    }),
                    timeout: 10000,
                    xhrFields: {
                        withCredentials: true
                    },
                    beforeSend: function (xhr) {
                        if (multiLanguageYN === "Y") {
                            xhr.setRequestHeader("x-ecom-locale", hreflang);
                        }
                    },
                    success: function (data) {
                        if (data.statusCode === 200 || data.statusCode === "200") {
                            validJwtTkn = true;
                        }
                        callInStockApiGpv2(validJwtTkn, loginJwt, paramObj);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    	callInStockApiGpv2(validJwtTkn, loginJwt, paramObj);
                    }
                });
            } else {
                callInStockApiGpv2(validJwtTkn, loginJwt, paramObj);
            }
        } else if (isNewHybrisFlag === 'Y' || srpShopIntegrationFlagB2b==='true') {
        	callInStockNewHybrisApi(emailAddr);
        } else {
            // shop, nonshop
            callInStockApi(emailAddr);
        }
        return true;
    });

    search.getStockAlert = search.getStockAlert || _getStockAlert;

})(window.jQuery, window.smg.sga.search);
(function ($) {

	var srpStoreDomainB2b = $("#srpStoreDomainB2b").val();
	var storeDomain = $("#srpStoreDomain").val();
	
	var hreflang = $("#localLang").val();
	var multiLanguageYN = $("#multiLanguageYn").val();
	var isGpv2 = $("#isSrpGpv2Flag").val();
	var isNewHybrisFlag = $('#isSrpNewHybrisFlag').val();					//new-hybris
	var isB2bShopIntegrationFlag = $('#isB2bShopIntegrationFlag').val();	//b2b
	var siteCode = $("#siteCode").val();
	var storeSiteCode = $('#srpStoreSiteCode').val();
	
	var TnC_SITE = ["uk", "fr", "be", "be_fr", "nl", "de", "pl","id","ph","cn"];	//new-hybris
	var getStockAlertPopup = $(".get-stock-alert-popup");
	
	var gpv2TncInfo = [];
	var hewHybrisTncInfo = [];
	var b2BTncInfo = [];
	
	var getTncInfo = function () {
		$(".get-stock-alert-popup .get-stock-alert-popup__checkbox-container").html("");

		var url = storeDomain + "/v1/tnc";
		var param = {
			"display": "in_stock"
		};
		$.ajax({
			headers: {
				"Cache-Control": "no-cache",
				"Content-Type": "application/json",
				"Access-Control-Allow-Origin": "*"
			},
			type: "GET",
			url: url,
			data: param,
			dataType: "json",
			cache: true,
			timeout: 20000,
			xhrFields: {
				withCredentials: true
			},
			beforeSend: function (xhr) {
				if (multiLanguageYN === "Y") {
					xhr.setRequestHeader("x-ecom-locale", hreflang);
				}
			},
			success: function (data) {
				gpv2TncInfo = data;
			}
		});
	}
	
	//new-hybris
	var getTncInfoForNewHybris = function () {
		var url = storeDomain + "/tokocommercewebservices/v2/"+siteCode+"/tnc";
		var param = {
			"context": "PRODUCT",
            "value" : "stock_alert_tc"
		};
		$.ajax({
			type: "GET",
			url: url,
			data: param,
			dataType: "json",
			cache: true,
			timeout: 20000,
			xhrFields: {
				withCredentials: true
			},
            crossDomain: true,
			success: function (data) {
				hewHybrisTncInfo = data;
			}
		});
	}
	
	var getTncInfoForNewHybrisB2b = function () {
		var url = srpStoreDomainB2b + "/tokocommercewebservices/v2/"+storeSiteCode+"/tnc";
		var param = {
			"context": "PRODUCT",
            "value" : "stock_alert_tc"
		};
		$.ajax({
			type: "GET",
			url: url,
			data: param,
			dataType: "json",
			cache: true,
			timeout: 20000,
			xhrFields: {
				withCredentials: true
			},
            crossDomain: true,
			success: function (data) {
				b2BTncInfo = data;
			}
		});
	}
	
	var gpv2TncInfoHtml = function () {
		$(".get-stock-alert-popup .get-stock-alert-popup__checkbox-container").html("");
		var checkHtml = "";
		var tncCheckCount = 0;
		for (var i = 0; i < gpv2TncInfo.length; i++) {
			var resultData = gpv2TncInfo[i].data;

			if (resultData != null && resultData.is_active === true) {
				var id = data[i].id;

				if (resultData.read_only) {
					checkHtml +=
						'<div class="get-stock-alert-popup__checkbox-desc">' +
							'<p>' + resultData.content + '</p>' +
						'</div>';
				} else {
					checkHtml += 
						'<div class="get-stock-alert-popup__checkbox-wrap' + (resultData.is_required ? ' is-required' : '') + '">' +
							'<input class="get-stock-alert-popup__checkbox hidden" type="checkbox" id="' + id + '" name="receive notification checkbox' + tncCheckCount + '">' +
								'<label for="' + id + '" class="get-stock-alert-popup__checkbox-label">' +
									'<span class="get-stock-alert-popup__checkbox-icon"></span>' +
									resultData.content +
								'</label>' +
						'</div>' +
						'<div class="get-stock-alert-popup__checkbox-desc"></div>';
					tncCheckCount++;
				}
			}
		}

		$(".get-stock-alert-popup .get-stock-alert-popup__checkbox-container").html(checkHtml);
		window.sg.components.getStockAlertPopup.reInit();
	}
	
	//new-hybris
	var hewHybrisTncInfoHtml = function () {
		$(".get-stock-alert-popup .pd-get-stock-alert-popup__checkbox-container").html("");
		var disClaimer = '<p class="get-stock-alert-popup__disclaimer-text">' + Granite.I18n.get("By providing your email you agree to marketing communications & inventory alerts from Samsung.") + '</p>';
		var checkHtml = "";
		var tncCheckCount = 0;
		var isreqFlag = false;
		for (var i = 0; i < hewHybrisTncInfo.length; i++) {
			var resultData = hewHybrisTncInfo[i];

			if (resultData != null) {
				var id = resultData.code;

				if (resultData.type === "DISCLAIMER") {
					checkHtml +=
						'<div class="get-stock-alert-popup__checkbox-desc">' +
							'<p>' + resultData.content + '</p>' +
						'</div>';								
				} else {
					
					if (!isreqFlag && resultData.required === true) {
						isreqFlag = true;
					}
					
					checkHtml += 
						'<div class="get-stock-alert-popup__checkbox-wrap' + (resultData.is_required ? ' is-required' : '') + '">' +
						'<input class="get-stock-alert-popup__checkbox hidden" type="checkbox" id="' + id + '" name="receive notification checkbox' + tncCheckCount + '">' +
							'<label for="' + id + '" class="get-stock-alert-popup__checkbox-label">' +
								'<span class="get-stock-alert-popup__checkbox-icon"></span>' +
								resultData.content +
							'</label>' +
					'</div>' +
					'<div class="get-stock-alert-popup__checkbox-desc"></div>';
					
					tncCheckCount++;
				}
			}
		}
		$(".get-stock-alert-popup .get-stock-alert-popup__checkbox-container").html(checkHtml);
		$(".get-stock-alert-popup .get-stock-alert-popup__disclaimer").html(disClaimer);
		window.sg.components.getStockAlertPopup.reInit();
	}
	
	
	var otherHtml = function () {
		$(".pd-get-stock-alert-popup .pd-get-stock-alert-popup__checkbox-container").html("");
		var checkHtml = '';
		if($("#isSrpGpv2Flag").val() === 'Y' &&  $("#stockLabel").val() !== ''){
			var required = '';
			if(siteCode === 'id'){
				required = 'is-required';
			}
			checkHtml += '<div class="get-stock-alert-popup__checkbox-wrap' +is-required+'">';
			checkHtml += '	<input class="get-stock-alert-popup__checkbox hidden" type="checkbox" id="email-notification" name="receive notification checkbox">';
			checkHtml += '	<label for="email-notification" class="get-stock-alert-popup__checkbox-label">';
			checkHtml += '		<span class="get-stock-alert-popup__checkbox-icon"></span>';
			checkHtml += 		$("#stockLabel").val();
			checkHtml += '	</label>';
			checkHtml += '</div>';
			if(siteCode ==='id'){
				checkHtml += '<div class="get-stock-alert-popup__checkbox-desc is-required">'+Granite.I18n.get("* Required field")+'</div>';	
			}else{
				checkHtml += '<div class="get-stock-alert-popup__checkbox-desc"></div>';	
			}
		}else if($("#srpGetstocksge").val() === 'Y'){
			/* AE, AE_AR, SA, SA_EN : 국가분기 추가 */
			checkHtml += '<div class="get-stock-alert-popup__checkbox-wrap is-required">';
			checkHtml += '	<input class="get-stock-alert-popup__checkbox hidden" type="checkbox" id="email-notification1" name="receive notification checkbox">';
			checkHtml += '	<label for="email-notification1" class="get-stock-alert-popup__checkbox-label">';
			checkHtml += '		<span class="get-stock-alert-popup__checkbox-icon"></span>';
			var openText = Granite.I18n.get("Open in a new window");
			var startTag = Granite.I18n.get("<a href=\'/{0}/info/privacy.html\' target=\'_blank\' title=\'{1}\'>",[siteCode,openText]);
			var endTag = Granite.I18n.get("</a>");
			checkHtml += Granite.I18n.get("I have read and agree to the {0}Samsung Privacy Policy{1}.",[startTag,endTag]);
			checkHtml += '	</label>';
			checkHtml += '</div>';
			checkHtml += '<div class="get-stock-alert-popup__checkbox-desc"></div>';
			checkHtml += '<div class="get-stock-alert-popup__checkbox-wrap is-required">';
			checkHtml += '	<input class="get-stock-alert-popup__checkbox hidden" type="checkbox" id="email-notification2" name="receive notification checkbox">';
			checkHtml += '	<label for="email-notification2" class="get-stock-alert-popup__checkbox-label">';
			checkHtml += '		<span class="get-stock-alert-popup__checkbox-icon"></span>';
			checkHtml += Granite.I18n.get("I would like to receive information about products, services, promotions and marketing communications from Samsung.");
			checkHtml += '	</label>';
			checkHtml += '</div>';
			checkHtml += '<div class="get-stock-alert-popup__checkbox-desc"></div>';
		}
		$(".get-stock-alert-popup .get-stock-alert-popup__checkbox-container").html(checkHtml);
		window.sg.components.getStockAlertPopup.reInit();
	}
	
	var b2BTncInfoHtml = function () {
		$(".get-stock-alert-popup .pd-get-stock-alert-popup__checkbox-container").html("");
		var disClaimer = '<p class="get-stock-alert-popup__disclaimer-text">' + Granite.I18n.get("By providing your email you agree to marketing communications & inventory alerts from Samsung.") + '</p>';
		var checkHtml = "";
		var tncCheckCount = 0;
		var isreqFlag =false;
		for (var i = 0; i < b2BTncInfo.length; i++) {
			var resultData = b2BTncInfo[i];

			if (resultData != null) {
				var id = resultData.code;

				if (resultData.type === "DISCLAIMER") {
					checkHtml +=
						'<div class="get-stock-alert-popup__checkbox-desc">' +
							'<p>' + resultData.content + '</p>' +
						'</div>';								
				} else {
					
					if (!isreqFlag && resultData.required === true) {
						isreqFlag = true;
					}
					
					checkHtml += 
						'<div class="get-stock-alert-popup__checkbox-wrap' + (resultData.is_required ? ' is-required' : '') + '">' +
						'<input class="get-stock-alert-popup__checkbox hidden" type="checkbox" id="' + id + '" name="receive notification checkbox' + tncCheckCount + '">' +
							'<label for="' + id + '" class="get-stock-alert-popup__checkbox-label">' +
								'<span class="get-stock-alert-popup__checkbox-icon"></span>' +
								resultData.content +
							'</label>' +
					'</div>' +
					'<div class="get-stock-alert-popup__checkbox-desc"></div>';
					
					tncCheckCount++;
				}
			}
		}
		$(".get-stock-alert-popup .get-stock-alert-popup__checkbox-container").html(checkHtml);
		$(".get-stock-alert-popup .get-stock-alert-popup__disclaimer").html(disClaimer);
		window.sg.components.getStockAlertPopup.reInit();				
	}
	
	$(function () {
		if (getStockAlertPopup.length > 0) {
			if (TnC_SITE.includes(siteCode) && isGpv2 === 'Y') {
				getTncInfo();
			}else if(TnC_SITE.includes(siteCode) && isNewHybrisFlag === 'Y') {				//new-hybris
				getTncInfoForNewHybris();
			}
			if(isB2bShopIntegrationFlag === 'Y') {	//new-hybris(b2b)
				getTncInfoForNewHybrisB2b();
			}
		}
	});

	$(document).on("click", ".result-list__item .result-cta .js-cta-stock", function () {
		//B2C
		if (TnC_SITE.includes(siteCode) && isGpv2 === 'Y') {
			gpv2TncInfoHtml();
		}else if(TnC_SITE.includes(siteCode) && isNewHybrisFlag === 'Y') {				//new-hybris
			hewHybrisTncInfoHtml();
		}else{
			otherHtml();
		}
	});
	
	$(document).on("click", "result-list__item .result-cta .js-cta-stock-b2b", function () {
		//B2B
		b2BTncInfoHtml();
	});
    
})(window.jQuery);
(function(win, $, doc, sga, search) {
    var _$COMP = $('div#no-result-container');
    var _noResultHTML = $("<div />").append(_$COMP.clone()).html();
    var parent = _$COMP.parent();

    var loadingbarFlag = $("#loadingbarFlag").val();

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }
	function setSearchWord(){
		var searchWord = $('#QueryInput').find('input.query-input__form-input').val();
		_$COMP.find('.cod04-text-block__keyword').text(searchWord);
	}
	function componentsReInit(){
		if($("#eppFlag").val() === 'N'){
			window.sg.components.recommendedProduct.reInit();
			window.sg.components.recentlyViewed.reInit();
			window.sg.components.su11LinkCard.reInit();
		}
	}
    function _init() {
        
		_$COMP.hide();
        var q = getParameterByName('searchvalue');

        if(q === ''){
            if(loadingbarFlag === "true"){
                $('.cm-loader').removeClass('cm-loader-type2');
                $('.cm-loader').addClass('cm-loader-type1');
                $('.cm-loader').show();
            }
           _$COMP.show();
           setSearchWord();
           $('.cm-loader').hide();
           componentsReInit();
        }

        sga.ui.registerEventListener("no-result", "no-result", function() {
           _$COMP.show();
           setSearchWord();
           componentsReInit();
        });
    }

    $(function() {
        _init();
    });

})(window, jQuery, document, window.smg.sga, window.smg.sga.search);
(() => {
  const $q = window.sg.common.$q;
  const getCurrentDevice = window.sg.common.utils.getCurrentDevice;

  const selector = {
    section: '.srp-tab-bar',
    wrap: '.srp-tab-bar-wrap',
    listWrap: '.srp-tab-bar__list',
    items: '.srp-tab-bar__item',
    prevBtn: '.srp-tab-bar__btn-prev',
    nextBtn: '.srp-tab-bar__btn-next',
  };

  const maxItems = 9;
  const els = {};
  let itemWidth;
  let listWidth;
  let prevResDevice;
  let isRtl = null;

  function init() {
    setLayout();

    if( els.items.target.length === 0 ){
      return;
    }

    bindEvents();
    selectTab(els.items.target[0]);
  }

  function setLayout() {
    els.section = $q(selector.section);
    els.wrap = els.section.find(selector.wrap);
    els.listWrap = els.section.find(selector.listWrap);
    els.items = els.section.find(selector.items);
    els.prevBtn = els.section.find(selector.prevBtn);
    els.nextBtn = els.section.find(selector.nextBtn);

    isRtl = els.section.css('direction') === 'rtl';
    prevResDevice = null;

    if (els.items.target.length > 0) {
      resize();
    }
  }

  function reInit() {
    setLayout();
    
    if( els.items.target.length === 0 ){
      return;
    }

    bindEvents();
  }

  function setMargin(isSet = false) {
    if (isSet === false) {
      if (isRtl) {
        return els.listWrap.target[0].style.marginRight;
      } else {
        return els.listWrap.target[0].style.marginLeft;
      }
    } else {
      if (isRtl) {
        els.listWrap.target[0].style.marginRight = isSet;
      } else {
        els.listWrap.target[0].style.marginLeft = isSet;
      }
    }
  }

  function resize() {
    const currentResDevice = getCurrentDevice();

    if (currentResDevice === 'desktop') {
      if (els.items.target.length > maxItems) {
        const oldWidth = listWidth;
        els.listWrap.target[0].style.flexWrap = 'wrap';
        els.listWrap.target[0].style.width = '';

        itemWidth = parseFloat(els.items.target[0].getBoundingClientRect().width) - 1;
        listWidth = els.items.target.length * itemWidth + 1;

        els.listWrap.target[0].style.width = `${listWidth}px`;
        setMargin(`${parseFloat(setMargin()) * (listWidth / oldWidth)}px`);
      }
    } else {
      els.listWrap.target[0].style.width = '';
      setMargin('');
    }

    if (prevResDevice !== currentResDevice) {
      const activeTab = $q('.srp-tab-bar__item--active').target[0];
      const idx = els.items.target.indexOf(activeTab);

      if (currentResDevice === 'desktop') {
        if (els.items.target.length > maxItems) {
          if (idx >= maxItems) {
            setMargin(`${itemWidth * (maxItems - idx - 1)}px`);
          }
        }
      } else {
        itemCenterAlign(activeTab);
        mobileTabArrowCtrl();
      }
    }

    prevResDevice = currentResDevice;
  }
  
  function mobileTabArrowCtrl() {
    const listScrollLeft = els.listWrap.target[0].scrollLeft; 
    let totalWidth = null;
    els.items.target.forEach((e) => {
      totalWidth += e.offsetWidth;
    });

    const guide = totalWidth - els.listWrap.target[0].offsetWidth - 2;
    const guideFlag = isRtl ? (listScrollLeft <= -(guide)) : (listScrollLeft >= guide);

    if (listScrollLeft === 0 || listScrollLeft === 1) {
      els.prevBtn.hide();
      els.nextBtn.show();
    } else if (guideFlag) {
      els.prevBtn.show();
      els.nextBtn.hide();
    } else {
      els.prevBtn.show();
      els.nextBtn.show();
    }
  }

  function itemCenterAlign(target) {
    els.listWrap.target[0].scrollLeft = target.offsetLeft - ((els.listWrap.target[0].offsetWidth - target.offsetWidth) / 2) - (parseInt(window.getComputedStyle(target).paddingLeft) * 2);
  }

  function itemScrollMoveDist(flag) {
    if (flag) {
      return els.listWrap.target[0].scrollLeft + els.listWrap.target[0].offsetWidth;
    } else {
      return els.listWrap.target[0].scrollLeft - els.listWrap.target[0].offsetWidth;
    }
  }

  function bindEvents() {
    els.items.off('click').on('click', (e) => {
      selectTab(e.currentTarget);
    });

    els.items.find('.srp-tab-bar__link').off('focus').on('focus', (e) => {
      if (getCurrentDevice() === 'mobile') {
        const target = e.target.parentElement;
        itemCenterAlign(target);
        setTimeout(() => {
          mobileTabArrowCtrl();
        }, 200);
      }
    });

    els.prevBtn.off('click').on('click', () => {
      els.listWrap.target[0].scrollLeft = (isRtl ? itemScrollMoveDist(true) : itemScrollMoveDist(false));
      setTimeout(() => {
        mobileTabArrowCtrl();
      }, 200);
    });

    els.nextBtn.off('click').on('click', () => {
      els.listWrap.target[0].scrollLeft = (isRtl ? itemScrollMoveDist(false) : itemScrollMoveDist(true));
      setTimeout(() => {
        mobileTabArrowCtrl();
      }, 200);
    });

    els.listWrap.off('scroll').on('scroll', () => {
      mobileTabArrowCtrl();
    });

    $q(window).off('resize', resize).on('resize', resize);
  }

  function selectTab(target) {
    els.items.removeClass('srp-tab-bar__item--active');

    const prevSelectedTab = els.items.find('.hidden').target[0];

    if (prevSelectedTab !== undefined) {
      prevSelectedTab.parentNode.removeChild(prevSelectedTab);
    }

    $q(target).addClass('srp-tab-bar__item--active');
    $q(target).append('<span class="hidden">selected</span>');

    const tabPanels = $q(target).closest('.result').find('.tab-panel__item');

    if (tabPanels.target.length > 0) {
      const tabIdx = els.items.target.indexOf(target);
      tabPanels.removeClass('tab-panel__item--active');
      tabPanels.eq(tabIdx).addClass('tab-panel__item--active');
    }

    if (getCurrentDevice() === 'mobile') {
      itemCenterAlign(target);
      setTimeout(() => {
        mobileTabArrowCtrl();
      }, 200);
    }
  }

  window.sg.components.tabBar = { init, reInit };

  $q.ready(() => init());
})();

(function(win, $, doc, sga, search, api, template) {

	var _$COMP = $(".srp-tab-bar");
	var _$PANEL = $('.tab-panel');
	var siteCd = $("#siteCd").val();
	var apiStageInfo = $("#apiStageInfo").val();
	var defaultSortby = $("#defaultSortby").val();
	var SUPPORT_SORT_LIST = ["relevance", "date_desc", "date_asc", "text_asc", "text_desc"];
	var isNotNull = function(_str){
		
		return !fnIsNull(_str) && _str != "null";
				
	};
	var filterSetUrl = $.trim($("#esapiSearchDomain").val().split("/").splice(0, 3).join("/"))+"/search/query/v6/filterSet?siteCd="+siteCd+"&stage="+apiStageInfo;
	if("Y" === $("#isBusinessSearchFlag").val()) {
		filterSetUrl = $.trim($("#esapiSearchDomain").val().split("/").splice(0, 3).join("/"))+"/business/v6/search/query/filterSet?siteCd="+siteCd+"&stage="+apiStageInfo;
	}
	var _$ui = {
			tabBarPanel : _$COMP.find("ul.srp-tab-bar__list"),
			panels : $(".tab-panel"),
			countLabels : {}
		};
	
	let eppFlag = ('Y' === $('#eppFlag').val())? true : false;
	if( !eppFlag ) {
		$.ajax({
	        type: "GET",
	        url: filterSetUrl,
	        async: false,
	        success: function (data) {
	        	$("div.sga-metadata.sga-component-scope").find("div").text(JSON.stringify(data));
	        }
	    });
	} else {
		//filter base frame
		const snpResponse = {
				response:{
					resultData:{
						common:{
							tabInfoList : []
						},
						categoryFilterList : []
					}
				}
			};		

		let apiUri =  '/' + $('#apiStageInfo').val() + '/epp/v2/search/query/';
		const intgFlag = $('#shopIntegrationFlag').val();
		if ( 'GPv2' === intgFlag ){
			apiUri += 'gpv2';
		} else if ( 'Hybris-intg' === intgFlag ){
			apiUri += 'hybris';
		} else if ( 'Hybris-new' === intgFlag ){
			apiUri += 'newhybris';
		} else {
			apiUri += 'global';
		}
		let schParams = {};
		schParams.siteCode = siteCd;
		schParams.companyCode = $.trim($('#companyCode').val());
		schParams.start = 0;
		schParams.num = 1;
		schParams.onlyFilterInfoYN = 'Y';
		
		const prdFilterAjax = function(){
			return $.ajax({
				type: "GET",
				data: schParams,
				url: $.trim($("#searchDomain").val()) + apiUri,
				dataType: "json",
				async: false
			});
		};
		
		const sppFilterAjax = function(){
			return $.ajax({
		        type: "GET",
		        url: filterSetUrl,
		        async: false
			});
		};
		
		const setEsFilter = function(schFilter, depth){
			let filObj = {
				localName 	: schFilter.filterLocalName,
				code 		: 'I' + schFilter.filterSearchCode,
				regName 	: schFilter.filterRegName,
				depth		: '' + depth,
				filterList	: []								
			};
			return filObj;		
		};
		
		const prdFilterList = function(navs){
			let categoryFilter = {};
			categoryFilter.tabType = "PRD";
			categoryFilter.tabParam = "product";
			categoryFilter.filterList = new Array();			
			const groupFilterList = navs.filter(cate => 'GROUP' === cate.categoryFilterName).map(gf => gf.productFinderFilter).flat().map(pfFilter => setEsFilter(pfFilter, 0));
			groupFilterList.sort(function(comp1,comp2){
				return (comp1.code < comp2.code)? -1 : (comp1.code > comp2.code)? 1 : 0;
			});
			
			const typeFilterList = navs.filter(cate => 'TYPE' === cate.categoryFilterName).map(tf => tf.productFinderFilter).flat().map(pfFilter => setEsFilter(pfFilter, 1));
			if ( groupFilterList.length > 0 ){
				groupFilterList.forEach(function(group, idx){
					typeFilterList.forEach(function(type, jdx){
						let myParent = type.code.substring(0,3) + '00' + type.code.substring(5);
						if ( group.code === myParent ){
							group.filterList.push(type);
						}
					});
				});
				
				categoryFilter.filterList = groupFilterList;
				
				return categoryFilter;
			}			
		};
		
		//product, support filter set	
		$.when(
			prdFilterAjax(), sppFilterAjax()
		).done(function(navFilter, esFilter){
			if ( esFilter[0] && esFilter[0].response.resultData.common.tabInfoList.length > 0 ){
				let hasPrdTabInfo = false;
				esFilter[0].response.resultData.common.tabInfoList.forEach(function(curTab ,idx){
					if ( 'PRD' === curTab.tabType ){
						hasPrdTabInfo = true;
						snpResponse.response.resultData.common.tabInfoList.push(curTab);
						return false;
					}
				});
				if ( !hasPrdTabInfo ){
					snpResponse.response.resultData.common.tabInfoList.push({
						"tabType": "PRD",
						"tabParam": "product",
						"regName": "products",
						"localName": "PRODUCT",
						"count": "0",
						"tabCode": "C0000000"
					});					
				}
				esFilter[0].response.resultData.common.tabInfoList.forEach(function(curTab ,idx){
					if ( 'SPP' === curTab.tabType ){
						snpResponse.response.resultData.common.tabInfoList.push(curTab);
						return false;
					}
				});
			}
			if ( navFilter[0] && navFilter[0].response.resultData.navGroups.length > 0 ){
				snpResponse.response.resultData.categoryFilterList.push(prdFilterList(navFilter[0].response.resultData.navGroups));
			}			
			if ( esFilter[0] && esFilter[0].response.resultData.categoryFilterList.length > 0 ){
				esFilter[0].response.resultData.categoryFilterList.forEach(function(curFilter, idx){
					if ( 'SPP' === curFilter.tabType ){
						snpResponse.response.resultData.categoryFilterList.push(curFilter);
					}
				});
			}
			
			$("div.sga-metadata.sga-component-scope").find("div").text(JSON.stringify(snpResponse));
		});	
	}

	var _sortArray = [];
	var _tabIDList = [];

	var _tabs = {};
	var _panels = {};
	var _activeTabId = null;
	var _activeTabType = null;
	var _activeLocator = null;

	var loadHtml = {
		tabBar : _$COMP.html(),
		panel : _$PANEL.html()
	};

	template.loadHtml = template.loadHtml || loadHtml;

	var _metadata = {};
	var _filterSet = null;
	
	var loadingbarFlag = $("#loadingbarFlag").val();

	$("div.sga-metadata.sga-component-scope").find("div[data-key]").each(function() {
		
		var $this = $(this), key = $.trim($this.attr("data-key") || "");
		_metadata[key] = $.trim($this.text());
	});
	if(_metadata.filterSet)
		_filterSet = $.parseJSON(_metadata.filterSet);

	var domKey = sga.domKey;
	
	var _template = search.template; //sga.template.compile($('div.sga-templates'));
	
	function panel(id, data){
		
		this.id = id;
		this.data = data;

		this.domId = domKey[id];
		this.panelItem = $(template.loadHtml.panel).filter('div#'+this.domId);
		
		if(this.panelItem.length <= 0) this.panelItem = null;
	}
	
	panel.prototype.getHTML = function(){
		return this.panelItem;
	};

	function _findApiKey(_activeTabId){
		for(var index in domKey){
			if(_activeTabId === domKey[index])
				return index;
		}
		return _activeTabId;
	}

	function _searchForCategory(){
		// TODO turn on loading-bar
		if(loadingbarFlag === "true"){
			$('.cm-loader').removeClass('cm-loader-type1');
			$('.cm-loader').addClass('cm-loader-type2');
			$('.cm-loader').show();
		}
		api.setParm('categoryTab', _findApiKey(_activeTabId));
		if(_activeTabId !== 'all' && isNotNull(defaultSortby)){
			if(_activeTabId !== 'support' || (_activeTabId === 'support' && $.inArray(defaultSortby, SUPPORT_SORT_LIST) >= 0)){
				api.setParm('sort', defaultSortby);
			}
		}

		api.searchForCategory(SITE_CD, api.getParm(), {
			success : function(resData) {
				resData._activeTabId = _activeTabId;
				sga.ui.triggerEvent("init-panel", resData);
				_activeLocator = null;
				// TODO turn off loading-bar
				$('.cm-loader').hide();
			},
			error : function(res) {
				// TODO turn off loading-bar
				$('.cm-loader').hide();
				sga.console.error("Can't fetch the V2 for site '" + SITE_CD + "'; response=" + res.statusCode + "; message="	+ res.statusMessage);
			}
		});
	}
	
	function sortTabList(){
		_tabIDList.sort(function(item1, item2){
			var key1 = _sortArray.indexOf(item1);
			var key2 = _sortArray.indexOf(item2);
			return key1 - key2;
		});
	}
	
	function _getCountText(count){
		if(count.length >= 4){
			if(parseInt(count) > 9999)
				return '9,999+';
			return count.substr(0,1)+','+count.substr(1,count.length)
		}
		return count;
	}

	function drawTabPanel(){
		var tabHTMLa = '';
		var tabHTML = [];
		var panelList = [];
		var $temp = null;
		
		//_$ui.tabBarPanel.empty();
		//_$ui.panels.contents().remove();

		sortTabList();

		for(var index=0; index < _tabIDList.length; index++){
			var _id = _tabIDList[index];

			if(_tabs[_id]){
				var _tabItem =  _tabs[_id];
				var _domId = domKey[_tabItem.tabParam];
				
				if(_id === 'all') _tabItem.localName = $('#i18n_category_all').val();

				var bindData = {
					index   : index,
					active  : (_id === _activeTabId ? ' srp-tab-bar__item--active' : ''),
					tabId   : _domId,
					engName	: _tabItem.regName,
					name	: _tabItem.localName || Granite.I18n.get('search.common.category.'+_tabItem.tabParam),
					tabType : _domId,
					count   : _getCountText(_tabItem.count),
					hidden   : (_id === _activeTabId ? '<span class="hidden">'+ Granite.I18n.get('Selected') +'</span>' : ''),
					resultFor : Granite.I18n.get('search.comp.resultList.keywordSearchResults.a2', [_tabItem.count, _tabItem.localName])
				};
				
				tabHTML.push( $(_template.bind("tabItem", bindData)) );
				panelList.push( _panels[_id].getHTML() );
			}
		}
		_$ui.tabBarPanel.append(tabHTML);
		
		_$ui.panels.append('<span class="blind">Search Result</span>');
		_$ui.panels.append(panelList);

		var editable = _$ui.panels.children().filter(".editableSupportInfo");
		if (editable.length > 0) {
			var supportInfo = _$ui.panels.find("#all .result__side .editableSupportInfo");
			supportInfo.after(editable);
			supportInfo.remove();
		}

		_$ui.panels.find('#'+domKey[_activeTabId]).addClass("tab-panel__item--active");
		
		window.sg.components.tabBar.reInit();
		_$ui.tabBarPanel.find("a.srp-tab-bar__link").click(function() {
			var $tab = $(this).parent();
			_activeTabId = $tab.data("result-target") || $tab.attr("data-result-target");

			var _apiKey = _findApiKey(_activeTabId);

			sga.ui.triggerEvent("tab-selected", _activeTabId);
			api.setTargetParm(_activeTabId);

			if(!_tabs[_apiKey].hasOwnProperty('active') || _tabs[_apiKey].active !== 'Y' ){
				_tabs[_apiKey].active = 'Y';
				_searchForCategory();
			}
		});
	}

	function _init() {
		var _tabBarList =  _$COMP.find('input');

		for(var i=0; i < _tabBarList.length; i++){
			if($(_tabBarList[i]).data('resultTarget'))
				_sortArray.push( _findApiKey($(_tabBarList[i]).data('resultTarget')) );
		}

		if(_filterSet){
			var tabInfoList = _filterSet.response.resultData.common.tabInfoList;

			for(var index=0; index < tabInfoList.length; index++){
				var _category = tabInfoList[index]['tabParam'];
				_tabs[_category] = tabInfoList[index];
			}
		}

		sga.ui.registerEventListener("reset-search", "srp-tab-bar", function() {
			var _tabIDs = [];
			_tabIDList = [];
			_panels = {};

			for(var i in _tabs){
				if(_tabs[i].active) _tabs[i].active = 'N';
			}

			var editable = _$ui.panels.find(".editableSupportInfo");
			_$ui.panels.append(editable);

			_$ui.tabBarPanel.contents().remove();
			_$ui.panels.contents().not(".editableSupportInfo").remove();
		});
		

		sga.ui.registerEventListener("keyword-search", "tab-bar", function(resData) {

			var tabInfo = resData.common.tabInfoList;

			_activeTabId = resData._activeTabId || 'all';

			if( !eppFlag && ( tabInfo.length > 1 ||  (tabInfo.length === 1 && tabInfo[0].tabParam !== 'support' && tabInfo[0].tabParam !== 'shopfaq' ))){
				_tabIDList.push('all');
				_panels['all'] = new panel('all');
				_tabs['all'] = {tabType: 'ALL', tabParam : 'all', regName: 'all', localName: $('#i18n_category_all').val() || 'ALL' , count: resData.common.searchCount, code: null, active:'N'};
				if(_activeTabId === 'all') _tabs['all'].active = 'Y';
			}

			if(tabInfo.length === 1 && tabInfo[0].tabParam === 'support'){
                _activeTabId = 'support';
            }
            if(tabInfo.length === 1 && tabInfo[0].tabParam === 'shopfaq'){
                _activeTabId = 'support';
            }
			// Granite.I18n.get('search.common.category.all')

			for(var index=0; index < tabInfo.length; index++){
				if(tabInfo[index]){
					var _category = tabInfo[index]['tabParam'];

					_panels[_category] = new panel(_category, tabInfo[index]);

					if(_panels[_category].panelItem && _sortArray.indexOf(_category) > -1){
						if(_tabIDList.indexOf(_category) <= -1) _tabIDList.push(_category);

						if(_tabs[_category] && _sortArray.indexOf(_category) > -1){
							if(_activeTabId === _category)
								_tabs[_category].active = 'Y';
							
							_tabs[_category].count = tabInfo[index].count;
						}
					}
				}
			}
			drawTabPanel();
			window.sg.components.srp.resize();
			sga.ui.triggerEvent("init-panel", resData);
			sga.ui.triggerEvent("sort-search", resData);
            
            var currentTab = window.location.hash.toString();
            currentTab = currentTab.replace("#","");

            if(currentTab == 'shopfaq'){
                $("#searchFilterWrapSupport").find("input").each(function(){
                    if($(this).data("filtersearchcode")=="S70000000"){
                        $(this).click();
                    }
                });
            }
			
		});
		
	}
	
	$(function() {
		_init();
		//_$COMP.find('[data-tab-type="all"]').trigger("click");
	});

})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient, window.smg.sga.search.template);
(() => {
  const $q = window.sg.common.$q;
  const instanceEl = [];

  class ResultPagination {
    constructor(wrap) {
      this.ele = {
        'component': $q(wrap),
        'wrap': null,
        'hidden': null,
      };

      this.ele.wrap = this.ele.component.find('.result-pagination-wrap');
      this.ele.hidden = this.ele.component.find('.hidden');
      this.init();
    }

    init() {
      this.bindEvents();
    }

    change(now) {
      const old = this.ele.wrap.find('span.result-pagination__page--active').target[0];
      const aHtml = document.createElement('div');

      aHtml.insertAdjacentHTML('afterbegin', `<a href="#" class="result-pagination__page">${old.innerHTML}</a>`);

      const aNode = aHtml.querySelector('a');

      $q(aNode).on('click', (event) => {
        this.change(event.currentTarget);
      });

      old.insertAdjacentElement('beforebegin', aNode);
      old.parentNode.removeChild(old);

      const sHtml = `<span class="result-pagination__page result-pagination__page--active" aria-current="page">${now.innerHTML}</span>`;

      now.parentNode.insertBefore(this.ele.hidden.target[0], now);
      now.insertAdjacentHTML('beforebegin', sHtml);
      now.parentNode.removeChild(now);
    }

    bindEvents() {
      this.ele.wrap.find('.result-pagination__page').on('click', (event) => {
        this.change(event.currentTarget);
      });
    }
  }

  function init() {
    const target = $q('.result-pagination').target;

    if (instanceEl.length !== 0) {
      instanceEl.forEach((element, idx) => {
        if (element !== null && target.indexOf(element) < 0) {
          instanceEl[idx] = null;
        }
      });
    }

    target.forEach((element) => {
      if (instanceEl.indexOf(element) < 0) {
        instanceEl.push(element);
        new ResultPagination(element);
      }
    });
  }

  window.sg.components.resultPagination = { reInit: init };

  $q.ready(() => init());
})();

(function(win, $, doc, sga, search, api) {
	const pageTrack = (digitalData.page.pageInfo.pageTrack || "").toLowerCase();
    var pagenation = {};
//    var _parm = {};

    var config = {
        perPage : 20,
        perGroup : 5
    };

	var domKey = sga.domKey;

	var _i18n = {};

    var loadingbarFlag = $("#loadingbarFlag").val();
    
    function Pagenation(id, totalCount){
        this.id = id;
        this.component = $("div#"+domKey[id]+" .result-pagination");

        this.currentPage = 1;
        this.totalCount = totalCount;

        this.bindPageInfo();
    }

    Pagenation.prototype = {
        setTotalCount : function(totalCount){
            this.currentPage = 1;
            this.totalCount = totalCount;

            this.bindPageInfo();
        },
        bindPageInfo : function(){
            this.totalPage = Math.ceil(this.totalCount / config.perPage);
            this.totalGroup = Math.ceil(this.totalPage / config.perGroup);

            this.setDrawInfo();
        },
        setDrawInfo : function(){
            this.currentGroup = Math.ceil(this.currentPage / config.perGroup);

            this.start = (this.currentGroup -1) * config.perGroup + 1; 
            this.end = this.currentGroup * config.perGroup;

            this.start = this.start < 0 ? 1 : this.start;
            this.end = this.end > this.totalPage ? this.totalPage : this.end;

            this.prev = this.currentPage - 1 <= 0 ? this.currentPage : this.currentPage - 1;
            this.next = this.currentPage + 1 > this.totalPage ? this.totalPage : this.currentPage + 1;

            this.prevBlock = (this.currentGroup - 2) * config.perGroup + 1;
            this.nextBlock = this.currentGroup * config.perGroup + 1;

            this.prevBlock = this.prevBlock <= 0 ? 1 : this.prevBlock;
            this.nextBlock = this.nextBlock > this.totalPage ? this.totalPage : this.nextBlock;

            
            var page = {
                currentPage : this.currentPage,
                start : this.start,
                end : this.end,
                prev : this.prev,
                next : this.next,
                prevBlock : this.prevBlock,
                nextBlock : this.nextBlock
            };

            this.drawPagenation();
        },
        drawBlock : function(type, block){
            var htmlStr = '';

            var prevDisabled = '';
            var nextDisabled = '';
            var prevClass = '';
            var nextClass = '';

            if(this.currentPage === 1){
                prevDisabled = 'disabled="disabled"';
                prevClass = 'result-pagination__btn--disabled';
            }

            if(this.currentPage === this.totalPage){  
                nextDisabled = 'disabled="disabled"';
                nextClass = 'result-pagination__btn--disabled';
            }
            if(type === 'prev'){
                if(block !== 'N') htmlStr += '<a href="#" class="result-pagination__btn  result-pagination__btn--'+type+'-block '+prevClass+'" data-page-target="'+this.prevBlock+'" '+prevDisabled+'an-tr="search result:common-'+pageTrack+'-image-arrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:left">' + true + '<svg class="icon" focusable="false"> <use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#previous-regular"></use> </svg><svg class="icon" focusable="false"> <use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#previous-regular"></use> </svg> </a>';

                htmlStr += '<a href="#" class="result-pagination__btn  result-pagination__btn--'+type+' '+prevClass+'" data-page-target="'+this.prev+'" '+prevDisabled+'an-tr="search result:common-'+pageTrack+'-image-arrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:left">' + true + '<svg class="icon" focusable="false"> <use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#previous-regular"></use> </svg> </a>';
            }
            if(type === 'next'){
                htmlStr += '<a href="#" class="result-pagination__btn result-pagination__btn--next '+nextClass+'" data-page-target="'+this.next+'" '+nextDisabled+'an-tr="search result:common-'+pageTrack+'-image-arrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:right">' + false + '<svg class="icon" focusable="false"> <use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#next-regular"></use> </svg> </a>';

                if(block !== 'N') htmlStr += '<a href="#" class="result-pagination__btn result-pagination__btn--next-block '+nextClass+'" data-page-target="'+this.nextBlock+'" '+nextDisabled+'an-tr="search result:common-'+pageTrack+'-image-arrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:right">' + '<svg class="icon" focusable="false"> <use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#next-regular"></use> </svg><svg class="icon" focusable="false"> <use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#next-regular"></use> </svg> </a>';
            }
            return htmlStr;
        },
        drawPagenation : function(){
            this.component.find('.result-pagination').html();
            
            var htmlStr = '';
            var showBlock = 'Y';

            if(this.totalPage  !== 1){

                if(this.totalPage >= 5 && this.totalPage < 10)
                    showBlock = 'N';

                if(this.totalPage > 5) htmlStr += this.drawBlock('prev', showBlock);
                
                for(var i = this.start; i <= this.end; i++){
                    if(this.currentPage === i)
                        htmlStr += '<span class="result-pagination__page result-pagination__page--active" aria-current="page" data-page-target="'+i+'">'+i+'</span>';
                    else
                        htmlStr +='<a href="#" class="result-pagination__page" data-page-target="'+i+'" an-tr="search result:common-'+pageTrack+'-text-index" an-ca="indication" an-ac="carousel" an-la="carousel:index:'+i+'">'+i+'</a>';
                }

                if(this.totalPage > 5) htmlStr += this.drawBlock('next', showBlock);
            }
            this.component.find('.result-pagination-wrap').html(htmlStr);
            
            var _this = this;
            this.component.find('button, a').click(function(event){
                event.preventDefault();
                var $this = $(this);
                var pageTarget = $this.data('pageTarget');

                _this.currentPage = parseInt(pageTarget);
                _this.searchForPage();
            });
            window.sg.common.icon.update();
        },
        searchForPage : function(){
            if(loadingbarFlag === "true"){
                $('.cm-loader').removeClass('cm-loader-type1');
                $('.cm-loader').addClass('cm-loader-type2');
                $('.cm-loader').show();
            }

            var _this = this;

            api.setParm('categoryTab', this.id);
            api.setParm('start', (this.currentPage-1) * config.perPage);

            api.searchForCategory(SITE_CD, api.getParm(), {
                success : function(resData) {
                    _this.setDrawInfo();
                    sga.ui.triggerEvent("result-refresh", resData);
                    sga.ui.triggerEvent("page-selected", _this.currentPage);
                    $('.cm-loader').hide();
                },
                error : function(res) {
                    $('.cm-loader').hide();
                    sga.console.error("Can't fetch the V2 for site '" + SITE_CD + "'; response=" + res.statusCode + "; message="    + res.statusMessage);
                }
            });
        }
    }

    function _init() {
		
		_i18n.prevPage         = Granite.I18n.get('Previous Page');
		_i18n.nextPage         = Granite.I18n.get('next Page');
		_i18n.prevBlockPages   = Granite.I18n.get('Previous Page');
		_i18n.nextBlockPages   = Granite.I18n.get('next Page');
		_i18n.noPrevPage       = Granite.I18n.get('No Prev Page');
		_i18n.noNextPage       = Granite.I18n.get('No Next Page');
		_i18n.noPrevBlockPages = Granite.I18n.get('No Prev Page');
		_i18n.noNextBlockPages = Granite.I18n.get('"No Next Page');
	

        sga.ui.registerEventListener("init-panel", "pagenation", function(resData) {
            if(resData.resultList){
                var data = resData.resultList[0];
                var _id = data.resultType;
                var count = parseInt(data.resultCount);
                pagenation[_id] = new Pagenation(_id, count);
            }
        });

        sga.ui.registerEventListener("panel-refresh", "pagenation", function(resData) {
            //resData.count
//            _parm = api.getParm(); sonaqube로 인한 삭제
            var data = resData.resultList[0];
            var _id = data.resultType;
            var count = parseInt(data.resultCount);

            pagenation[_id] = new Pagenation(_id, count);
        });
        
    }

    $(function() {
        _init();
    });

})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient);

(() => {
  const $q = window.sg.common.$q;

  let resultSortElements = {};
  let component;
  let wrap;
  let list;

  function selectElements() {
    resultSortElements = {
      getResultSort: '.result-sort',
      getResultSortList: '.result-sort__list',
      getResultSortItem: '.result-sort__item',
    };

    component = $q(resultSortElements.getResultSort);
    wrap = $q(resultSortElements.getResultSortList);
    list = $q(resultSortElements.getResultSortItem);
  }

  function init() {
    selectElements();

    if(!resultSortElements.getResultSort) {
      return;
    }

    bindEvents();
  }

  function sortClose(){
    const el = wrap.target[0];
    document.removeEventListener('click',el.clickInCheck);
    document.removeEventListener('keydown',el.focusCheck);
    wrap.removeClass('result-sort__list--open');
    wrap.target[0].parentNode.querySelector('.result-sort__title').classList.remove('active');
    $q(el).closest('.result-sort__select').find('.result-sort__title').target[0].focus();
  }

  function sortOpen(){
    const el = wrap.target[0];
    el.clickInCheck = function( event ){
      function roop(parent){
        if(!parent) return null;
        if(parent === document.body) return null;
        if(parent.parentNode === el) return parent.parentNode;
        return roop(parent.parentNode);
      }
      const rtn = roop(event.target);
      if(rtn === null) sortClose();
    };
    el.focusCheck = function(e){
      setTimeout(() => {
        if( e.keyCode === 9 ){
          const out = wrap.target.some((ele) => ele.querySelector(':focus') !== null);
          if(!out){ sortClose();}
        }
      },30);
    };
    document.addEventListener('keydown',el.focusCheck);
    setTimeout(() => {
      document.addEventListener('click',el.clickInCheck);
    },30);
    wrap.addClass('result-sort__list--open');
    wrap.target[0].parentNode.querySelector('.result-sort__title').classList.add('active');
  }

  //pc select change
  function pcSelect(clickEl){
    const oldEl = wrap.find('.result-sort__item.active');
    if(oldEl.target.length > 0){
      oldEl.removeClass('active');
      oldEl.find('a').target[0].removeAttribute('title');
    }
    const newEl = $q(clickEl);
    newEl.addClass('active');
    newEl.find('a').target[0].setAttribute('title','selected');
    sortClose();
  }

  //mobile select change
  function mobileSelect(selectIdx){
    const select = component.find('.result-sort__selectbox');
    select.find('option').eq(selectIdx).target[0].selected = true;
  }

  function bindEvents() {
    //select click bind
    component.find('.result-sort__select').on('click',() => {
      if(wrap.hasClass('result-sort__list--open')){
        sortClose();
      }else{
        sortOpen();
      }
    });

    //pc click option
    list.on('click',( event ) => {
      event.stopPropagation();
      pcSelect(event.currentTarget);
      const selectIdx = list.target.indexOf(event.currentTarget);
      mobileSelect(selectIdx);
    });

    //mobile select change
    component.find('.result-sort__selectbox').on('change',( event ) => {
      const selectIdx = event.currentTarget.selectedIndex;
      mobileSelect(selectIdx);
      pcSelect(list.eq(selectIdx).target[0]);
    });
  }

  function reInit() {
    init();
  }

  window.sg.components.resultSort = { init, reInit };

  $q.ready(() => init());
})();

(function (win, $, doc, sga, search, api, template) {
    var sortBy = {};
	var domKey = sga.domKey;
    var _i18n = {};
    var loadingbarFlag = $("#loadingbarFlag").val();
    var defaultSortby = $("#defaultSortby").val();
    var b2bFlag = ($("#b2bFlag").val() === "Y");
    var _checkRating = ($("#reviewUseYN").val() !== "Y");
    var _checkRating_B2C = ($("#reviewUseYN_b2c").val() !== "Y");
    var _checkPrice_B2C = ($("#isNonShop").val() === "Y");
    var _checkPrice_B2B = ($("#isB2bShopIntegrationFlag").val() !== "Y");
    var _checkPrice = (b2bFlag ? _checkPrice_B2B : _checkPrice_B2C);

    var _checkRatingRemoveItem = ['rating'];
    var _checkPriceRemoveItem = ['price_desc', 'price_asc'];

	var isNotNull = function(_str){
		
		return !fnIsNull(_str) && _str != "null";
				
	};
    function SortBy(id) {
        this.id = id;
        this.component = $("div#" + domKey[id] + " .result-sort");

        this.bindEvent();
    }

    SortBy.prototype = {
        bindEvent: function () {
            var _this = this;
            var _domId = domKey[_this.id];

            _this.component.find('.result-sort__list li').click(function (event) {
                event.preventDefault();

                _this.sortID = $(this).attr('value');
                _this.searchForSortBy();

                _this.component.find('#' + _domId + 'Select').val(_this.sortID);
            });

            //mobile 버전 sort
            _this.component.find('#' + _domId + 'Select').change(function (event) {
                event.preventDefault();

                _this.sortID = $(this).val();
                _this.searchForSortBy();

            });
        },
        searchForSortBy: function () {
            // TODO turn on loading-bar
            if (loadingbarFlag === "true") {
                $('.cm-loader').removeClass('cm-loader-type1');
                $('.cm-loader').addClass('cm-loader-type2');
                $('.cm-loader').show();
            }

            api.setParm('start', '0');
            api.setParm('sort', this.sortID);
            api.searchForCategory(SITE_CD, api.getParm(), {
                success: function (resData) {
                    sga.ui.triggerEvent("panel-refresh", resData);
                    // TODO turn off loading-bar
                    $('.cm-loader').hide();
                },
                error: function (res) {
                    // TODO turn off loading-bar
                    $('.cm-loader').hide();
                    sga.console.error("Can't fetch the V2 for site '" + SITE_CD + "'; response=" + res.statusCode + "; message=" + res.statusMessage);
                }
            });
        }
    };

    function _findApiKey(_activeTabId) {
        for (var index in domKey) {
            if (_activeTabId === domKey[index])
                return domKey[index];
        }
        return _activeTabId;
    }
	function removeSortBy(el, siteCode){
		var isB2b = b2bFlag ? "true" : "false";

		$.ajax({
			url: "/aemapi/v6/pfsortby/data",
			type: 'GET',
			data: {
					'siteCode': siteCode,
					'isB2B': isB2b
					},
			dataType : 'json',
			cache : false,
			timeout : 20000,
			success: function(data){
				if(data.sortbyHideList.length > 0){
 					var sortbyHideList = data.sortbyHideList;
 					for(var item in sortbyHideList){
 						var removeEl = el.find('[value="'+sortbyHideList[item].value+'"]');
 						removeEl.remove();
 					}
				}
			},
			error: function(){
			}
		});
	}
    function _init() {
        _i18n.expand = Granite.I18n.get('search.common.labels.expand');
        _i18n.collapse = Granite.I18n.get('Collaps');

        sga.ui.registerEventListener("init-panel", "filter-selection", function (resData) {
            if (resData.resultList) {
                var data = resData.resultList[0];
                var _id = data.resultType;
                sortBy[_id] = new SortBy(_id);
            }
        });
        sga.ui.registerEventListener("sort-search", "result-sort", function (resData) {
            // defaultSortby
            if (resData.resultList) {
				var siteCode = resData.common.siteCode
				var data = resData.resultList[0];
                var _id = data.resultType;
	            if(isNotNull(defaultSortby)){
					$(".tab-panel").find('.result-sort__list li, .result-sort__selectbox option').each(function (index, item) {
	                	var _sortTarget = $(item).attr("value");
						if(defaultSortby === _sortTarget){
							if($(this).hasClass("result-sort__item")){
								$(this).addClass('active');
								$(this).find('a').attr('title','selected');
							}else{
								//mobile
								$(this).attr('selected','selected');
							}
						}
					});
				}
				removeSortBy($(".tab-panel").find('.result-sort__list, .result-sort__selectbox'), siteCode);
			}
            window.sg.components.resultSort.reInit();
        });
    }

    $(function () {
        _init();
    });

})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient, window.smg.sga.search.template);
(function(win, $, doc, sga, search) {
	'use strict';

//	var HINT = 'sc_'+siteCode; sonaqube로 삭제
	const pageTrack = (digitalData.page.pageInfo.pageTrack || "").toLowerCase();
	var i18n = {};

	// COMP6FE-1619 [EPP] SIEL Offline 뱃지 추가건 : Buy Now CTA 변경
	var i18n_buyNow = $("#eppFlag").val() === "Y" && window.sg.epp && window.sg.epp.common && ( window.sg.epp.common.ecomStoreType === "offline" || window.sg.epp.common.ecomStoreType === "offline_reverse_o2o" ) ? Granite.I18n.get('Buy Online') : $('#i18n_buyNow').val();
	var i18n_learnMore = $('#i18n_learnMore').val();
	var i18n_preOreder = $('#i18n_preOreder').val();
	var i18n_addToCart = "";
	var i18n_whereToBuy = $('#i18n_whereToBuy').val();
	var i18n_findSupport = $('#i18n_findSupport').val();
	var i18n_getStockAlerts = $('#i18n_getStockAlerts').val();
	var i18n_notForSale = "";

	var offerCheckYn = $("#offerCheckYn").val();
	var wtbCtaBtnYN = $("#wtbCtaBtnYN").val();
	var twoCtaBtn = $("#twoCtaBtn").val();

//	var cartUrl = $("#cartUrl").val(); sonaqube로 인한 삭제

	function _getLinkTitle(title){
		var linkTitle = title.split('"').join('&quot;').split('<b>').join('').split('</b>').join('');

		return linkTitle
	}

	function _useImg(img){
		if(typeof img === 'undefined' || img === ''){
			return '';
		}
		
		var reg = /(?:\/\/)([\/a-z0-9-%#?&=\w])+(\.[a-z0-9]{2,4}(\?[\/a-z0-9-%#?&=\w]+)*)*/gi

		if(!reg.test(img))
			img = $('#scene7domain').val() + img;

		return img;
	}
	
	var _cardCTA = {
		getCTA : function(cardItem, tabMenu, category, totalCnt, index){
			var linkUrl = '';
			var ctaText = '';
			var cta = {},
				modelItem = {};
			
			var pcCTAHTML = '',
				moCTAHTML = '';

			var shopSkuCode = '';
			
			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: S 
			var searchValue = $("input#js-input-search").val().toUpperCase();
			
			var searchCodeIdx = -1;
			var seachRegTypeIdx = 0;
			
			for(var j=0; j<cardItem.modelList.length; j++){
				if(searchValue === cardItem.modelList[j].modelCode){
					searchCodeIdx = j;
				}
				
				if(cardItem.modelList[j].mdlRegTypeCd === 'M'){
					seachRegTypeIdx = j;
				}
			}
			/*
			for(var j=0; j<cardItem.modelList.length; j++){
				if(cardItem.modelList[j].mdlRegTypeCd === 'M') modelItem = cardItem.modelList[j];
			}
			 */
			var title = cardItem.displaySortTitle || cardItem.title;

			if(searchCodeIdx > -1){
				modelItem = cardItem.modelList[searchCodeIdx];
				title = modelItem.dispNm;
			}else{
				modelItem = cardItem.modelList[seachRegTypeIdx];
			}
			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: E

			var sourceType = cardItem.sourceType;
			var upperStock = (!!modelItem.price && !!modelItem.promotionPrice) ? (modelItem.stockStatus || "").toUpperCase() : "";
			var buyingPagePath = (cardItem.simplePdYN === "Y") ? "buy/" : "";
			
			var dataOmin = modelItem.modelName.toLowerCase() + "|" + modelItem.modelCode.toLowerCase();
			
			if(modelItem.shopSKU !== null && modelItem.shopSKU !== ""){
				shopSkuCode = modelItem.shopSKU;
			}else{
				shopSkuCode = modelItem.modelCode;
			}

			if(modelItem.price === null){
				modelItem.price =0;
			}
			
			if(wtbCtaBtnYN !== "Y"){
				if(modelItem.shopYN === "Y"){

					if((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "PREORDER") && modelItem.configuratorUrl !== null &&  modelItem.configuratorUrl !== ""){
						linkUrl = modelItem.configuratorUrl + "?modelCode=" + modelItem.modelCode;  
						if(upperStock === "PREORDER"){
							// PREORDER
							pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
						}else{// BUY NOW
							pcCTAHTML += "<a href=\"" + linkUrl+"\" aria-label=\""+_getLinkTitle(title+':'+i18n_buyNow)+"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + i18n_buyNow + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl+"\" aria-label=\""+_getLinkTitle(title+':'+i18n_buyNow)+"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + i18n_buyNow + "</a>";
						}
					}else if((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "PREORDER") && (modelItem.configuratorUrl === null || modelItem.configuratorUrl === "")){
						linkUrl = modelItem.originPdpUrl + buyingPagePath;
						if ( $("#eppFlag").val() === 'Y' ){
							linkUrl = modelItem.originPdpUrl;
							//EPP일 경우 Buy Now 링크 수정(~/feature.{MODEL_CODE} => ~/buy.{MODEL_CODE} )
							linkUrl = linkUrl.replace('feature','buy');
						}
						ctaText = i18n_buyNow;
						if(upperStock === "PREORDER"){
							// PREORDER
							pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
						}else{
							pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+ctaText)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + ctaText + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+ctaText)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + ctaText + "</a>";
						}
					}else if(upperStock === "OUTOFSTOCK"){
						// GET STOCK ALERT
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_getStockAlerts)+"\" class=\"cta cta--contained cta--black js-cta-stock \" data-layer-target=\"#shop-layer-getstock\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelcode=\"" + shopSkuCode + "\"an-tr='search result:all-"+pageTrack+"-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:"+tabMenu+":"+category+":get stock alerts:page"+totalCnt+":result"+index+"'>" + i18n_getStockAlerts + "</a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_getStockAlerts)+"\" class=\"cta cta--contained cta--black js-cta-stock \" data-layer-target=\"#shop-layer-getstock\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelcode=\"" + shopSkuCode + "\"an-tr='search result:all-"+pageTrack+"-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:"+tabMenu+":"+category+":get stock alerts:page"+totalCnt+":result"+index+"'>" + i18n_getStockAlerts + "</a>";
					}else{
						// LEARN MORE
						if(twoCtaBtn === "N"){
							pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_learnMore)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" + i18n_learnMore + "</a>";
						}
					}
					// LEARN MORE 순서변경
					if(twoCtaBtn !== "N"){
						pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_learnMore)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black   \"  data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" + i18n_learnMore + "</a>";
					}
				}else{
					// LEARN MORE
					pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_learnMore)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" + i18n_learnMore + "</a>";
				}
			}else{
				if(modelItem.shopYN === "Y"){
					
					if((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "PREORDER") && modelItem.configuratorUrl !== null &&  modelItem.configuratorUrl !== ""){
						linkUrl = modelItem.configuratorUrl + "?modelCode=" + modelItem.modelCode;  
						if(upperStock === "PREORDER"){
							// PREORDER
							pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
						}else{
							// BUY NOW
							pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_buyNow)+"\" name=\"detailPageLink\" config_info=\"" + modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + i18n_buyNow + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_buyNow)+"\" name=\"detailPageLink\" config_info=\"" + modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + i18n_buyNow + "</a>";
						}
					}else if((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "PREORDER") && (modelItem.configuratorUrl === null || modelItem.configuratorUrl === "")){
						// BUY NOW
						linkUrl = modelItem.originPdpUrl + buyingPagePath;
						if ( $("#eppFlag").val() === 'Y' ){
							linkUrl = modelItem.originPdpUrl;
							//EPP일 경우 Buy Now 링크 수정(~/feature.{MODEL_CODE} => ~/buy.{MODEL_CODE} )
							linkUrl = linkUrl.replace('feature','buy');
						}
						ctaText = i18n_buyNow;
                        
						if(upperStock === "PREORDER"){
							// PREORDER
							pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
							moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_preOreder)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" + i18n_preOreder + "</a>";
						}else{
							if(ctaText !== 'add to cart'){
								// BUY NOW : add to Cart와 함께 사용했으나 add to cart 버튼 사용 안함.
								pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+ctaText)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + ctaText + "</a>";
								moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+ctaText)+"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" + ctaText + "</a>";
							}
						}
					}else if(modelItem.wtbUseYN !== "Y"){
						// NOT FOR SALE
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_notForSale)+"\" class=\"cta cta--contained cta--black cta--disabled\"aria-disabled=\"true\"><span>" + i18n_notForSale + "</span></a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_notForSale)+"\" class=\"cta cta--contained cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelcode=\"" + shopSkuCode + "\">" + i18n_notForSale + "</a>";
					}else if(upperStock === "OUTOFSTOCK"){
						// GET STOCK ALERT
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_getStockAlerts)+"\" class=\"cta cta--contained cta--black js-cta-stock \" data-layer-target=\"#shop-layer-getstock\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelcode=\"" + shopSkuCode + "\"an-tr='search result:all-"+pageTrack+"-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:"+tabMenu+":"+category+":get stock alerts:page"+totalCnt+":result"+index+"'>" + i18n_getStockAlerts + "</a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_getStockAlerts)+"\" class=\"cta cta--contained cta--black js-cta-stock \" data-layer-target=\"#shop-layer-getstock\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelcode=\"" + shopSkuCode + "\"an-tr='search result:all-"+pageTrack+"-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:"+tabMenu+":"+category+":get stock alerts:page"+totalCnt+":result"+index+"'>" + i18n_getStockAlerts + "</a>";
						}
					
				}else{
					if(modelItem.wtbUseYN !== "Y" || upperStock === "INSTOCK"){
						// NOT FOR SALE
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_notForSale)+"\" class=\"cta cta--contained cta--black cta--disabled\" aria-disabled=\"true\"><span>" + i18n_notForSale + "</span></a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\""+_getLinkTitle(title+':'+i18n_notForSale)+"\" class=\"cta cta--contained cta--black\" data-modelcode=\"" + shopSkuCode + "\">" + i18n_notForSale + "</a>";
					}
				}
			}
			//2020.01.08 여기까지해뜸
			/* CTA 버튼 노출 영역 :: E */
			
			/* Learn More 버튼 노출 영역 (Mobile)  :: S */
			/* 9/2 모바일에서 product 카드의 learn more 버튼을 노출하도록 요청 */ 
			if(modelItem.pdpURL !== '')
			{
				moCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+ _getLinkTitle(title + ':' +i18n_learnMore) +"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" +i18n_learnMore + "</a>";
			}
			/* Learn More 버튼 노출 영역 (Mobile)  :: E */
			
			/* Find Support 버튼 노출 영역   :: S */
			if(modelItem.supportLinkUrl){
				pcCTAHTML += "<a href=\"" + modelItem.supportLinkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_findSupport)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.supportLinkUrl + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":find support:page"+totalCnt+":result"+index+"'>" +i18n_findSupport + "</a>";
				moCTAHTML += "<a href=\"" + modelItem.supportLinkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_findSupport)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.supportLinkUrl + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":find support:page"+totalCnt+":result"+index+"'>" +i18n_findSupport + "</a>";
			}
			/* Find Support 버튼 노출 영역   :: E */
			
			/* Where To Buy 버튼 노출 영역 :: S */
			if(wtbCtaBtnYN === "Y"){
				if(modelItem.shopYN === "Y"){
					/* WTB가 CTA 버튼에 위치하는지 여부(SEPOL, SEB WTB은 CTA버튼에 WTB가 위치함.), b2c 제품만 적용 */
					if(upperStock != "INSTOCK" && sourceType !== 'SCMSProduct' && sourceType !== 'SCMSAccessory' && sourceType !== 'BizProduct' 
					&& siteCode !== "de" && siteCode !== "cn" && siteCode !== "ca" && siteCode !== "ca_fr"){
						pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_learnMore)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" + i18n_learnMore + "</a>";
					}else{
						if(modelItem.wtbUseYN === "Y" && siteCode !== "de"){
							if((modelItem.wtbDispFuncUseYN === "Y" && modelItem.shopYN === 'N') || modelItem.wtbDispFuncUseYN === "N"){
								pcCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-modelName=\""+modelItem.modelName+"\" data-title=\'"+modelItem.dispNm+"\' data-modelprice=\""+modelItem.price+"\"  data-modelCode=\"" + modelItem.modelCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" + i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
								moCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-modelName=\""+modelItem.modelName+"\" data-title=\'"+modelItem.dispNm+"\' data-modelprice=\""+modelItem.price+"\"  data-modelCode=\"" + modelItem.modelCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" + i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
							}
						}
					}
				}else{
					if(modelItem.wtbUseYN === "Y" && upperStock != "INSTOCK"){
						// WHERE TO BUY
						pcCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-title=\'"+modelItem.dispNm+"\' data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelCode=\"" + modelItem.modelCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" + i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
						moCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-title=\'"+modelItem.dispNm+"\' data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\"  data-modelCode=\"" + modelItem.modelCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" + i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
					}
				}
			}
			/* Where To Buy 버튼 노출 영역 :: E */
			
			cta = {
				pcCTAHTML : pcCTAHTML,
				moCTAHTML : moCTAHTML
			};
			return cta;
		}
	};

	search.gpv2CTA = search.gpv2CTA || _cardCTA;
	
	function _init(){
		
		i18n.buyNow = Granite.I18n.get('search.comp.resultItem.common.cta.buyNow');
		i18n.learnMore = Granite.I18n.get('search.comp.resultItem.common.cta.learnMore');
		i18n.preOreder = Granite.I18n.get('search.comp.resultItem.common.cta.preOreder');
		i18n.addToCart = Granite.I18n.get('search.comp.resultItem.common.cta.addToCart');
		i18n.whereToBuy = Granite.I18n.get('search.comp.resultItem.common.cta.whereToBuy');
		i18n.findSupport = Granite.I18n.get('search.comp.resultItem.common.cta.findSupport');
		i18n.getStockAlerts = Granite.I18n.get('search.comp.resultItem.common.cta.getStockAlerts');
		i18n.notForSale = Granite.I18n.get('search.comp.resultItem.common.cta.notForSale');
		
//		i18n_addToCart = Granite.I18n.get('search.comp.resultItem.common.cta.addToCart'); sonaqube로 인한 삭제
		i18n_notForSale = Granite.I18n.get('search.comp.resultItem.common.cta.notForSale');
	}
	
	$(function() {
		_init();
	});

	
})(window, jQuery, document, window.smg.sga, window.smg.sga.search);
(function(win, $, doc, sga, search, api) {
	
	const pageTrack = (digitalData.page.pageInfo.pageTrack || "").toLowerCase();
	var categoryMap = {};
	var currentCoords= {};
	var locationPermition = '';
	var userLocationYN = '';
	var PERMISSION_DENIED = '';

	var domKey = sga.domKey;

	var dummyImg = [
		'common-search-support-img_120x120_blank',
		'common-search-img_search_support',
		'common-search-img_search_others',
		'/etc/designs/smg/global/imgs/ETC.jpg'
	];

	var defaultImgPreset = "152_98";
	var defaultImgMobilePreset = "400_256";
	var productImgPreset = "152_152";
	var productImgMobilePreset = "256_256";
	
	var _template = search.template; //sga.template.compile($('div.sga-templates'));

	var isNonShop = $('#isNonShop').val();
	var isGpv2Flag = $('#isGpv2Flag').val();
	var isNewHybrisFlag = $('#isNewHybrisFlag').val(); 				//new-hybris
	var reviewUseYN = $('#reviewUseYN').val();
	var aplautFlag = $('#aplautYn').val();
	var reevooUseYN = $('#reevooUseYN').val();
	var bvFlag = $('#bvFlag').val();
	var bvRTLFlag = $('#bvRTLFlag').val();
	var distanceUnit = $('#distanceUnit').val();
	var storeDomain = $('#storeDomain').val();
	var scene7domain = $('#scene7domain').val();

	var b2bFlag = ("Y" === $("#isBusinessSearchFlag").val()) ? true : false;
	var b2cReviewUseYN = $('#reviewUseYN_b2c').val();
	var b2cReevooUseYN = $('#reevooUseYN_b2c').val();
	var b2cBvFlag = $('#bvFlag_b2c').val();
	var b2cBvRTLFlag = $('#bvRTLFlag_b2c').val();

	var _$COMP = $("section#QueryInput");
	
	var _$ui = {
		inputBox : _$COMP.find("input#js-input-search")
	};
	
	// 20191119 JSON/JSONP 분기처리를 위한 변수 추가
	var hybrisApiJson = $('#hybrisApiJson').val();
	
	var _activeTabId = $('.srp-tab-bar__item--active').data('result-target');
	const LOWEST_WAS_PRICE_STRIKETHROUGH_SITE_CODE = ["pl", "gr", "si", "fi", "hr", "it", "dk", "no", "se", "fr"];
	const isLowestWasPriceOpen = $.inArray(siteCode, LOWEST_WAS_PRICE_STRIKETHROUGH_SITE_CODE) >= 0 ? true : false;
	// 구면 코사인 법칙(Spherical Law of Cosine) 으로 두 위도/경도 지점의 거리를 구함
	// 반환 거리 단위 (km)
	function computeDistance(startCoords, destCoords) {
		var startLatRads = degreesToRadians(startCoords.latitude);
		var startLongRads = degreesToRadians(startCoords.longitude);
		var destLatRads = degreesToRadians(destCoords.latitude);
		var destLongRads = degreesToRadians(destCoords.longitude);
		
		var Radius = 6371; //지구의 반경(km)
		var distance = Math.acos(Math.sin(startLatRads) * Math.sin(destLatRads) + 
			Math.cos(startLatRads) * Math.cos(destLatRads) *
			Math.cos(startLongRads - destLongRads)) * Radius;

		if(distanceUnit === 'mile')
			distance = distance / 1.6; // mile

		return distance;
	}
	
	function imagePreset(imgSrc, presetName){
		var result = "";
		if(imgSrc !== null){
			if(imgSrc.indexOf("?$") < 0) {
				if(imgSrc.indexOf("jpg") > -1) {
					result = imgSrc + "?$"+presetName+"_JPG$";
				} else if(imgSrc.indexOf("JPG") > -1){
					result = imgSrc + "?$"+presetName+"_JPG$";
				} else if(imgSrc.indexOf("jpeg") > -1) {
					result = imgSrc + "?$"+presetName+"_JPG$";
				} else if(imgSrc.indexOf("JPEG") > -1) {
					result = imgSrc + "?$"+presetName+"_JPG$";
				} else if(imgSrc.indexOf("png") > -1) {
					result = imgSrc + "?$"+presetName+"_PNG$";
				} else if(imgSrc.indexOf("PNG") > -1) {
					result = imgSrc + "?$"+presetName+"_PNG$";
				} else if(imgSrc.indexOf("gif") > -1) {
					result = imgSrc + "?$"+presetName+"_GIF$";
				} else if(imgSrc.indexOf("GIF") > -1) {
					result = imgSrc + "?$"+presetName+"_GIF$";
				} else {
					result = imgSrc + "?$"+presetName+"_PNG$";
				} 
				
			}
		}
		return result;
	}
	
	function degreesToRadians(degrees) {
		var radians = (degrees * Math.PI)/180;
		return radians;
	}
	
	function getDistance(storeCoords ){
		var info = { distance : Granite.I18n.get('search.comp.resultItem.store.needLocationInfoUsageAgreement'), blind : 'blind' };
		//Granite.I18n.get('You need a location information usage agreement.')
		if(locationPermition === 'Y'){
			info.distance = computeDistance(currentCoords, storeCoords);
			info.blind = '';
		}
		return info;
	}

	function _useImg(img){
		var reg = /(?:\/\/)([\/a-z0-9-%#?&=\w])+(\.[a-z0-9]{2,4}(\?[\/a-z0-9-%#?&=\w]+)*)*/gi

		if(!reg.test(img))
			img = scene7domain + img;

		for(var i in dummyImg){
			if(img.indexOf(dummyImg[i]) > -1)
				return ''; 
		}
		return img;
	}

	function _getLinkTitle(title){
		var linkTitle = title ? title.split('"').join('&quot;').split('<b>').join('').split('</b>').join('') : "";

		return linkTitle
	}

	function _isBlank(s) {
		return !s || $.trim(s) === '';
	}

	function isNotNull(_str){
		return !fnIsNull(_str) && _str != "null";
	}
	
	function _isNumeric(c) {
		return c === '.' || (c >= '0' && c <= '9');
	}

	function _ltrimNonNumber(s) {
		var n = '';
		if (s.length > 0) {
			for (var i = 0; i < s.length; i++) {
				var c = s.charAt(i);
				if (c === '-' || _isNumeric(c)) {
					n = s.substring(i);
					break;
				}
			}
		}
		return n;
	}

	function _rtrimNonNumber(s) {
		var n = '';
		if (s.length > 0) {
			for (var i = s.length - 1; i >= 0; i--) {
				var c = s.charAt(i);
				if (_isNumeric(c)) {
					n = s.substring(0, i + 1);
					break;
				}
			}
		}
		return n;
	}

	function _trimNonNumber(s) {
		return _rtrimNonNumber(_ltrimNonNumber($.trim(s)));
	}

	function drawList(resultData){
		var _resTagetId = resultData.resultType;
		var _contentList = resultData.contentList;
		var html = '';
		
		
		$('.srp-tab-bar__item').each(function(){
			var cate = $(this).data('tab-type');
			var cateName = $(this).data('tab-name');
			
			categoryMap[cate] = cateName;
		});

		for(var i=0; i < _contentList.length; i++){
			var anTr = "";
			var	anCa = "";
			var anAc = "";
			var anLa = "";
			var ratingAnTr ="";
			var ratingAnCa ="";
			var ratingAnAc ="";
			var ratingAnLa ="";
			var title = '';
			var pcDesc = '';
			var imgYn ='';
			var resultItem = _contentList[i];
			var contentType = _contentList[i].contentSource;
			var taggingContentType = _contentList[i].contentSource || '';
			var filterLocalName = _contentList[i].filterLocalName;
			var taggingPageNum ='';
			var taggingSeletor ='';
			
			taggingContentType = taggingContentType.toLowerCase();
			if(taggingContentType.indexOf('products') > -1) taggingContentType = 'product';
			if(taggingContentType.indexOf('accessories') > -1) taggingContentType = 'accessory';
			if(taggingContentType.indexOf('support') > -1) taggingContentType = 'support';
			// B2B taggingContentType 추가
			if (taggingContentType.indexOf('bizproducts') > -1) taggingContentType = 'product';
			
			if(contentType.indexOf('Support') > -1) filterLocalName = _contentList[i].scmsContentSourceLocalName;
			
			var bindData = {};
			var imgHTML = '';
			
			// TODO 비디오
			var type = resultItem.contentType || '';
			var videoHTML = '';

			if(type.toLowerCase() === 'video'){
				videoHTML = _template.bind('info_video', {});
			}
			
			var thumbnailDefault = resultItem.thumbnailUrl ? _useImg(resultItem.thumbnailUrl) : '';
			var thumbnail = resultItem.thumbnailUrl ? (_useImg(resultItem.thumbnailUrl) !== '' ? imagePreset(thumbnailDefault, defaultImgPreset) : '' ) : '';
			var thumbnailMobile = resultItem.thumbnailUrl ? (_useImg(resultItem.thumbnailUrl) !== '' ? imagePreset(thumbnailDefault, defaultImgMobilePreset) : '' ) : '';
			var thumbnailWithPreset = imagePreset(thumbnailDefault, "LazyLoad_Home");
			var alt = resultItem.thumbnailUrlAlt;

			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: S 
			var searchValue = _$ui.inputBox.val().toUpperCase();
			
			var searchCodeIdx = -1;
			var seachRegTypeIdx = 0;
			
			if(resultItem.modelList){
				for(var j=0; j<resultItem.modelList.length; j++){
					if(searchValue === resultItem.modelList[j].modelCode){
						searchCodeIdx = j;
					}
					
					if(resultItem.modelList[j].mdlRegTypeCd === 'M'){
						seachRegTypeIdx = j;
					}
				}
			}
			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: E

			if(contentType.indexOf('Support') > -1){
				thumbnailDefault = resultItem.thumbUrl ? _useImg(resultItem.thumbUrl) : '';
				thumbnail = resultItem.thumbUrl ? (_useImg(resultItem.thumbUrl) !=='' ? imagePreset(thumbnailDefault, defaultImgPreset) :'') : '';
				thumbnailMobile = resultItem.thumbUrl ? (_useImg(resultItem.thumbUrl) !=='' ? imagePreset(thumbnailDefault, defaultImgMobilePreset) : '') : '';
				thumbnailWithPreset = imagePreset(thumbnailDefault, "LazyLoad_Home");
				alt = ''
			}else if(searchCodeIdx > -1){
				thumbnailDefault = resultItem.modelList[searchCodeIdx].thumbUrl ? _useImg(resultItem.modelList[searchCodeIdx].thumbUrl) : '';
				thumbnail = resultItem.modelList[searchCodeIdx].thumbUrl ? (_useImg(resultItem.modelList[searchCodeIdx].thumbUrl) !=='' ? imagePreset(thumbnailDefault, defaultImgPreset) :'') : '';
				thumbnailMobile = resultItem.modelList[searchCodeIdx].thumbUrl ? (_useImg(resultItem.modelList[searchCodeIdx].thumbUrl) !=='' ? imagePreset(thumbnailDefault, defaultImgMobilePreset) :'') : '';
				thumbnailWithPreset = imagePreset(thumbnailDefault, "LazyLoad_Home");
				if(contentType === 'Products' || contentType === 'BizProducts' || contentType === 'B2cProducts' || contentType === 'Accessories') {
					thumbnail = resultItem.modelList[searchCodeIdx].thumbUrl ? (_useImg(resultItem.modelList[searchCodeIdx].thumbUrl) !=='' ? imagePreset(thumbnailDefault, productImgPreset) :'') : '';
					thumbnailMobile = resultItem.modelList[searchCodeIdx].thumbUrl ? (_useImg(resultItem.modelList[searchCodeIdx].thumbUrl) !=='' ? imagePreset(thumbnailDefault, productImgMobilePreset) :'') : '';
				}
				alt = resultItem.modelList[searchCodeIdx].thumbUrlAlt;
			}
			
			if(thumbnail && thumbnail !== ''){
				bindData = {
					index   : i,
					videoHTML : videoHTML,
					alt : alt,
					thumbnail : thumbnail,
					thumbnailMobile : thumbnailMobile,
					thumbnailWithPreset : thumbnailWithPreset
				};
				
				var $item = $(_template.bind("img", bindData));
				
				var $img = $item.find('img');
	
				$.each($img, function(){ 
					if($(this).hasClass("image__preview")){
						$(this).attr("data-desktop-src", thumbnailWithPreset);
						$(this).attr("data-mobile-src", thumbnailWithPreset);
					}else{
						$(this).attr("data-desktop-src", thumbnail);
						$(this).attr("data-mobile-src", thumbnailMobile);
					}
				});

				imgHTML = $item.html();
			}

			var cateHTML = '';
			var category = '';
			
			if(contentType !== 'Products' && contentType !== 'BizProducts' && contentType !== 'B2cProducts' && contentType !== 'Accessories') {
				var cate = domKey[contentType.toLowerCase()];
				if(contentType.toLowerCase().indexOf('support') > -1) cate = 'support';
				
				category = categoryMap[cate] || '';

				cateHTML = _template.bind('info_cate', { category : category });

				if(category && cateHTML !== '' )
					// [SRP개선팀] 20190810
					// 검색된 컨텐츠가 여러 필터 항목에 맵핑되어 있을 경우
					// 각 필터항목간 구분은 '@' 문자를 연속 2개 사용(@@)하여 처리함
					// 현재는 여러 항목에 맵핑된 컨텐츠의 경우 소분류는 생략하고 대분류만 표시
					// 향후 소분류를 여러개로 나누어 표시해야 할 경우, 구분자로 분리하여 배열처리
					//
					if(filterLocalName && filterLocalName.indexOf('@@') < 0 && category.toUpperCase().split(' ').join('') !== filterLocalName.split(' ').join('')) {
						cateHTML+= _template.bind('info_cate', { category : filterLocalName});
					}
			}
			if(contentType === 'Products' || contentType === 'BizProducts' || contentType === 'B2cProducts' || contentType === 'Accessories') {
				var orginContentType = contentType;
				contentType = 'pd';
				var modelItem = {};
				
				if(resultItem.modelList){
					var priceHTML = '';
					var ratingHTML = '';
					var energyLabelHTML = '';
					var promotionHTML = '';
					var pcCTAHTML = '';
					var moCTAHTML = '';
					var repairabilityHTML = '';			// FR용 badge-repairability HTML 추가
					
					title = resultItem.displaySortTitle || resultItem.title;

					if(searchCodeIdx > -1){
						modelItem = resultItem.modelList[searchCodeIdx];
						title = modelItem.dispNm;
					}else{
						modelItem = resultItem.modelList[seachRegTypeIdx];
					}
					
					// priceCurrency 필드만 있고 price가 없는 경우, priceCurrency 필드에서 숫자만 분리하여 price에 세팅한다.
						if (_isBlank(modelItem.price) && !_isBlank(modelItem.priceCurrency)) {
							modelItem.price = _trimNonNumber(modelItem.priceCurrency);
						}
						// SEF, SEBN, SEDA(rs, al, mk, ba은 스토어국가아니므로 패스), SENA, SEPOL, SEH (우선 pl만 반영)
						// 기존 price(원가, msrp price 포함)가 이미 노출되는 경우에 이를 lowestWasPrice 가 노출되도록 변경하는 작업
						// lowestwasprice 가 price 보다 낮거나 같고, promotion price보다 높을 때만 적용
						lowestWasPriceUseYn = "N";
						if(
							 (isLowestWasPriceOpen)
							&& isNotNull(modelItem.lowestWasPrice)
							&& isNotNull(modelItem.promotionPrice)
							&& (parseFloat(modelItem.lowestWasPrice) <= parseFloat(modelItem.price) && parseFloat(modelItem.promotionPrice) < parseFloat(modelItem.lowestWasPrice))
						){
							console.log("modelCode [{}] origin priceCurrency::{}", modelItem.modelCode, modelItem.priceCurrency);
							console.log("origin lowestWasPriceCurrency::"+modelItem.lowestWasPriceCurrency);
							modelItem.price = modelItem.lowestWasPrice;
							modelItem.priceCurrency = modelItem.lowestWasPriceCurrency;
							lowestWasPriceUseYn = "Y";
							console.log("after price::"+modelItem.price);
							console.log("after priceCurrency::"+modelItem.priceCurrency);
						}

						if(modelItem.price && modelItem.price !== '' && siteCode!= "mx" ){
							var promotionPriceCurrencyCode = modelItem.priceCurrencyCode;
							var promotionPriceCurrency = modelItem.priceCurrency;
							var promotionPriceHTML = '';
							if(siteCode === 'be' || siteCode === 'be_fr' || siteCode === 'nl'){
								promotionPriceCurrency = deleteCurrency(promotionPriceCurrency, promotionPriceCurrencyCode);
							}
							
//							var price = modelItem.price; sonaqube로 인한 삭제
							if(modelItem.promotionPrice && modelItem.promotionPrice !== '' && modelItem.promotionPrice !== modelItem.price){
								var priceCurrency = modelItem.priceCurrency;
								var PriceCurrencyCode = modelItem.priceCurrencyCode;
								promotionPriceCurrencyCode = modelItem.promotionCurrencyCode;
								promotionPriceCurrency = modelItem.promotionPriceCurrency;
								if(siteCode === 'be' || siteCode === 'be_fr' || siteCode === 'nl'){
									promotionPriceCurrency = deleteCurrency(promotionPriceCurrency, promotionPriceCurrencyCode);
									priceCurrency = deleteCurrency(priceCurrency, PriceCurrencyCode);
								}
								
								if((isLowestWasPriceOpen && lowestWasPriceUseYn === "Y") || !isLowestWasPriceOpen){
									if(siteCode === "ro"){
										promotionPriceHTML = `
														<strong class="hidden">${Granite.I18n.get('search.comp.resultItem.product.listPrice')}(${modelItem.priceCurrencyCode}) : </strong> 
														<span class="result-price__normal-money"> ${Granite.I18n.get("RRP {0}", [priceCurrency])}</span>
														`;
									}else{
										promotionPriceHTML = '<strong class="hidden">'+Granite.I18n.get('search.comp.resultItem.product.listPrice')+ '('+modelItem.priceCurrencyCode+') : </strong> <s class="result-price__normal-money">('+priceCurrency+')</s>';
									}
								}
							}

							priceHTML = _template.bind('pd_price', { 
								promotionPriceCurrencyCode : promotionPriceCurrencyCode,
								promotionPriceCurrency : promotionPriceCurrency,
								priceCurrencyCode : modelItem.priceCurrencyCode,
                                priceCurrency : modelItem.priceCurrency,
                                promotionPriceHTML : promotionPriceHTML

							});
						}
						
						var brMobileYN = true;
						
						if (reviewUseYN === 'Y' && (reevooUseYN === 'Y' || bvFlag === 'Y' || bvRTLFlag === 'Y' || aplautFlag === 'Y') && brMobileYN ||
							(_contentList[i].contentSource === 'B2cProducts' && b2cReviewUseYN === 'Y' && (b2cReevooUseYN === 'Y' || b2cBvFlag === 'Y' || b2cBvRTLFlag === 'Y') && brMobileYN)) {
							// B2cProducts는 B2C common meta 사용
							var reviewCount = parseFloat(modelItem.reviewsCount || '0');
							
							taggingSeletor = '#'+_resTagetId.toLowerCase();
							taggingPageNum =$("#result-list-container").find(taggingSeletor).find('.result-pagination__page--active').data('page-target');
							if(!taggingPageNum){
								taggingPageNum= 1;
							}
							
							ratingAnTr = "search result:"+_resTagetId.toLowerCase()+"-"+pageTrack+"-cta-product";
							ratingAnCa = "search";
							ratingAnAc = "search result click";
							ratingAnLa = _resTagetId.toLowerCase()+":product:review:page"+taggingPageNum+":result"+(i+1);
							
							if(reviewCount > 0 ){
								var rating = modelItem.ratings;
								var ratingImg = '';
								
								if(fnIsNull(rating)){ 
									rating = 0; 
								}
								
								// P6 리뷰 url 정의
								//var reviewUrl = '/'+siteCode+'/common/review/'+modelItem.modelCode+'/';
								
								// P5 자창이동 수정
								var reviewUrl = modelItem.linkUrlReview;
								
								// rating 반올림 처리
								var tmpCount = Math.pow(10,1);
								rating = Math.round(rating*tmpCount)/tmpCount;
				
								var ratingValue = parseFloat(rating).toFixed(1),
								fullStarCnt = parseInt(rating),
								cutStarWidthStyleNum = 0;
								cutStarWidthStyleNum = parseInt((ratingValue-fullStarCnt)*100);
								
								for(var j=0; j<fullStarCnt;j++){
									ratingImg+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 100%;"></span></span>';
								}
								if(fullStarCnt < 5 && fullStarCnt > 0){
									ratingImg+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: ' + cutStarWidthStyleNum + '%;"></span></span>';
									for(var k=4;k>fullStarCnt;k--){
										ratingImg+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
									}
								}
								
								// B2B Product tab 에서는 별점 표시 하지 않음.
								if(orginContentType !== 'BizProducts') {
									ratingHTML = _template.bind('pd_rating', { 
										ratingsCount : rating,
										ratingImg : ratingImg, 
										ratings : ratingValue,
										ratingAnTr : ratingAnTr,
										ratingAnCa : ratingAnCa,
										ratingAnAc : ratingAnAc,
										ratingAnLa : ratingAnLa,
										linkTitle : _getLinkTitle(title),
										reviewsLink : reviewUrl,
										tagModelcode : modelItem.modelCode.toLowerCase(),
										tagModelname : modelItem.modelName.toLowerCase(),
										reviewsCount : reviewCount
									});
								}
							}
							
						}
						if(modelItem.energyLabelGrade && modelItem.energyLabelGrade !== ""){
							taggingSeletor = '#'+_resTagetId.toLowerCase();
							taggingPageNum =$("#result-list-container").find(taggingSeletor).find('.result-pagination__page--active').data('page-target');
							if(!taggingPageNum){
								taggingPageNum= 1;
							}

							anTr = "search result:"+_resTagetId.toLowerCase()+"-"+pageTrack+"-cta-product";
							anCa = "search";
							anAc = "search result click";
							anLa = _resTagetId.toLowerCase()+":product:product fiche:page"+taggingPageNum+":result"+(i+1);
							
							if(modelItem.newEnergyLabel!="Y"){
								var energyLevel = modelItem.energyLabelClass2;
								var energyGrade = modelItem.energyLabelClass1;
									energyGrade = energyGrade.substring(8);
								var energyLabelGrade = modelItem.energyLabelGrade;
								var energyLevelArray = energyLevel.split('-');
									energyLevel = energyLevelArray[1];
									energyLabelHTML = _template.bind('pdEnergyLabel', {
									ficheFileUrl : modelItem.ficheFileUrl || '#',
									energyFileUrl : modelItem.energyFileUrl || '#',
									fichelinkTitle : _getLinkTitle(title),
									energylinkTitle : _getLinkTitle(title) + ':' + energyLabelGrade,
									anTr : anTr,
									anCa : anCa,
									anAc : anAc,
									anLa : anLa,
									tagModelcode : modelItem.modelCode.toLowerCase(),
									tagModelname : modelItem.modelName.toLowerCase(),
									energyLevel : energyLevel,
									energyGrade : energyGrade,
									energyLabelGrade : energyLabelGrade
								});
							}else{
								//	energyLevel energyLabelGrade energyFileUrl energylinkTitle
								var energyLevel = modelItem.energyLabelClass;
								
								var energyLabelGrade = modelItem.energyLabelGrade;
								var energyLabelHTML = _template.bind('pdEnergyLabelNew', {
									ficheFileUrl : modelItem.ficheFileUrl || '#',
									energyFileUrl : modelItem.energyFileUrl || '#',
									fichelinkTitle : _getLinkTitle(title),
									energylinkTitle : _getLinkTitle(title) + ':' + energyLabelGrade,
									anTr : anTr,
									anCa : anCa,
									anAc : anAc,
									anLa : anLa,
									tagModelcode : modelItem.modelCode.toLowerCase(),
									tagModelname : modelItem.modelName.toLowerCase(),
									energyLevel : energyLevel,
									energyGrade : energyGrade,
									energyLabelGrade : energyLabelGrade
								});
							}
						}
						
						//badge-repairability 관련 템플릿 바인딩 추가
						if(modelItem.repairabilityIndex!=null && modelItem.repairabilityIndex!=""){
							
                            var repairabilityIndex = Number(modelItem.repairabilityIndex);
                            
							var score = modelItem.repairabilityIndex;
							if(score.length==1){
								score = score + ".0";
							}
                            var repairabilityUrl = "https://www.samsung.com/fr/indice-reparabilite/";
                            if(modelItem.repairabilityIndexPdfUrl != null && modelItem.repairabilityIndexPdfUrl != ""){
                                repairabilityUrl = modelItem.repairabilityIndexPdfUrl;
                            }
                            var imgSrc = "//images.samsung.com/is/image/samsung/"+ siteCode +"/icon/consumer/repairability_index_"+ repairabilityIndex +".png";
							var imgAlt = "Repairability Index : "+score+" / 10";
							
                            var anTr = "search result:"+ _resTagetId.toLowerCase() +"-"+ pageTrack +"-repairability index-search3";
                            var tempArr = repairabilityUrl.split("/");
                            var repairabilityFileName = tempArr[tempArr.length-1];
                            var anLa = "search result click:"+ _resTagetId.toLowerCase()+":"+taggingContentType+":repairability index:page"+taggingPageNum+":result"+(i+1) +":"+ repairabilityFileName;
							
							repairabilityHTML = _template.bind('repairability', {
                                repairabilityPdfUrl : repairabilityUrl,
                                anTr : anTr,
                                anLa : anLa,
                                modelCode : modelItem.modelCode.toLowerCase(),
                                modelName : modelItem.modelName.toLowerCase(),
								repairabilityImgSrc : imgSrc,
								repairabilityImgAlt : imgAlt
							});
						}
						
						var promotionTexts= null;
						var storePromotionsFlag = false;
						
						if(modelItem.storePromotions && modelItem.storePromotions.length > 0){
							promotionTexts = modelItem.storePromotions;
							storePromotionsFlag = true;
						}
						else{
							if(modelItem.uspDesc && modelItem.uspDesc.length > 0){
								promotionTexts = modelItem.uspDesc;
							}
						}
						
						if( promotionTexts && promotionTexts.length > 0 )
						{
							var count = promotionTexts.length > 2 ? 2 : promotionTexts.length; 

							promotionHTML += '<div class="result-description">';
							for(var h=0; h < count; h++){
								if(storePromotionsFlag){
									promotionHTML += '<div class="result-description__text line-clamp-desktop-2 line-clamp-mobile-3"><span>- </span>' + promotionTexts[h] + '</div>';
								}else{
									promotionHTML += '<p class="result-description__text line-clamp-desktop-2 line-clamp-mobile-3">-' + promotionTexts[h] + '</p>';
									
								}
							}
							promotionHTML += '</div>';
						}
						
					//new-hybris
					var cta = search.defCTA;
					if(isGpv2Flag === 'Y' || isNewHybrisFlag ==='Y'){
						cta = search.gpv2CTA;
					}
					
					taggingSeletor = '#'+_resTagetId.toLowerCase();
					taggingPageNum =$("#result-list-container").find(taggingSeletor).find('.result-pagination__page--active').data('page-target');
					if(!taggingPageNum){
						taggingPageNum= 1;
					}
					
					var ctaHTML = "";
					if(orginContentType === 'BizProducts') {
						ctaHTML = search.defCTA.getB2BCTA(resultItem, _resTagetId.toLowerCase(), taggingContentType, taggingPageNum, i+1);
					} else {
						ctaHTML = cta.getCTA(resultItem, _resTagetId.toLowerCase(), taggingContentType, taggingPageNum, i+1);
					}
					
					pcCTAHTML = ctaHTML.pcCTAHTML;
					moCTAHTML = ctaHTML.moCTAHTML;

					if(imgHTML!== '' && modelItem.pdpURL !== ''){
						imgHTML = '<a href="'+ modelItem.pdpURL +'" aria-label="'+ _getLinkTitle(title) +'" data-omni="' + modelItem.modelName.toLowerCase() + '|' + modelItem.modelCode.toLowerCase() + '|image">'+ imgHTML + '</a>';
					}
					

					
					anTr = "search result:"+_resTagetId.toLowerCase()+"-"+pageTrack+"-cta-product";
					anCa = "search";
					anAc = "search result click";
					anLa = _resTagetId.toLowerCase()+":product:product click:page"+taggingPageNum+":result"+(i+1);

					bindData = {
						index : i,
						type : 'product',
						imgHTML : imgHTML,
						linkTitle : _getLinkTitle(title), 
						title : title,
						description : resultItem.description || 'Description',
						link : modelItem.pdpURL,
						tagModelcode : modelItem.modelCode.toLowerCase(),
						tagModelname : modelItem.modelName.toLowerCase(),
						modelName : modelItem.modelCode || modelItem.modelName,
						priceHTML : priceHTML,
						anTr : anTr,
						anCa : anCa,
						anAc : anAc,
						anLa : anLa,
						energyLabelHTML : energyLabelHTML,
						ratingHTML : ratingHTML,
						promotionHTML : promotionHTML,
						repairabilityHTML : repairabilityHTML,
						ctaHTML : pcCTAHTML,
						moctaHTML : moCTAHTML,
						thumbnailDefault : scene7domain + resultItem.thumbnailUrl || _useImg(resultItem.thumbnailUrl),
						thumbnail : imagePreset(thumbnailDefault, productImgPreset) || (_useImg(resultItem.thumbnailUrl) !== '' ? imagePreset(thumbnailDefault, productImgPreset) : ''),
						thumbnailMobile : imagePreset(thumbnailDefault, productImgMobilePreset) || (_useImg(resultItem.thumbnailUrl) !=='' ? imagePreset(thumbnailDefault, productImgMobilePreset) : ''),
						thumbnailWithPreset : imagePreset(thumbnailDefault, "LazyLoad_Home"),
						alt : alt,
						videoHTML : videoHTML
					};
				}			   
			}else if(contentType.indexOf('Support') > -1) {

//				var supportContentType = filterLocalName.toUpperCase(); sonaqube로인한 삭제
				var scmsContentType = resultItem.scmsContentSource.toUpperCase();

				title = $.trim(resultItem.scTitle);
				var description = $.trim(resultItem.scBody);
				var modelName = ($.trim(resultItem.modelName)).toLowerCase() || '';
                var modelCode = ($.trim(resultItem.modelCode)).toLowerCase() || '';

				taggingSeletor = '#'+_resTagetId.toLowerCase();
				taggingPageNum =$("#result-list-container").find(taggingSeletor).find('.result-pagination__page--active').data('page-target');
				if(!taggingPageNum){
					taggingPageNum= 1;
				}
				anTr = "search result:support-"+pageTrack+"-text-tab";
				anCa = "search";
				anAc = "search result click";
				anLa = _resTagetId.toLowerCase()+":"+taggingContentType+":page"+taggingPageNum+":result"+(i+1);
				
				if(scmsContentType === 'PRODUCTS'){
					title = resultItem.dispNm;
					description = resultItem.modelCode;
				}else if(scmsContentType === 'SOLUTIONS' || scmsContentType === 'NEWS'){
					title = resultItem.scTitle;
					description = resultItem.shortTermScBody;
				}else if(scmsContentType === 'INTERACTIVE GUIDE'){
					title = resultItem.scTitle;
					description = resultItem.topicTitle;
				}
				
				pcDesc += '<div class="result-description hide-mobile">';
				pcDesc += '<p class="result-description__text line-clamp-desktop-2 line-clamp-mobile-3">'+ description  +'</p></div>';
				
				bindData = {
					index : i,
					type : 'support',
					linkTitle : _getLinkTitle(title),
					link : resultItem.linkUrl,
					imgHTML : imgHTML,
					title : title,
					pcDesc : pcDesc,
					tagModelcode : modelCode,
					tagModelname : modelName,
					anTr : anTr,
					anCa : anCa,
					anAc : anAc,
					anLa : anLa,
					mobileDesc : '',
					categoryHTML : cateHTML,
					promotionPreiod : '',
					appLinkHTML : ''
				};

				//221026 epp outlink icon html 추가
				if ( $("#eppFlag").val() === 'Y' ){
					bindData.ariaLabel = title + ' : ' + Granite.I18n.get("Open in a new window");
					bindData.outLinkIconHtml = '<svg class="icon" focusable="false" aria-hidden="true"><use xlink:href="#outlink-bold" href="#outlink-bold"></use></svg>';
					contentType = 'epp_support';
				} else {
					contentType = 'info';
				}
			}else{
				var downLink = '';
				var appLinkHTML = '';
				var cardType = 'common';
				var promotionPreiod = '';
				taggingSeletor = '#'+_resTagetId.toLowerCase();
				taggingPageNum =$("#result-list-container").find(taggingSeletor).find('.result-pagination__page--active').data('page-target');
				if(!taggingPageNum){
					taggingPageNum= 1;
				}
				
				anTr = "search result:"+_contentList[i].contentSource.toLowerCase()+"-"+pageTrack+"-text-tab";
				anCa = "search";
				anAc = "search result click";
				anLa = _resTagetId.toLowerCase()+":"+taggingContentType+":page"+taggingPageNum+":result"+(i+1);
				
				title = resultItem.title || '';


				
				if(contentType ==='Promotion'){
					var dispStYmd = resultItem.dispStYmd ? new Date(resultItem.dispStYmd) : '';
					var dispEndYmd = resultItem.dispEndYmd ? new Date(resultItem.dispEndYmd) : '';
					
					if(dispStYmd !=='' && dispEndYmd !== ''){
						promotionPreiod += _template.bind('pdPromoPeriod', {
							startDate : dispStYmd!=='' ? dispStYmd.format('yyyy.MM.dd') : '',
							endDate : dispEndYmd!=='' ? dispEndYmd.format('yyyy.MM.dd') : ''
						});
					}
				}

				if(downLink !== ''){
					// TODO 추후 태깅 변경 가능 appdownload
					appLinkHTML = _template.bind('pdAppDown', {downLink :downLink, tagModelcode : resultItem.modelCode.toLowerCase(), tagModelname : resultItem.modelName.toLowerCase(), linkTitle : _getLinkTitle(title)});
				}
				
				contentType = 'info';
				
				pcDesc += '<div class="result-description hide-mobile">';
				pcDesc += '<p class="result-description__text line-clamp-desktop-2 line-clamp-mobile-3">'+ resultItem.description  +'</p></div>';
				
				var mobileDesc = '';
					mobileDesc += '<div class="result-description show-mobile">';
					mobileDesc += '<p class="result-description__text line-clamp-desktop-2 line-clamp-mobile-3">' + resultItem.description + '</p></div>' ;
				bindData = {
					index : i,
					type : cardType, //_resTagetId
					linkTitle : _getLinkTitle(title),
					link : resultItem.linkUrl,
					imgHTML : imgHTML,
					imgYn : imgYn,
					title : title,
					anTr : anTr,
					anCa : anCa,
					anAc : anAc,
					anLa : anLa,
					pcDesc : pcDesc,
					mobileDesc : mobileDesc,
					categoryHTML : cateHTML,
					promotionPreiod : promotionPreiod,
					appLinkHTML : appLinkHTML
				};
				

			}
			html += _template.bind(contentType, bindData);
		}
		
		$('#' + _activeTabId + ' ul.result-list__wrap').html(html);
		window.sg.components.resultList.reInit();
		window.smg.wtb.common.reInit();
		$('html').scrollTop(0);

		window.sg.common.lazyLoad.initAll();
		/*window.sg.components.resultList.reInit();*/
		
		// getStockAlert 이벤트 바인딩
		win.smg.sga.search.getStockAlert.bindEvent();

		$("a[name=detailPageLink]").off("click");
		$("a[name=detailPageLink]").on("click",function(){
			// 이벤트의 기본 동작을 중단한다.
			event.preventDefault();
			var linkInfo = $(this).attr('link_info');
			var linkUrl = linkInfo.split('@@').length > 0 ? linkInfo.split('@@')[0] : null;
			var target = $(this).attr("target") ? $(this).attr("target") : "";
			var evntFlag = false;
			
			if(event.ctrlKey){
				evntFlag = true;
			}
			
			pageLink(linkUrl, target, evntFlag);
		});

		function pageLink(linkUrl, targetType, evntFlag) {
			if(evntFlag || targetType === '_blank'){ 
				window.open( linkUrl, '_blank'); 
			}else{
				location.href = linkUrl; 
			}
		}

		$("a[data-href-target]").each(function(){
			var $this = $(this);
			var href = $this.data('href-target');
			if(href) $this.attr('href', href);

			var tagging = $this.data('tagging-info');
			if(tagging){
				$this.attr('data-omni', tagging);
				$this.removeAttr( 'data-tagging-info' );
			}
		});
	}
	
	//drawInfo 끝 
	
	function noReasultHtml(){
		var noResultHtml = `<div class="result-list__no-result">
	        <svg class="icon">
	          <use xlink:href="#emoticon-sorry-regular" href="#emoticon-sorry-regular"></use>
	        </svg>
	        <p class="result-list__no-result-title">${Granite.I18n.get('Sorry, no results were found.')}</p>
	      </div>
	      `;
	      return noResultHtml;
	}
	function resultListWrapHtml(){
		var resultListWrapHtml = `
							<ul class="result-list__wrap">
							</ul>
	      `;
	      return resultListWrapHtml;
	}
	function _init() {

		sga.ui.registerEventListener("init-panel", "result-list", function(resData) {
			_activeTabId = $('.srp-tab-bar__item--active').data('result-target');

			if(resData.resultList && resData.resultList.length > 0 && resData.resultList[0].resultCount !== '0'){
				$('#' + _activeTabId + ' .search-count').html(resData.resultList[0].resultCount);
				$('#' + _activeTabId + ' .search-keyword').html(resData.common.originSearchValue);
				
				$('#' + _activeTabId + ' div.result-list').html(resultListWrapHtml());
				
				if(resData.resultList[0].contentList) drawList(resData.resultList[0]);
			}else{
				$('#' + _activeTabId + ' ul.result-list__wrap').html('');
				$('#' + _activeTabId + ' div.result-list').html(noReasultHtml());
			}
		});
		
		sga.ui.registerEventListener("panel-refresh", "result-list", function(resData) {
			_activeTabId = $('.srp-tab-bar__item--active').data('result-target');

			if(resData.resultList && resData.resultList.length > 0 && resData.resultList[0].resultCount !== '0'){
				$('#' + _activeTabId + ' .search-count').html(resData.resultList[0].resultCount);
				$('#' + _activeTabId + ' .search-keyword').html(resData.common.originSearchValue);
				
				$('#' + _activeTabId + ' div.result-list').html(resultListWrapHtml());
				
				if(resData.resultList[0].contentList) drawList(resData.resultList[0]);
			}else{
				$('#' + _activeTabId + ' ul.result-list__wrap').html('');
				$('#' + _activeTabId + ' div.result-list').html(noReasultHtml());
			}
		});

		sga.ui.registerEventListener("result-refresh", "result-list", function(resData) {
			_activeTabId = $('.srp-tab-bar__item--active').data('result-target');

			if(resData.resultList && resData.resultList.length > 0 && resData.resultList[0].resultCount !== '0'){
				$('#' + _activeTabId + ' .search-count').html(resData.resultList[0].resultCount);
				$('#' + _activeTabId + ' .search-keyword').html(resData.common.originSearchValue);
				
				$('#' + _activeTabId + ' div.result-list').html(resultListWrapHtml());
				
				if(resData.resultList[0].contentList) drawList(resData.resultList[0]);
			}else{
				$('#' + _activeTabId + ' ul.result-list__wrap').html('');
				$('#' + _activeTabId + ' div.result-list').html(noReasultHtml());
			}
		});
	}
	
	$(function() {
		_init();
	});

})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient);
(function(win, $, doc, sga, search) {
	'use strict';
	const pageTrack = (digitalData.page.pageInfo.pageTrack || "").toLowerCase();
	var siteCode_val = $("#siteCode").val();;
//	var HINT = 'sc_'+siteCode_val; sonaqube 로 삭제

	var i18n = {};

	// COMP6FE-1619 [EPP] SIEL Offline 뱃지 추가건 : Buy Now CTA 변경
	var i18n_buyNow = $("#eppFlag").val() === "Y" && window.sg.epp && window.sg.epp.common && ( window.sg.epp.common.ecomStoreType === "offline" || window.sg.epp.common.ecomStoreType === "offline_reverse_o2o" ) ? Granite.I18n.get('Buy Online') : $('#i18n_buyNow').val();
	var i18n_learnMore = $('#i18n_learnMore').val();
	var i18n_preOreder = $('#i18n_preOreder').val();
//	var i18n_addToCart = Granite.I18n.get('search.comp.resultItem.common.cta.addToCart'); sonaqube로 인한 삭제
	var i18n_whereToBuy = $('#i18n_whereToBuy').val();
	var i18n_findSupport = $('#i18n_findSupport').val();
	var i18n_getStockAlerts = $('#i18n_getStockAlerts').val();
	var i18n_outOfStock = Granite.I18n.get('search.comp.resultItem.common.cta.outOfStock');
	var isB2bShopIntegrationFlag = $('#isB2bShopIntegrationFlag').val(); 
	var shopIntegrationFlag = $('#shopIntegrationFlag').val(); 
	
	var isNonShop = fnIsNull(shopIntegrationFlag)?true:false;
	
	function _getLinkTitle(title){
		var linkTitle = title.split('"').join('&quot;').split('<b>').join('').split('</b>').join('');

		return linkTitle
	}

	function _useImg(img){
		if(typeof img === 'undefined' || img === ''){
			return '';
		}
		
		var reg = /(?:\/\/)([\/a-z0-9-%#?&=\w])+(\.[a-z0-9]{2,4}(\?[\/a-z0-9-%#?&=\w]+)*)*/gi

		if(!reg.test(img))
			img = $('#scene7domain').val() + img;

		return img;
	}
	
	var _cardCTA = {
		getCTA : function(cardItem, tabMenu, category, totalCnt, index){
			var cta = {},
				modelItem = {};

			var pcCTAHTML = '',
				moCTAHTML = '';

			var shopSkuCode = '';

			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: S 
			var searchValue = $("input#js-input-search").val().toUpperCase();
			
			var searchCodeIdx = -1;
			var seachRegTypeIdx = 0;
			
			for(var j=0; j<cardItem.modelList.length; j++){
				if(searchValue === cardItem.modelList[j].modelCode){
					searchCodeIdx = j;
				}
				
				if(cardItem.modelList[j].mdlRegTypeCd === 'M'){
					seachRegTypeIdx = j;
				}
			}
			/*
			for(var j=0; j<cardItem.modelList.length; j++){
				if(cardItem.modelList[j].mdlRegTypeCd === 'M') modelItem = cardItem.modelList[j];
			}
			 */
			var title = cardItem.displaySortTitle || cardItem.title;

			if(searchCodeIdx > -1){
				modelItem = cardItem.modelList[searchCodeIdx];
				title = modelItem.dispNm;
			}else{
				modelItem = cardItem.modelList[seachRegTypeIdx];
			}
			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: E
			var buyingPagePath = (cardItem.simplePdYN === "Y") ? "buy/" : "";
			
			var dataOmin = modelItem.modelName.toLowerCase() + "|" + modelItem.modelCode.toLowerCase();

			if(modelItem.shopSKU !== null && modelItem.shopSKU !== ""){
				shopSkuCode = modelItem.shopSKU;
			}else{
				shopSkuCode = modelItem.modelCode;
			}
			
			if(modelItem.price === null){
				modelItem.price =0;
			}
			
			/* 191217 shop 국가 buy now cta 노출 기준 변경  :: S */
			if(modelItem.shopYN === 'Y'){
				var upperStock = '';
				var linkUrl = '';
				
				if(modelItem.ctaType !== null && modelItem.ctaType !== ""){
					upperStock = modelItem.ctaType.toUpperCase();
				}
				
				if((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "PREORDER") && modelItem.configuratorUrl !== null &&  modelItem.configuratorUrl !== ""){
					linkUrl = modelItem.configuratorUrl;
					if(upperStock !== "PREORDER"){
						// BUY NOW
						pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_buyNow) +"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" +i18n_buyNow + "</a>";
						moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_buyNow) +"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" +i18n_buyNow + "</a>";
					}else{
						// PREORDER
						pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_preOreder) +"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" +i18n_preOreder + "</a>";
						moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_preOreder) +"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black  js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" +i18n_preOreder + "</a>";
					}
				}else if((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "PREORDER") && (modelItem.configuratorUrl === null || modelItem.configuratorUrl === "")){
					let linkPdpUrl = modelItem.pdpURL + buyingPagePath;
					//EPP일 경우 Buy Now 링크 수정(~/feature.{MODEL_CODE} => ~/buy.{MODEL_CODE} )
					if ( $("#eppFlag").val() === 'Y' ){
						linkPdpUrl = modelItem.pdpURL;
						linkPdpUrl = linkPdpUrl.replace('feature','buy');
					}
					if(upperStock !== "PREORDER"){
						// BUY NOW
						pcCTAHTML += "<a href=\"" + linkPdpUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_buyNow) +"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkPdpUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" +i18n_buyNow + "</a>";
						moCTAHTML += "<a href=\"" + linkPdpUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_buyNow) +"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkPdpUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" +i18n_buyNow + "</a>";
						
					}else{
						// PREORDER
						pcCTAHTML += "<a href=\"" + linkPdpUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_preOreder) +"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkPdpUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" +i18n_preOreder + "</a>";
						moCTAHTML += "<a href=\"" + linkPdpUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_preOreder) +"\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkPdpUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:"+tabMenu+":"+category+":pre-order:page"+totalCnt+":result"+index+"'>" +i18n_preOreder + "</a>";
					}
				}else if(upperStock === "OUTOFSTOCK"){
					if( SITE_CD==="pk" || SITE_CD==="au" || SITE_CD==="th" || SITE_CD==="vn" || SITE_CD==="nz" || SITE_CD==="es" || SITE_CD==="it" || SITE_CD==="tw" || SITE_CD==="ru" || SITE_CD==="ae" || SITE_CD==="ae_ar" || SITE_CD==="sg" || SITE_CD=="sa" || SITE_CD=="sa_en"){
						// GET STOCK ALERT
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\""+ _getLinkTitle(title+':'+i18n_getStockAlerts) +"\" class=\"cta cta--contained cta--black js-cta-stock\" data-layer-target=\"#shop-layer-getstock\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelcode=\"" + shopSkuCode + "\" an-tr='search result:all-"+pageTrack+"-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:"+tabMenu+":"+category+":get stock alerts:page"+totalCnt+":result"+index+"'>" +i18n_getStockAlerts + "</a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\""+ _getLinkTitle(title+':'+i18n_getStockAlerts) +"\" class=\"cta cta--contained cta--black js-cta-stock\" data-layer-target=\"#shop-layer-getstock\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelcode=\"" + shopSkuCode + "\" an-tr='search result:all-"+pageTrack+"-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:"+tabMenu+":"+category+":get stock alerts:page"+totalCnt+":result"+index+"'>" +i18n_getStockAlerts + "</a>";
					}else{
						// OUT OF STOCK
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\""+ _getLinkTitle(title+':'+i18n_outOfStock) +"\" class=\"cta cta--underline cta--black cta--disabled\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelcode=\"" + shopSkuCode + "\" aria-disabled=\"true\">" +i18n_outOfStock + "</a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\""+ _getLinkTitle(title+':'+i18n_outOfStock) +"\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelcode=\"" + shopSkuCode + "\">" +i18n_outOfStock + "</a>";
					}
				}else if(upperStock === "WHERETOBUY" || upperStock === "BUYNOWLINK"){

					if(modelItem.configuratorUrl !== null && modelItem.configuratorUrl !== ""){
						linkUrl = modelItem.configuratorUrl;
					}else{
						linkUrl = modelItem.pdpURL + buyingPagePath;
						//EPP일 경우 Buy Now 링크 수정(~/feature.{MODEL_CODE} => ~/buy.{MODEL_CODE} )
						if ( $("#eppFlag").val() === 'Y' ){
							linkUrl = modelItem.pdpURL;
							linkUrl = linkUrl.replace('feature','buy');
						}						
					}
					if(upperStock === "WHERETOBUY" && SITE_CD === "tr"){
						linkUrl = modelItem.shopCtaUrl;
					}
					// BUY NOW
					pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_buyNow) +"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" +i18n_buyNow + "</a>";
					moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\""+ _getLinkTitle(title+':'+i18n_buyNow) +"\" name=\"detailPageLink\" config_info=\"" +modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-"+pageTrack+"-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:"+tabMenu+":"+category+":buy now:page"+totalCnt+":result"+index+"'>" +i18n_buyNow + "</a>";
				}
				/* 191217 shop 국가 buy now cta 노출 기준 변경  :: E */
				// LEARN MORE 순서 변경
				if(modelItem.pdpURL !== ''){
					pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+ _getLinkTitle(title + ':' +i18n_learnMore) +"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" +i18n_learnMore + "</a>";
				}
			}else{
				// LEARN MORE
				pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_learnMore)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'><span>" +i18n_learnMore + "</span></a>";
			}
			
			/* Learn More 버튼 노출 영역 (Mobile)  :: S */
			/* 9/2 모바일에서 product 카드의 learn more 버튼을 노출하도록 요청 */ 
			if(modelItem.pdpURL !== '')
			{
				moCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+ _getLinkTitle(title + ':' +i18n_learnMore) +"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" +i18n_learnMore + "</a>";	
			}
			/* Learn More 버튼 노출 영역 (Mobile)  :: E */
			
			/* Find Support 버튼 노출 영역 (Mobile)  :: S */
			if(modelItem.supportLinkUrl){
				// epp ru 국가 product tab만 사용 (support 링크 불필요)
				if ( !($("#eppFlag").val() === 'Y' && SITE_CD === 'ru') ){
					pcCTAHTML += "<a href=\"" + modelItem.supportLinkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_findSupport)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.supportLinkUrl + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":find support:page"+totalCnt+":result"+index+"'>" +i18n_findSupport + "</a>";
					moCTAHTML += "<a href=\"" + modelItem.supportLinkUrl + "\" aria-label=\""+_getLinkTitle(title+':'+i18n_findSupport)+"\" name=\"detailPageLink\" link_info=\"" + modelItem.supportLinkUrl + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":find support:page"+totalCnt+":result"+index+"'>" +i18n_findSupport + "</a>";
				}
			}
			/* Find Support 버튼 노출 영역 (Mobile)  :: E */
			
			/* Where To Buy 버튼 노출 영역 (Mobile)  :: S */
			if(!isNonShop){// shop 국가
				if(modelItem.wtbUseYN === "Y" && SITE_CD !== "de" && SITE_CD !== "ch" && SITE_CD !== "ch_fr"){
					//판매 N : wtb 노출
					if((modelItem.wtbDispFuncUseYN === "Y" && modelItem.shopYN === 'N') || modelItem.wtbDispFuncUseYN === "N"){
						pcCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" +i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
						moCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" +i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
					}
				}
			}else{
				if(modelItem.wtbUseYN === "Y" && SITE_CD !== "de" && SITE_CD !== "ch" && SITE_CD !== "ch_fr"){
					pcCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" +i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
					moCTAHTML += "<a href=\"javascript:void(0);\" aria-label=\""+_getLinkTitle(title+':'+i18n_whereToBuy)+"\" class=\"cta cta--label cta--black cta--icon cta--icon-leading cta--icon-location js-cta-buy\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" data-iaCode=\"" + cardItem.categorySubTypeCode + "\" data-img-src=\"" + _useImg(modelItem.thumbUrl) + "\" an-tr='search result:all-"+pageTrack+"-text-where to buy' an-ca='buy cta' an-ac='where to buy' an-la='search result click:"+tabMenu+":"+category+":where to buy:page"+totalCnt+":result"+index+"'>" +i18n_whereToBuy + "<svg class=\"icon\" focusable=\"false\" aria-hidden=\"true\"><use xlink:href=\"#location-bold\" href=\"#location-bold\"></use></svg></a>";
				}					
			}
			/* Where To Buy 버튼 노출 영역 (Mobile)  :: E */
			
			cta = {
				pcCTAHTML : pcCTAHTML,
				moCTAHTML : moCTAHTML
			};

			return cta;
		},
	
		getB2BCTA : function(cardItem, tabMenu, category, totalCnt, index){
			var cta = {},
				modelItem = {};
	
			var pcCTAHTML = '',
				moCTAHTML = '';
	
			var shopSkuCode = '';
	
			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: S 
			var searchValue = $("input#js-input-search").val().toUpperCase();
			
			var searchCodeIdx = -1;
			var seachRegTypeIdx = 0;
			
			for(var j=0; j<cardItem.modelList.length; j++){
				if(searchValue === cardItem.modelList[j].modelCode){
					searchCodeIdx = j;
				}
				
				if(cardItem.modelList[j].mdlRegTypeCd === 'M'){
					seachRegTypeIdx = j;
				}
			}
			/*
			for(var j=0; j<cardItem.modelList.length; j++){
				if(cardItem.modelList[j].mdlRegTypeCd === 'M') modelItem = cardItem.modelList[j];
			}
			 */
			var title = cardItem.displaySortTitle || cardItem.title;
	
			if(searchCodeIdx > -1){
				modelItem = cardItem.modelList[searchCodeIdx];
				title = modelItem.dispNm;
			}else{
				modelItem = cardItem.modelList[seachRegTypeIdx];
			}
			// 검색어가 모델코드와 일치하는 경우 데이터 변경 :: E
			var buyingPagePath = (cardItem.simplePdYN === "Y") ? "buy/" : "";
			
			var dataOmin = modelItem.modelName.toLowerCase() + "|" + modelItem.modelCode.toLowerCase();
	
			if(modelItem.shopSKU !== null && modelItem.shopSKU !== ""){
				shopSkuCode = modelItem.shopSKU;
			}else{
				shopSkuCode = modelItem.modelCode;
			}
			
			if(modelItem.price === null){
				modelItem.price =0;
			}
			
			if(modelItem.shopYN === 'Y' && isB2bShopIntegrationFlag === 'Y'){
				var upperStock = '';
				var linkUrl = '';
				
				if(modelItem.ctaType !== null && modelItem.ctaType !== ""){
					upperStock = modelItem.ctaType.toUpperCase();
				}

				if (modelItem.configuratorUrl !== null && modelItem.configuratorUrl !== "") {
					linkUrl = modelItem.configuratorUrl;
				} else {
					linkUrl = modelItem.pdpURL;
				}

				if ((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "WHERETOBUY" || upperStock === "BUYNOWLINK") && modelItem.configuratorUrl !== null &&  modelItem.configuratorUrl !== "") {
					// BUY NOW
					pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_buyNow) + "\" name=\"detailPageLink\" config_info=\"" + modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-" + pageTrack + "-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:" + tabMenu + ":" + category + ":buy now:page" + totalCnt + ":result" + index + "'>" + i18n_buyNow + "</a>";
					moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_buyNow) + "\" name=\"detailPageLink\" config_info=\"" + modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black  js-buy-now\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-" + pageTrack + "-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:" + tabMenu + ":" + category + ":buy now:page" + totalCnt + ":result" + index + "'>" + i18n_buyNow + "</a>";
				}else if ((upperStock === "INSTOCK" || upperStock === "BACKORDERED" || upperStock === "WHERETOBUY" || upperStock === "BUYNOWLINK")&& (modelItem.configuratorUrl === null || modelItem.configuratorUrl === "")) {
					linkUrl = modelItem.originPdpUrl + buyingPagePath;
					// BUY NOW
					pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_buyNow) + "\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-" + pageTrack + "-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:" + tabMenu + ":" + category + ":buy now:page" + totalCnt + ":result" + index + "'>" + i18n_buyNow + "</a>";
					moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_buyNow) + "\" name=\"detailPageLink\" config_info=\"\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black  js-buy-now\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-" + pageTrack + "-text-buy cta' an-ca='buy cta' an-ac='buy now' an-la='search result click:" + tabMenu + ":" + category + ":buy now:page" + totalCnt + ":result" + index + "'>" + i18n_buyNow + "</a>";
				} else if (upperStock === "PREORDER") {
					// PREORDER
					pcCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_preOreder) + "\" name=\"detailPageLink\" config_info=\"" + modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-" + pageTrack + "-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:" + tabMenu + ":" + category + ":pre-order:page" + totalCnt + ":result" + index + "'>" + i18n_preOreder + "</a>";
					moCTAHTML += "<a href=\"" + linkUrl + "\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_preOreder) + "\" name=\"detailPageLink\" config_info=\"" + modelItem.configuratorUrl + "\" link_info=\"" + linkUrl + "@@" + "\" class=\"cta cta--contained cta--black js-buy-now\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:all-" + pageTrack + "-text-buy cta' an-ca='buy cta' an-ac='pre-order' an-la='search result click:" + tabMenu + ":" + category + ":pre-order:page" + totalCnt + ":result" + index + "'>" + i18n_preOreder + "</a>";
				} else if (upperStock === "OUTOFSTOCK") {
					if (SITE_CD === "pk" || SITE_CD === "au" || SITE_CD === "th" || SITE_CD === "vn" || SITE_CD === "nz" || SITE_CD === "es" || SITE_CD === "it" || SITE_CD === "tw" || SITE_CD === "ru" || SITE_CD === "ae" || SITE_CD === "ae_ar" || SITE_CD === "sg" || SITE_CD == "sa" || SITE_CD == "sa_en") {
						// GET STOCK ALERT
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_getStockAlerts) + "\" class=\"cta cta--contained cta--black js-cta-stock-b2b\" data-layer-target=\"#shop-layer-getstock\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelcode=\"" + shopSkuCode + "\" an-tr='search result:all-" + pageTrack + "-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:" + tabMenu + ":" + category + ":get stock alerts:page" + totalCnt + ":result" + index + "'>" + i18n_getStockAlerts + "</a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_getStockAlerts) + "\" class=\"cta cta--contained cta--black js-cta-stock-b2b\" data-layer-target=\"#shop-layer-getstock\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelcode=\"" + shopSkuCode + "\" an-tr='search result:all-" + pageTrack + "-text-stock alert' an-ca='buy cta' an-ac='stock alert' an-la='search result click:" + tabMenu + ":" + category + ":get stock alerts:page" + totalCnt + ":result" + index + "'>" + i18n_getStockAlerts + "</a>";
					} else {
						// OUT OF STOCK
						pcCTAHTML += "<a href=\"javascript:;\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_outOfStock) + "\" class=\"cta cta--underline cta--black cta--disabled\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelcode=\"" + shopSkuCode + "\" aria-disabled=\"true\">" + i18n_outOfStock + "</a>";
						moCTAHTML += "<a href=\"javascript:;\" aria-label=\"" + _getLinkTitle(title + ':' + i18n_outOfStock) + "\" class=\"cta cta--underline cta--black\" data-modelName=\"" + modelItem.modelName + "\" data-modelprice=\"" + modelItem.price + "\" data-modelcode=\"" + shopSkuCode + "\">" + i18n_outOfStock + "</a>";
					}
				}
			}
			// LEARN MORE 순서변경
			if(modelItem.pdpURL !== ''){
				pcCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+ _getLinkTitle(title + ':' +i18n_learnMore) +"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" +i18n_learnMore + "</a>";
				moCTAHTML += "<a href=\"" + modelItem.pdpURL + "\" aria-label=\""+ _getLinkTitle(title + ':' +i18n_learnMore) +"\" name=\"detailPageLink\" link_info=\"" + modelItem.pdpURL + "@@" + "\" class=\"cta cta--underline cta--black\" data-modelName=\""+modelItem.modelName+"\" data-modelprice=\""+modelItem.price+"\" data-modelCode=\"" + modelItem.modelCode + "\" an-tr='search result:"+tabMenu+"-"+pageTrack+"-cta-product' an-ca='search' an-ac='search result click' an-la='"+tabMenu+":"+category+":learn more:page"+totalCnt+":result"+index+"'>" +i18n_learnMore + "</a>";
			}

			cta = {
				pcCTAHTML : pcCTAHTML,
				moCTAHTML : moCTAHTML
			};
	
			return cta;
		}
	};
	search.defCTA = search.defCTA || _cardCTA;


})(window, jQuery, document, window.smg.sga, window.smg.sga.search);
(() => {
  const utils = window.sg.common.utils;
  const $q = window.sg.common.$q;
  const BREAKPOINTS = window.sg.common.constants.BREAKPOINTS;

  let resultLists = {};
  let tabBarActiveItem = {};
  let tabBarActiveItemId = '';

  function init() {
    resultLists = document.querySelectorAll('.result-list');
    tabBarActiveItem = document.querySelector('.srp-tab-bar__item--active');

    if (resultLists.length === 0) {
      return;
    }

    bindEvents('all');
    resizeImage('all');
  }

  function findTabBarActiveItemId() {
    tabBarActiveItem = document.querySelector('.srp-tab-bar__item--active');
    tabBarActiveItemId = tabBarActiveItem.dataset.resultTarget;
  }

  function resizeImage(id) {
    const selector = `#${id} .result-item`;
    
    const resultItem = document.querySelectorAll(selector);

    for (let i = 0; i < resultItem.length; i++) {
      const resultImage = resultItem[i].querySelector('.result-img');

      if (resultImage) {
        if (utils.getViewPort().width > BREAKPOINTS.MOBILE) {
          resultImage.style.height = `${resultItem[i].querySelector('.result-item__content').getBoundingClientRect().height}px`;
        } else {
          resultImage.style = '';
        }
      }
    }
  }

  function bindEvents(id) {
    window.addEventListener('resize', () => {
      resizeImage(id);
    });
  }

  function reInit() {
    findTabBarActiveItemId();
    bindEvents(tabBarActiveItemId);
    resizeImage(tabBarActiveItemId);
    window.sg.common.lazyLoad.setLazyLoad();
  }

  window.sg.components.resultList = { init, reInit };

  $q.ready(() => init());
})();

(function(win, $, doc, sga, search, api) {
    
    var relatedSearchHTML = $("<div />").append($("div#relatedSearch").clone()).html();
    var pageTrack = digitalData.page.pageInfo.pageTrack.toLowerCase();
    var relatedKeywords = [];
    var searchKeyword = '';
    var _activeTabId = null;

    var _template = search.template; //sga.template.compile($('div.sga-templates'));

    function _drawRelatedSearch(){
        var q = $.trim($('section#QueryInput input#js-input-search').val());

        if(relatedKeywords && relatedKeywords.length > 0){
            var $relatedSearch = $(relatedSearchHTML);
            var html = '';

            for(var i=0; i < relatedKeywords.length; i++){
                if(q !== $.trim(relatedKeywords[i])){
                    var bindData = {
                        index : i,
                        liClass : 'related-searches__item',
                        aClass : 'related-searches__item-link',
                        keywordTarget : relatedKeywords[i].split('"').join('&quot;').split('<b>').join('').split('</b>').join(''),
                        keyword : relatedKeywords[i],
                        anTr : 'search result:all-'+pageTrack+'-text-related',
                        anCa : 'search',
                        anAc : 'search result click',
                        anLa : 'related searches:bottom:'+relatedKeywords[i].split('"').join('&quot;').split('<b>').join('').split('</b>').join('').toLowerCase()+':keyword:'+q.toLowerCase()
                    };
                    html += _template.bind("relatedSearchNew", bindData);
                }
            }

            if(html !== ''){
                $relatedSearch.find('ul.related-searches__items').html(html);

                $('div#resultTail').append($relatedSearch);

                $("div#relatedSearch").find('ul.related-searches__items a').click(function(event){
                    event.preventDefault();
                    var q = $(this).data('keywordTarget');
                    sga.ui.triggerEvent("keyword-selected", q);
                });
            }
        }
    }

    function _init() {
        sga.ui.registerEventListener("keyword-search", "related-search", function(resData) {
            $("div#relatedSearch").remove();
            _activeTabId = 'all';

            relatedKeywords = [];
            searchKeyword = resData.common.originSearchValue;

            if(resData.common.relatedKeywords){
                for(var i=0; i < resData.common.relatedKeywords.length; i++){
                    var relatedKeyword = resData.common.relatedKeywords[i];

                    if(searchKeyword !== relatedKeyword){
                        relatedKeywords.push(relatedKeyword);
                    }
                }
            }
            _drawRelatedSearch();
        });

        sga.ui.registerEventListener("tab-selected", "related-search", function(activeTab) {
            _activeTabId = activeTab;
        });

        sga.ui.registerEventListener("page-selected", "related-search", function(activePage) {
            $("div#relatedSearch").remove();

            if(activePage === 1 && _activeTabId === 'all'){
            	_drawRelatedSearch();
            }
        });
    }
    
    $(function() {
        _init();
    });
    
})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient);
(() => {
  let queryInputElements = {};

  function getElements() {
    queryInputElements = {
      queryInputForm: document.querySelector('.query-input__form'),
      queryInputContainer: document.querySelector('.query-input__form-input-container'),
      queryInput: document.querySelector('.query-input__form-input'),
      queryInputPlaceholder: document.querySelector('.query-input__placeholder'),
      deleteButton: document.querySelector('.query-input__form-input-delete'),
      submitButton: document.querySelector('.query-input__form-submit'),
    };
  }
  function init() {
    getElements();

    if(!queryInputElements.queryInputForm){
      return;
    }

    bindEvents();
  }

  function replaceExceptionCharacter(queryText) {
    // eslint-disable-next-line no-useless-escape
    const regExp = /[\{\}\[\]/?,;:|\)*~`!^_<>@\#$%&\\\=\(\'\"]/gi;
    return queryText.replace(regExp, '');
  }

  function bindEvents() {
    queryInputElements.queryInputForm.addEventListener('submit', () => {
      queryInputElements.queryInput.focus();
    });

    queryInputElements.queryInputContainer.addEventListener('input', () => {
      if(queryInputElements.queryInput.value.length !== 0){
        queryInputElements.queryInputPlaceholder.classList.add('query-input__placeholder--hide');
        queryInputElements.deleteButton.classList.add('query-input__form-input-delete--show');
      } else {
        queryInputElements.queryInputPlaceholder.classList.remove('query-input__placeholder--hide');
        queryInputElements.deleteButton.classList.remove('query-input__form-input-delete--show');
      }
    });

    queryInputElements.queryInputPlaceholder.addEventListener('click', () => {
      queryInputElements.queryInput.focus();
    });

    queryInputElements.deleteButton.addEventListener('click', () => {
      queryInputElements.queryInput.value = '';
      queryInputElements.queryInputPlaceholder.classList.remove('query-input__placeholder--hide');
      queryInputElements.deleteButton.classList.remove('query-input__form-input-delete--show');
      queryInputElements.queryInput.focus();
    });

    queryInputElements.submitButton.addEventListener('click', () => {
      queryInputElements.queryInput.focus();
      queryInputElements.queryInputForm.submit();
    });
  }

  if(document.readyState === 'loading') {
    window.addEventListener('DOMContentLoaded', () => init());
  } else {
    init();
  }
})();

(function(win, $, doc, sga, search, api) {
	var pageTrack = digitalData.page.pageInfo.pageTrack.toLowerCase();
    var SEARCHPARM = 'searchvalue';
    
    var _$COMP = $("section#QueryInput");

    var _$ui = {
        inputWrap : _$COMP.find('.query-input__placeholder'),
        inputForm : _$COMP.find("form.query-input__form"),
        inputBox : _$COMP.find("input#js-input-search"),
        didYouMean : _$COMP.find("div.query-input__find-keyword "),
        relatedSearchPanel : _$COMP.find("div.query-input__keyword-chip-list-wrap")
    };

    var relatedSearchHTML = _$ui.relatedSearchPanel.html();
    var loadingbarFlag = $("#loadingbarFlag").val();
    var defaultSortby = $("#defaultSortby").val();
    var placeholder = $('#sc_queryInput_placeholder').val();
    var SUPPORT_SORT_LIST = ["relevance", "date_desc", "date_asc", "text_asc", "text_desc"];
    var _template = search.template; //sga.template.compile($('div.sga-templates'));

    var q = '';
    var _lastSearchKeyword = null;
    var _activeTabId = null;
    var regExp = /[\{\}\[\]?,;:|\)*~`!^_<>@\#$%&\\\=\(\'\"]/gi;
    var regExpCN = /[\{\}\[\]?,;:|\)*~`!^_<>@\#$%&\\\=\(\"]/gi;
    var isFirstSearch = true;

    //22.05.17 EPP 분기처리 defaultActivie 추가 ( 'all' text 변수로 변경 )
    let defaultActive = ('N' === $('#eppFlag').val())? 'all' : 'product';
    
    var isNotNull = function(_str){
		
		return !fnIsNull(_str) && _str != "null";
				
	};
	
    function _drawDidYouMean(didYouMean){
        _$ui.didYouMean.empty();

        if(didYouMean){
            // TODO : keyword 인코딩
            didYouMean = stripTags(didYouMean);
            didYouMean = _template.bind("didyoumean", {keyword : didYouMean});

            _$ui.didYouMean.html(didYouMean);
            _$ui.didYouMean.find('a').click(function(event){
                event.preventDefault();
                var value = $(this).text();
                _$ui.inputBox.val(value);
                q=value;
                _activeTabId = defaultActive;
                _searchForKeyword();
            });
        }
    }

    function _drawRelatedSearch(relatedKeywords){
        var html = '';

        _$ui.relatedSearchPanel.empty();

        if(relatedKeywords && relatedKeywords.length > 0){
            for(var i=0; i < relatedKeywords.length; i++){
                if(q !== $.trim(relatedKeywords[i])){
                    // TODO : keyword 인코딩
                    html += _template.bind("relatedSearch", {
                        index : i,
                        keywordTarget : relatedKeywords[i].split('"').join('&quot;').split('<b>').join('').split('</b>').join(''),
                        keyword : relatedKeywords[i],
                        anTr : 'search result:common-'+pageTrack+'-text-related',
                        anCa : 'search',
                        anAc : 'search result click',
                        anLa : 'related searches:'+relatedKeywords[i].split('"').join('&quot;').split('<b>').join('').split('</b>').join('').toLowerCase()+':keyword:'+q.toLowerCase()
                    });
                }
            }

            if(html!=''){
                var $relatedSearch =  $( '<div> '+relatedSearchHTML+'</div>');
                $relatedSearch.find('div.query-input__keyword-chip-list').empty();
                $relatedSearch.find('div.query-input__keyword-chip-list').append(html);
                
                _$ui.relatedSearchPanel.empty();
                _$ui.relatedSearchPanel.append($relatedSearch.html());

                _$ui.relatedSearchPanel.find('div.query-input__keyword-chip-list a').click(function(event){
                    event.preventDefault();
                    var value = $(this).data("keyword-target");
                    value = exceptionCharacterBlank(value);
                    q = value;

                    _activeTabId = defaultActive;
                    _$ui.inputBox.val(value);
                    _searchForKeyword();
                });
            }else{
                _$ui.relatedSearchPanel.empty();
            }
        }
    }

    function exceptionCharacterBlank(target) {
        var result = target.replace(regExp, " ");

        return result;
    }
    
    function _saveCookies(keyword){
        var date = new Date();
        date.setTime(date.getTime()+1000*60*60*24*84);
        $.cookies.setSearchKeyword(decodeURIComponent(keyword), date);

        var satellite = window._satellite;
        if(satellite && satellite.setVar && satellite.track){
        	satellite.setVar('keyword', keyword);
        	satellite.track('search_result');
        }
        if(typeof dataLayer != "undefined" && typeof dataLayer == "object"){
	        dataLayer.push({
	               'event':'search_result',
	               'eventNonInteraction': true
	        });
        }
    }

    var getChangeUrl = function(searchvalue){
		var urlChangePath = window.location.pathname;
		
		if(searchvalue !== ""){
			urlChangePath +=  "?"+ SEARCHPARM + "=" + searchvalue;
		}
		return urlChangePath;
	};
	
    var checkSearchValueChanged = function(q){
    	if(getParameterByName(SEARCHPARM) !== q){
    		return true;
    	}
    	return false;
    };

    function _searchForKeyword() {

        if(!q || q === ''){
            q = placeholder;
            _$ui.inputBox.val(q);
        }

        if (q && q.length > 0 && q !== _lastSearchKeyword) {
            if(loadingbarFlag === "true"){
                $('.cm-loader').removeClass('cm-loader-type2');
                $('.cm-loader').addClass('cm-loader-type1');
                $('.cm-loader').show();
            }

            //$('div#no-result-container').remove();
            $('div#no-result-container').hide();

            q = stripTags(q);
            //q = q.split('<').join('').split('>').join('').split('&lt').join('').split('&gt').join('');
            if(checkSearchValueChanged(q)){
            	if(typeof(history.pushState) == "function"){
            		history.pushState( null , null , getChangeUrl(q) );
            	}else{
            		location.href = getChangeUrl(q);
            	}
            }

            //[24.04.12][EPP] 검색시 default tab은 product로 고정
            if($('#eppFlag').val() === "Y"){
            	_activeTabId = defaultActive;
            }
            
            api.initParm();
            api.initTargetParm();
            api.setSearchKeyword(q);
            api.setTargetParm(_activeTabId);

            //api.setParm('searchValue', q);
            //api.setParm('categoryTab', _activeTabId);
            api.setParm('firstSearchYN', 'Y');
			if(_activeTabId !== 'all' && isNotNull(defaultSortby)){
				if(_activeTabId !== 'support' || (_activeTabId === 'support' && $.inArray(defaultSortby, SUPPORT_SORT_LIST) >= 0)){
					api.setParm('sort', defaultSortby);
				}
			}
            sga.ui.triggerEvent("reset-search");
			_$ui.inputWrap.addClass('query-input__placeholder--hide');

            api.searchForCategory(SITE_CD, api.getParm(), {
                success : function(resData) {
                	searchForCategorySuccess(resData);
                },
                error : function(res) {
                    $('.cm-loader').hide();
                    _$ui.didYouMean.empty();
                    _$ui.relatedSearchPanel.empty();
                    sga.ui.triggerEvent("no-result");
                    _lastSearchKeyword = q;
                    _saveCookies(q);
                    sga.console.error("Can't fetch the V2 for site '" + siteCd + "'; response=" + res.statusCode + "; message=" + res.statusMessage);
                }
            });
        }
    }

    function searchForCategorySuccess(resData) {
    	_$ui.didYouMean.empty();
        _$ui.relatedSearchPanel.empty();
		var isSearch = false;

        if(resData){
            if(resData.common){
                if(resData.common.redirectURL && resData.common.redirectURL !== ''){
                    window.location.href = resData.common.redirectURL;
                    return;
                }

                if(resData.common.didYouMean){
                	_drawDidYouMean(resData.common.didYouMean);	
                }
                if(resData.common.relatedKeywords){
                	_drawRelatedSearch(resData.common.relatedKeywords);	
                }
            }

            //shopfaq이 #으로 올경우 support로 대체
            if(_activeTabId==='shopfaq'){
                _activeTabId = 'support';
            }
            if(resData.resultList && resData.resultList[0].resultCount > 0){
				// all로 검색 된 첫번째 데이터가 Products, Support, Accessories 인 경우 해당 항목으로 재검색
                var contentSource = resData.resultList[0].contentList[0].contentSource;
                if(resData.resultList[0].resultType == 'all' 
                    && (contentSource === 'Products' || contentSource === 'Support' || contentSource === 'SupportProducts' || contentSource === 'Accessories' || contentSource === 'BizProducts')){
					if(contentSource === 'Products' || contentSource === 'BizProducts'){
						_activeTabId = "product";
					}else if(contentSource === 'Support' || contentSource === 'SupportProducts'){
						_activeTabId = "support";
					}else if(contentSource === 'Accessories'){
						_activeTabId = "accessory";
					}
					
					setTimeout(_searchForKeyword, 50);
					isSearch = true;
				}else{
	                /**
	                * TabInfo가 Support만 있을 경우 
	                * All Tab 출력 안하고 Support Tab active
	                */
	                var tabInfo = resData.common.tabInfoList;
	                if(tabInfo.length === 1 ){
	                	if (tabInfo[0].tabParam === 'support'){
	                		_activeTabId = 'support';
	                	}
	                	//EPP : support결과가 없고 product 탭 1개만 생성된 경우
	                	if (tabInfo[0].tabParam === 'product'){
	                		_activeTabId = 'product';
	                	}
	                }
	                resData._activeTabId = _activeTabId;
	                sga.ui.triggerEvent("keyword-search", resData);
	                _lastSearchKeyword = q;
	                _saveCookies(q);
                }
            }else{
                /**
                * 해시태그(#)로 Tab 정보를 입력 받았는데 결과값이 없을 경우 
                * All Tab Active 처리하고 api 검색(타이밍 때문에 setTimeout 걸음)
                */
                //shopfaq이 #으로 올경우 support로 대체
                //초기 검색시  shopfaq로 온 항목이 검색결과가 없을 경우 무한대로 api호출하는 이슈가 발생
                //isFirstSerach를 변수로 전역변수로 설정하여 첫번째 항목이후 두번째 search때 support탭이 선택되도록 함.
                //그래도 결과값이 없는경우에는 activeTab을 all로 호출되게 하여 no-result를 타게 끔 설정
                var currentTab = window.location.hash.toString();
                currentTab = currentTab.replace("#","");
                if(currentTab==='shopfaq'){
                    if(isFirstSearch){
                        isFirstSearch = false;
                        _activeTabId='support';
                    }else{
                        _activeTabId = defaultActive;
                    }
                }else{
                    _activeTabId = defaultActive;
                }
                if(_activeTabId !== defaultActive){
                    setTimeout(_searchForKeyword, 50);
                }else{
                    sga.ui.triggerEvent("no-result");
                    _lastSearchKeyword = q;
                    _saveCookies(q);
                }
            }
        }else{
            if(_activeTabId !== defaultActive){
                _activeTabId = defaultActive;
                setTimeout(_searchForKeyword, 50);
            }else{
                sga.ui.triggerEvent("no-result");
                _lastSearchKeyword = q;
                _saveCookies(q);
            }
        }
        if(!isSearch){
        	$('.cm-loader').hide();
        }
		if (SITE_CD === "ca" || SITE_CD === "ca_fr"){
			PriceSpider.rebind();
		}
    }
    
    function stripTags(s) {
        s = s.split('<').join('').split('>').join('').split('&lt').join('').split('&gt').join('');

        return s;
    }

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(decodeURIComponent(results[1].replace(/\+/g, " ")));
    }

    function exceptionCharacter(target) {
        var result = target.replace(regExp, "");

        return result;
    }

    function characterCheck(e) {
        var input = _$ui.inputBox,
            temp = input.val(),
            length = 0;

        var _regExp = SITE_CD === 'cn' ? regExpCN : regExp;

        if (regExp.test(temp)) {
            input.val(temp.replace(_regExp,""));
        }
        length = input.val().length;
        if (length) {
            _$ui.inputWrap.addClass('query-input__placeholder--hide');
        } else {
            _$ui.inputWrap.removeClass('query-input__placeholder--hide');
        }
    }

    function _init() {
        q = getParameterByName(SEARCHPARM);
        _activeTabId = window.location.hash.substring(1) || defaultActive;
        
        //22.05.20 [EPP] 분기 추가 : hash값 중 epp허용 탭에 없는 탭은 화면 오류가 발생함에 따라 추가한 방어로직
        if ( 'Y' === $('#eppFlag').val() ){
        	const eppTabs = ['product', 'support'];
        	const ableTab = eppTabs.filter(tab => tab === _activeTabId);
        	if ( ableTab.length === 0 ) {
        		_activeTabId = defaultActive;
        	}
        }
        
        _$ui.didYouMean.empty();
        _$ui.relatedSearchPanel.empty();
        
        if(q === "" && $("#defaultSearchYn").val() === "true"){
        	q = "galaxy";
        }
        if(q !== ''){
            _$ui.inputBox.val(q);
            _$ui.inputWrap.addClass('query-input__placeholder--hide');
            _searchForKeyword();
        }else{
            $('#result-list-container .tab-panel').empty();
            $('#result-list-container ul.srp-tab-bar__list').empty();
            _$ui.inputWrap.removeClass('query-input__placeholder--hide');
        }
        
        _$ui.inputForm.on("submit", function(event) {
            event.preventDefault();

            q = exceptionCharacter($.trim(_$ui.inputBox.val()));
            _$ui.inputWrap.addClass('query-input__placeholder--hide');

            var currentTab = window.location.hash.toString();
            currentTab = currentTab.replace("#","");
            if(currentTab==='shopfaq'){
                currentTab='support';
            }
            
            if((currentTab === 'support') && (_activeTabId !== currentTab)){
            	_activeTabId = currentTab;
            }
            if(_activeTabId !== 'support'){
            	_activeTabId = defaultActive;
            }
            win.gmap = null;
            _searchForKeyword();
        });

        _$ui.inputBox.on("keyup", characterCheck);

        sga.ui.registerEventListener("tab-selected", "query-input", function(tabId) {
            _activeTabId = tabId;
        });

        sga.ui.registerEventListener("keyword-selected", "query-input", function(keyword) {
            q = $.trim(keyword);
            _$ui.inputBox.val(q);

            _activeTabId = defaultActive;
            _searchForKeyword();
        });
    }

    $(function() {
        _init();
    });

})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient);
(function(win, $, doc, sga, search, api, template) {

	var _$COMP = $(".filter-selection");

	var filters = {};
	var _parm = {};

	var loadHtml = {};
	var _metadata = {};

	var _filterSet = null;
	var filterSet = {};

	var _activeTabId = null;
	
	var pageTrackFilter = $('#pageTrackFilter').val();
	
	var domKey = sga.domKey;
	var loadingbarFlag = $("#loadingbarFlag").val();

	$("div.sga-metadata.sga-component-scope").find("div[data-key]").each(function() {
		var $this = $(this), key = $.trim($this.attr("data-key") || "");
		_metadata[key] = $.trim($this.text());
	});
	if(_metadata.filterSet) {
		_filterSet = $.parseJSON(_metadata.filterSet);
	}

	var _template = search.template; //sga.template.compile($('div.sga-templates'));
	
	var isNotNull = function(_str){
		
		return !fnIsNull(_str) && _str != "null";
				
	};
	
	function Filter(id, resData){
		this.id = id;
		this.domID = domKey[id];

		this.maxDeep = 0;

		this.filterList = resData.countFilterList;
		this.countSupportProductFilterList = resData.countSupportProductFilterList;
		this.data = this.setData(filterSet[id.toLowerCase()].filterList);
		this.loadHTML = $(loadHtml[this.domID.toLowerCase()]);
		this.html = this.setHTML(this.data);
	}

	Filter.prototype = {
		setData : function(data){
			var deep = 1;
			var totalCount = 0;
			var childCount = 0;

			if(Array.isArray(data) && data.length > 0){
				for(var index in data){
					data[index] = this.setData(data[index]);
				}
			}else{
				if(data.filterList && data.filterList.length > 0){
					for(var i = 0; i < data.filterList.length; i++){
						var child = this.setData(data.filterList[i]);
						child.parent = data.regName;
						if(child.parent === 'price'){// PriceRange 예외처리
							child.totalCount = 1;
						}
						totalCount += parseInt(child.totalCount);

						if(child.totalCount > 0) childCount++;
						if(deep <= child.deep)
							deep = child.deep + 1;
					}
				}

				var code = data.code;
				var searchFilterList = this.filterList;
				var displayNM = data.localName;
				if(data.filterType && data.filterType === 'product'){
					searchFilterList = this.countSupportProductFilterList;
				}else if(data.filterType && data.filterType !== 'product'){
					//displayNM = data.filterType + ':' + data.localName;
				}
				var countMap = $.grep(searchFilterList, function(countInfo, index){
					return countInfo.code === code;
				});
				data.count = '0';
				data.count = countMap.length > 0 ? countMap[0].count : '0';
				data.displayNM = displayNM;
				data.childCount = childCount;
				data.totalCount = parseInt(totalCount) + parseInt(data.count);
			}

			if(this.maxDeep < deep)
				this.maxDeep = deep;

			return data;
		},
		setDomText : function( itemClass = '' ){
			var dom = 
					'<div>'+
						'<div class="filter-selection__list">'+
							'<div class="filter-selection__item ' + itemClass + '"></div>'+
						'</div>'+
					'</div>';
			return dom;
		},
		setHTML : function(data){

			var html = '';
			var dom = this.setDomText();
			var drawCount = 0;
			var depth = 0;
			var depth1Count = 0;

			var _1depHTML = '';

			for(var i in data){
				var _filterItem = data[i];
				var _deep = _filterItem.deep;
				var _depth = depth = _filterItem.depth;
				var _totalCount = _filterItem.totalCount;
				var bindData = {};

				var _thisHTML = '';

				if(_depth === 1){
					var divClass = '';
					var inputClass = 'checkbox-v2__input';

					var countText = '';
					var code = _filterItem.code;

					var bindType = 'filterTitleSelection';

					if(!_filterItem.filterList || _filterItem.filterList.length <= 0 || _totalCount === 0){
						continue;
						// if(this.maxDeep !== 1){
						// 	dom = this.setDomText('filter-selection__item--bold');
						// }
						// 
						// divClass = ' checkbox-v2';
						// bindType = 'filterItemSelection';
						// if( _totalCount !== 0){  
						// 	countText = '<span class="filter-item-title__count filter-clear-not">('+_filterItem.count+')</span>';
						// }
					} else {
						dom = this.setDomText('');
					}

					if(this.maxDeep === 1){
						countText = _filterItem.count === 0 ? '' : '<span class="filter-item-title__count filter-clear-not">('+_filterItem.count+')</span>';
					}
					bindData = {
						index : _deep + '-' + i,
						divClass : divClass,
						inputClass : inputClass,
						filtersearchcode : _filterItem.code,
						displayNM : _filterItem.displayNM,
						name : _filterItem.localName,
						code : code,
						count : _filterItem.count,
						countText : countText,
						anTr : 'search result:common-'+pageTrackFilter+'-option-filter',
						anCa : 'search',
						anAc : 'search result function',
						anLa : 'filter:' + _filterItem.regName.toLowerCase()
					};

					_thisHTML = _template.bind(bindType, bindData);


					if(_deep > 1 && _totalCount > 0){
						depth1Count++;
						_thisHTML +=  '<fieldset class="filter-selection__1-depth-accordion">' +
										'<legend id="filter-legend-'+depth1Count+'" class="hidden">'+_filterItem.localName+'</legend>' +
										this.setHTML(_filterItem.filterList)+ '</fieldset>';
					}

					if(this.maxDeep === 1){
						var _domTemp = $('<div></div>');
							_domTemp.append(_thisHTML);
						if( _totalCount === 0 ){
							_domTemp.find('input.checkbox-v2__input').attr('disabled','disabled');
						}

						if(data.length-1 === Number(i)){
							_thisHTML = _1depHTML
							html += _thisHTML;
						}

					}else{
						var _domTemp_an = $(dom);
						_domTemp_an.find('.filter-selection__item').append(_thisHTML);

						if( _totalCount === 0 ){
							_domTemp_an.find('input.checkbox-v2__input').attr('disabled','disabled');
						}
						_thisHTML = $(_domTemp_an).html();
						drawCount++;
						html += _thisHTML;
					}


				}else if(_depth > 1){

					if(_totalCount !== 0 || _filterItem.parent === 'price'){
						var divClassWarpper = ' filter-checkbox';
						var inputClassWapper = 'checkbox-v2__input';
						var templateId = 'filterItemSelection';
						var idPerfix = '';
						
						if(_filterItem.parent === 'price'){
							divClassWarpper = ' filter-radio';
							inputClassWapper = 'radio-v2__input';
							templateId = 'filterItemSelectionRadio';
							idPerfix = this.domID;
						}

						var countTextinner = '';
						var tempText ='';

						if(_deep === 1){
							countTextinner = _filterItem.count === 0 ? '' : '('+_filterItem.count+')';
						}

						bindData = {
							index : _deep + '-' + i + idPerfix,
							divClass : divClassWarpper,
							inputClass : inputClassWapper,
							count : _filterItem.count,
							filtersearchcode : _filterItem.code,
							diabled : _filterItem.totalCount === 0 ? 'disabled' : '',
							displayNM : _filterItem.displayNM,
							name : _filterItem.localName,
							countText : countTextinner,
							anTr : 'search result:common-'+pageTrackFilter+'-option-filter',
							anCa : 'search',
							anAc : 'search result function',
							anLa : 'filter:'+_filterItem.parent.toLowerCase()+':'+ _filterItem.regName.toLowerCase()
						};

						_thisHTML = _template.bind(templateId, bindData);

						if(_filterItem.parent === 'price' && (!(data[Number(i)+1]) || data[Number(i)+1].depth === 1)){
							_thisHTML += `
							<div class="filter-item-form">
								<div class="text-field-v2 no-title" data-comp-name="textFieldv2">
									<label class="text-field-v2__hint" for="text-field--1"></label>
									<div class="text-field-v2__input-wrap">
										<input class="text-field-v2__input js-price-input" id="text-field--1" type="text" value="" maxlength="12" autocomplete="val" aria-describedby="aria-desc-error-1">
									</div>
								</div>
								<div class="text-field-v2 no-title" data-comp-name="textFieldv2">
									<label class="text-field-v2__hint" for="text-field--2"></label>
									<div class="text-field-v2__input-wrap">
										<input class="text-field-v2__input js-price-input" id="text-field--2" type="text" value="" maxlength="12" autocomplete="val" aria-describedby="aria-desc-error-1">
									</div>
								</div>
								<div class="filter-item-form__cta">
									<a class="cta cta--outlined cta--black js-price-range" href="#" aria-label="{Text} {Link Title}">
										${Granite.I18n.get('search.comp.filterSelection.priceRange.apply')}
									</a>
								</div>
							</div>
							`;
						}
						if(_deep > 1){
							
							_thisHTML += '<div class="filter-selection__2-depth">';
							_thisHTML += '<a href="#!" class="filter-selection__toggle"><span class="hidden">'+ Granite.I18n.get('search.common.labels.expand')+'</span>';
							_thisHTML += '<svg class="icon close" focusable="false">';
							_thisHTML += '<use xlink:href="#open-down-regular" href="#open-down-regular"></use>';
							_thisHTML += '</svg>';
							_thisHTML += '<svg class="icon open" focusable="false">';
							_thisHTML += '<use xlink:href="#close-up-regular" href="#close-up-regular"></use>';
							_thisHTML += '</svg>';
							_thisHTML += '</a>';
							
							_thisHTML += '<div class="filter-selection__2-depth-accordion" data-1dep-title="'+ _filterItem.parent +'">' +this.setHTML(_filterItem.filterList) + '</div>';
							_thisHTML += '</div>';
							
						}
						drawCount++;
					}
					html += _thisHTML;
				}
			} // end for

			if( (depth !== 1 && drawCount > 5) || (this.maxDeep === 1 && drawCount > 5)) { //|| (this.maxDeep === 1 && drawCount > 5)
				html += '<div class="filter-item-more">';
				html += '	<a href="#!" class="filter-item-more__button" an-tr="search result:common-'+pageTrackFilter+'-text-button" an-ca="indication" an-ac="view more" an-la="view more" >';
				html += '		<span class="filter-item-more__text">'+Granite.I18n.get('search.common.labels.more')+'</span>';
				html += '	</a>';
				html += '</div>';
			}

			if(this.maxDeep === 1){
				var _domTempAnother = $(dom);
				_domTempAnother.find('.filter-selection__item').append(html);

				html = _domTempAnother.html();
			}

			return html;

		},
		draw : function(){
			$('#'+this.domID+'FilterSelection').find('.filter-selection__list').remove();
			$('#'+this.domID+'FilterSelection').find('.filter-selection__contents').append(this.html);

			window.sg.common.textFieldv2.initAll();
			this.bindEvent();
		},
		setCheckFilter : function(){
			var _this = this;
			var _domID = this.domID;
			this.searchCodeList = [];
			this.PDsearchCodeList = [];

			$('#'+_domID+'FilterSelection').find('input[type="checkbox"]:checked, input[type="radio"]:checked').each(function(index, item){
				var searchCode = $(item).data('filtersearchcode');

				if(_this.searchCodeList.indexOf(searchCode) <= -1) _this.searchCodeList.push(searchCode);
			});
		},
		parentChangeTotalValue : function( target ){
			var $target 		= $(target);
			var $parent 		= $target.closest('.filter-selection__item');
			var $titleCountTarget = $parent.find('.filter-item-title__count');
			var $deptOne		= $parent.find('.filter-selection__1-depth-accordion');
			
			if( $deptOne.length > 0 ){
				var $deptTwo			= $deptOne.find('.filter-selection__2-depth');
				var $deptOneChildren	= $deptOne.children(".filter-checkbox");
				var oneCount			= 0;
				if( $deptTwo.length > 0 ) {
					if( $target.attr('data-filter-count') === '0' ){
						var $nextTowdept =  $target.closest('.filter-checkbox').next();
						if(  $target.is(':checked') ){
							if( $nextTowdept.hasClass('filter-selection__2-depth') ){
								$nextTowdept.find('input[type="checkbox"]').each(function(){
									this.checked = true;
								})
							}
						} else {
							if( $nextTowdept.hasClass('filter-selection__2-depth') ){
								$nextTowdept.find('input[type="checkbox"]').each(function(){
									this.checked = false;
								})
							}
						}
						
					}
					$deptTwo.each(function( index ){
						var deptTwoTotal = 0;
						var $checked = $(this).find('input[type="checkbox"]:checked');
						$checked.each(function(){
							var number 		= Number($(this).attr("data-filter-count"));
							deptTwoTotal 	+= number;
						})
						if( deptTwoTotal < 1 ){
							$deptOneChildren.eq(index).find('.filter-selection__contents-count').text('');
						} else {
							$deptOneChildren.eq(index).find('.filter-selection__contents-count').text('('+deptTwoTotal+')');
						}
					});
					
					$deptOneChildren.each(function(){
						var $checked = $(this).find('.filter-selection__contents-count');
						var number 	= Number( $checked.text().replace('(','').replace(')','') );
						oneCount 	+= number;
					})
				} else {
					$deptOneChildren.each(function(){
						var $checked = $(this).find('input[type="checkbox"]:checked');
						$checked.each(function(){
							var number 	= Number($(this).attr("data-filter-count"));
							oneCount 	+= number;
						})
					})
				}
				
				if( oneCount < 1 ){
					$titleCountTarget.text('');
				} else {
					$titleCountTarget.text('('+oneCount+')');
				}
			}
		},
		parentChangeMobileValue : function( target ){
			var $target 		= $(target);
			var $parent 		= $target.closest('.filter-selection__contents');
			var $mobileTarget	= $target.closest('.filter-selection').find('.filter-select__result-count');
			var totalCount		= 0;
			
			$parent.find('.filter-item-title__count').each(function(){
				var $thisTartget 		= $(this);
				var count	= 0;
				if( $thisTartget.hasClass('filter-clear-not') ) {
					if( $thisTartget.closest('.filter-checkbox').find('input[type="checkbox"]').is(':checked') ){
						count	= $thisTartget.text().replace('(','').replace(')','');
					}
				} else {
					count	= $thisTartget.text().replace('(','').replace(')','');
				}
				totalCount += Number(count); 
			});
			
			
			if( totalCount < 1 ){
				$mobileTarget.text('');
			} else {
				$mobileTarget.text('('+totalCount+')');
			}
		},
		bindEvent : function(){
			var _this = this;
			var _domID = this.domID;
			
			var dataCheckidxArry = [];
			
			win.sg.components.filterSelection.reInit();
			
			$('#'+_domID+'FilterSelection').find('.checkbox-v2__input, .radio-v2__input').click(function(){
				
				if(loadingbarFlag === "true"){
					$('.cm-loader').removeClass('cm-loader-type1');
					$('.cm-loader').addClass('cm-loader-type2');
					$('.cm-loader').show();
					
					loadingbarFlag = "false";
				}
				dataCheckidxArry.push(this.getAttribute('data-check-idx'));
				
				_this.parentChangeTotalValue( this );
				_this.parentChangeMobileValue( this );
				
				_this.searchCodeList = [];

				setTimeout(function() {
					
					_this.setCheckFilter();
					_this.searchForfilter();	
					
				}, 300);
			});
			// 사용자 입력 창은 숫자만 12자리까지 입력 가능
			$('#'+_domID+'FilterSelection').find('input.js-price-input').keyup(function(){
				$(this).val($(this).val().replace(/[^0-9]/g,""));
			});
			$('#'+_domID+'FilterSelection').find('a.js-price-range').click(function(){
				var $target 		= $(this);
				var $parent 		= $target.closest('.filter-item-form');
				var $parentRadio 	= $parent.closest('.filter-selection__item');
				var inputText1 = $parent.find('#text-field--1');
				var inputText2 = $parent.find('#text-field--2');
				// 사용자가 두군데 모두 입력값 없이 go 버튼을 누를 경우 검색 불가
				if(fnIsNull(inputText1.val()) && fnIsNull(inputText2.val())){
					return;
				}
				// radio button 해제
				if($parentRadio.find('input.radio-v2__input:checked').length > 0){
					$parentRadio.find('input.radio-v2__input:checked')[0].checked = false;
				}
				window.sg.components.filterSelection.removeFilterSelectItem('price', true);
				
				// min, max 중 한쪽만 입력한 경우 정상적으로 api 호출
				if(loadingbarFlag === "true"){
					$('.cm-loader').removeClass('cm-loader-type1');
					$('.cm-loader').addClass('cm-loader-type2');
					$('.cm-loader').show();

					loadingbarFlag = "false";
				}
				//dataCheckidxArry.push(this.getAttribute('data-check-idx'));

				//_this.parentChangeTotalValue( this );
				//_this.parentChangeMobileValue( this );

				_this.searchCodeList = [];

				setTimeout(function() {

					_this.setCheckFilter();
					_this.searchForfilter(true);

				}, 300);

			});
			// filter-select__remove 처리 마크업 충돌 문제 우회 해결
			$('#'+_domID+'FilterSelection').find('.filter-select__list').click(function(){
				
				//dataCheckidxArry
				var currentDataCheckidxArry = [];
				$(this).find('a').each(function(index, ele){
					currentDataCheckidxArry.push(ele.getAttribute('data-check-idx'));
				});
				var removeIndexArry = dataCheckidxArry.filter(function(b){ 
					return currentDataCheckidxArry.indexOf(b) === -1; 
				});
				
				if(removeIndexArry.length > 0){
					dataCheckidxArry = currentDataCheckidxArry;
					
					if(loadingbarFlag === "true"){
						$('.cm-loader').removeClass('cm-loader-type1');
						$('.cm-loader').addClass('cm-loader-type2');
						$('.cm-loader').show();
						
						loadingbarFlag = "false";
					}
					
					var $target = $('#'+_domID+'FilterSelection').find('.filter-selection__list input[type="checkbox"]').eq(removeIndexArry[0]);
					
					_this.parentChangeTotalValue( $target );
					_this.parentChangeMobileValue( $target );
					
					_this.searchCodeList = [];
	
					setTimeout(function() {
					
						_this.setCheckFilter();
						_this.searchForfilter();	
					
					}, 300);
                }
			});

			$('#'+_domID+'FilterSelection').find('a.filter-select__clear').click(function(){
				_this.searchCodeList = [];
				_this.searchForfilter();
				
				var $target 		= $(this);
				var $parent 		= $target.closest('.filter-selection');
				var totalCount		= 0;
				var $titleCountTarget = $parent.find('.filter-item-title__count').not('.filter-clear-not');
				var $mobileTarget	  = $parent.find('.filter-select__result-count');
				var $totalCheck		= $parent.find('.filter-checkbox');
				$totalCheck.each(function(){
					if( $(this).next().hasClass('filter-selection__2-depth') ){
						$(this).find('.filter-selection__contents-count').text('');
					}
				});
				
				$titleCountTarget.text('');
				$mobileTarget.text('(0)');
				
			});
		},
		searchForfilter : function(isGoButton){
			var _domID = this.domID;
			
			if(loadingbarFlag === "true"){
				$('.cm-loader').removeClass('cm-loader-type1');
				$('.cm-loader').addClass('cm-loader-type2');
				$('.cm-loader').show();
			}

			api.setParm('start', '0');
			api.setParm('filterCd', this.searchCodeList.join('+'));
			//test str TODO
			if(isGoButton){
				api.setParm('priceMin', $('#'+_domID+'FilterSelection').find('#text-field--1').val());
				api.setParm('priceMax', $('#'+_domID+'FilterSelection').find('#text-field--2').val());
			}else{
				api.deleteParm('priceMin');
				api.deleteParm('priceMax');
			}

			api.searchForCategory(SITE_CD, api.getParm(), {
				success : function(resData) {
					sga.ui.triggerEvent("panel-refresh", resData);
					$('.cm-loader').hide();
				},
				error : function(res) {
					$('.cm-loader').hide();
					sga.console.error("Can't fetch the V2 for site '" + SITE_CD + "'; response=" + res.statusCode + "; message="	+ res.statusMessage);
				}
			});
			
			loadingbarFlag = $("#loadingbarFlag").val();
		}
	}

	function setData(data, depth){
		var deep = 1;

		if(Array.isArray(data) && data.length > 0){
			for(var index = 0; index < data.length; index++){
				data[index] = setData(data[index] , depth);
			}
		}else{
			if(data.filterList && data.filterList.length > 0){
				for(var inerIndex = 0; inerIndex < data.filterList.length; inerIndex++){
					data.filterList[inerIndex] = setData(data.filterList[inerIndex], depth+1);

					if(deep <= data.filterList[inerIndex].deep)
						deep = data.filterList[inerIndex].deep +1;
				}
			}
			data.count = '0'
			data.depth = depth;
			data.deep = deep;
		}
		return data;
	}

	function _findApiKey(_activeTabId){
		for(var index in domKey){
			if(_activeTabId === domKey[index])
				return index;
		}
		return _activeTabId;
	}
	function addMultilineClass(){
		const multiLineSiteList = ['ca_fr', 'mm', 'hu', 'fr', 'gr', 'bg', 'ch_fr', 'be', 'be_fr', 'nl', 'mk', 'ua', 'n_africa', 'africa_fr'];
		const siteCode = $("#siteCode").val();
		
		if( multiLineSiteList.indexOf( siteCode ) > -1 ){
			const $target = $('.filter-selection');
			if( !$target.hasClass('filter-select--multiline-cta') ){
				$target.addClass('filter-select--multiline-cta');
			}
		}
		
	}
	function _init() {
		
		addMultilineClass();
		
		for(var i=0; i< _$COMP.length; i++){
			var loadItem = _$COMP[i];
			var loadID = $(loadItem).attr('id').split('FilterSelection')[0];
			loadHtml[loadID.toLowerCase()] = $(loadItem).html();
		}

		if(_filterSet){
			var categories = _filterSet.response.resultData.categoryFilterList;

			for(var index=0; index < categories.length; index++){

				if(categories[index]){
					var _category = categories[index]['tabParam'].toLowerCase();

					filterSet[_category] = categories[index];
					
					if(categories[index].filterList){
						if(_category === 'support'){

							var supportFilter = {};
							
							var supportSolutionList = {
								code: 'solution',
								depth: '0',
								filterList: [],
								localName:  $('#i18n_filter_solutions').val(),
								regName: 'Solution'
							};
							
							
							for(var categoriesIndex=0; categoriesIndex < categories[index].filterList.length; categoriesIndex++){
								var code = categories[index].filterList[categoriesIndex].code;
								var supportFilterItem = categories[index].filterList[categoriesIndex];
								
								if(code === 'category'){
									supportFilterItem.code = 'product';
									supportFilterItem.localName = $('#i18n_filter_product').val(); 
									supportFilterItem.regName = 'product';
									
									var itemsSupport = supportFilterItem.filterList;
									for (var xInner = 0, lenInner = itemsSupport.length; xInner < lenInner; xInner++) {
										itemsSupport[xInner].filterType = $('#i18n_filter_solutions').val();
									}
									
									supportFilterItem.filterList = itemsSupport;
									supportFilter['product'] = supportFilterItem;
									
								}else if(code === 'type'){
									
									for(var j in supportFilterItem.filterList){
										
										if(supportFilterItem.filterList[j].code === 'S30000000')
											supportFilter['interactiveGuide'] = supportFilterItem.filterList[j];
										
										if(supportFilterItem.filterList[j].code === 'S90000000')
											supportFilter['others'] = supportFilterItem.filterList[j];
										
										if(supportFilterItem.filterList[j].code === 'S70000000')
                                            supportFilter['ShopFAQ'] = supportFilterItem.filterList[j];
											
									}
									supportFilter[code] = supportFilterItem;
								}else{
									if(code === 'newsType') supportFilterItem.localName = $('#i18n_filter_aboutUsNews').val();
									if(code === 'prdCategory'){
										code = 'products';
										supportFilterItem.code = 'products';
										supportFilterItem.localName = $('#i18n_filter_product').val();
										supportFilterItem.regName = 'products';
										supportFilterItem.filterType = 'product'
										
										var items = supportFilterItem.filterList;
										for (var x = 0, len = items.length; x < len; x++) {
											items[x].filterType = 'product';//$('#i18n_filter_product').val();
										}
										supportFilterItem.filterList = items;
									}
									
									supportFilter[code] = supportFilterItem;
								}
							}
							
							if(supportFilter['product']) supportSolutionList.filterList.push(supportFilter['product']);
							if(supportFilter['topic']) supportSolutionList.filterList.push(supportFilter['topic']);
							if(supportFilter['contentType']) supportSolutionList.filterList.push(supportFilter['contentType']);
							
							filterSet[_category].filterList = [];
							
							if(supportFilter['products']) filterSet[_category].filterList.push(supportFilter['products']);
							if(supportSolutionList) filterSet[_category].filterList.push(supportSolutionList);
							if(supportFilter['newsType']) filterSet[_category].filterList.push(supportFilter['newsType']);
							
							if(supportFilter['interactiveGuide']) filterSet[_category].filterList.push(supportFilter['interactiveGuide']);
							if(supportFilter['others']) filterSet[_category].filterList.push(supportFilter['others']);
                            if(supportFilter['ShopFAQ']) filterSet[_category].filterList.push(supportFilter['ShopFAQ']);
						}
						filterSet[_category].filterList = setData(filterSet[_category].filterList, 1);
					}else{
						// Filter List 없을 경우
						var domkey = domKey[_category];
						delete loadHtml[_category];

						if(template && template.loadHtml && template.loadHtml.panel){
							var panels =  $("<div />").append(template.loadHtml.panel);
							panels.find('div#'+domkey+' .sc-g-result-side').remove();
							template.loadHtml.panel = panels.html();
						}

					}
				}
			}

			search.filterSet = filterSet;
			search._filterSet = _filterSet;
			search.filters = filters;
			search.loadFilterHtml = loadHtml;
		}

		sga.ui.registerEventListener("init-panel", "filter-selection", function(resData) {

			_activeTabId = resData._activeTabId || 'all';

			search.currentFilterData = resData;

			var categoryFilterList = resData.countFilterList;

			if( categoryFilterList &&  resData.resultList ){
				var _activeCate = _findApiKey(_activeTabId);

				if(loadHtml[_activeTabId.toLowerCase()]){
					if(filterSet[_activeCate.toLowerCase()]) {
						filters[_activeCate] = new Filter(_activeCate, resData);
						filters[_activeCate].draw();
					} else {
						$("#" + _activeCate.toLowerCase() + " div.result__side").hide();
					}
					window.sg.common.icon.update();	
				}
			}
			
			addMultilineClass();
		});
	}

	$(function() {
		_init();
	});

})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient, window.smg.sga.search.template);
(() => {
  const $q = window.sg.common.$q;
  const BREAKPOINTS = window.sg.common.constants.BREAKPOINTS;
  const utils = window.sg.common.utils;

  const instanceEl = [];
  const instance = [];

  class FilterSelection{
    constructor( element ) {
      this.ele = {
        'component': $q(element),
        'wrap': null,
        'checks': null,
        'selectList': null,
        'listMoreBtn': null,
        'filterItemForm': null,
      };

      this.less = 'less';
      if (window.Granite) {
        this.less = window.Granite.I18n.get('search.common.labels.less');
      }

      this.more = 'more';
      if (window.Granite) {
        this.more = window.Granite.I18n.get('search.common.labels.more');
      }

      this.ele.checks = this.ele.component.find('.filter-selection__list input[type="checkbox"], .filter-selection__list input[type="radio"]');
      this.ele.selectList = this.ele.component.find('.filter-select__list');
      this.ele.listMoreBtn = this.ele.component.find('.filter-select__more');
      this.ele.filterItemForm = this.ele.component.find('.filter-item-form');
      this.isPCmode = BREAKPOINTS.MOBILE < utils.getViewPort().width;
      this.removeFilterSelectItemArray = [];

      this.handler = {
        onChangeChecksInput: (e) => {
          const formTarget = $q(e.currentTarget).closest('.filter-selection__list').find('.filter-item-form');
          const dataCategory = $q(e.currentTarget).attr('data-category');
          if (formTarget.target.length) {
            this.deleteFilterForm(formTarget);
          }
          this.set2depChange(e.currentTarget);
          if (dataCategory) {
            this.removeFilterSelectItemArray.forEach((v,i) => {
              if (v.category === dataCategory) {
                this.removeFilterSelectItemArray.splice(i,1);
              }
            });
          }
          this.setList();
        },
        onChangeInputClear: () => {
          this.ele.checks.target.forEach((ck) => {
            if(ck.checked === true) {
              ck.checked = false;
            }
          });
  
          this.deleteFilterForm(this.ele.filterItemForm);
          this.setList();
        },
        focusfilterInput: (e) => {
          const radios = $q(e.target).closest('.filter-selection__list').find('.radio-v2 input.radio-v2__input:checked');
          if(!radios.target.length) return;
          radios.target[0].checked = false;
          this.setList();
        },
        onClickFilterForm: (e) => {
          const parent = $q(e.target).closest('.filter-item-form');
          this.checkFilterFormValue(parent);
          this.setList();
          e.preventDefault();
        },
        onChangeFilterInput: (e) => {
          const parent = $q(e.target).closest('.filter-item-form');
          this.checkFilterFormValue(parent);
        },
      };

      FilterSelection.instances.set(element, this);
      this.init();
    }

    init() {
      //checkbox set unique data
      [...this.ele.checks.target, ...this.ele.filterItemForm.target].forEach((ck, i) => {
        ck.setAttribute('data-check-idx', i);
      });

      //checkbox disabled class add
      this.ele.checks.target.forEach((ck) => {
        if(ck.disabled === true) {
          $q(ck).closest('.filter-checkbox__label').addClass('filter-checkbox--disabled');
        }
      });

      this.bindEvents();
      //1depth close
      this.ele.component.find('.filter-selection__list').target.forEach((elem, idx) => {
        const dep1btn = $q(elem).find('.filter-item-title__anchor').target[0];
        this.dep1Toggle(dep1btn, idx >= 3);
      });
    }

    resize() {
      const nowPCmode = BREAKPOINTS.MOBILE < utils.getViewPort().width;
      if (nowPCmode !== this.isPCmode) { //change BREAKPOINTS once
        this.ele.component.find('.filter-item-more').target.forEach((more) => {
          const checksInMore = this.setAccordion(more);
          this.checkMoreOpenClose($q(more), checksInMore, false);
        });
        //1depth close
        if (nowPCmode === true) {
          this.ele.component.find('.filter-selection__list').target.forEach(( elem,idx ) => {
            const dep1btn = $q(elem).find('.filter-item-title__anchor').target[0];
            this.dep1Toggle(dep1btn,idx >= 3);
          });
        } else {
          this.ele.component.find('.filter-selection__list').target.forEach((elem, idx) => {
            const dep1btn = $q(elem).find('.filter-item-title__anchor').target[0];
            this.dep1Toggle(dep1btn,idx >= 1);
          });
        }
      }
      if (nowPCmode) { //when pc size everytime set
        this.listMoreOpenClose(false);
        this.mobileFilterClose(true);
      }
      this.isPCmode = nowPCmode;
    }

    bindEvents() {
      this.ele.filterItemForm.find('.text-field-v2__input').off('focus').on('focus', this.handler.focusfilterInput);

      this.ele.filterItemForm.find('.filter-item-form__cta > a').off('click').on('click', this.handler.onClickFilterForm);

      this.ele.filterItemForm.find('input[type="text"]').off('change').on('change', this.handler.onChangeFilterInput);

      this.ele.filterItemForm.find('.text-field-v2__input-icon.delete').off('click').on('click', this.handler.onChangeFilterInput);

      this.ele.listMoreBtn.on('click', () => {
        this.listMoreOpenClose();
      });

      this.ele.component.find('.filter-select__clear').off('click').on('click', this.handler.onChangeInputClear);

      this.ele.checks.off('change').on('change', this.handler.onChangeChecksInput);

      this.ele.component.find('.filter-item-more').target.forEach((more) => {
        const $qchecks = this.setAccordion(more);
        const moreWrap = $q(more);
        moreWrap.find('.filter-item-more__button').on('click', () => {
          this.checkMoreOpenClose(moreWrap, $qchecks);
        });
      });

      //when mobile
      this.ele.component.find('.filter-select__title-mobile').on('click', (event) => {
        const wrap = $q(event.currentTarget).closest('.filter-selection');
        wrap.addClass('filter-selection--open');
        const filter = wrap.find('.filter-selection__contents');
        wrap.find('.filter-select').addClass('filter-select--active');

        filter.css({
          opacity: '0',
        });

        filter.animate({
          opacity: '1',
        }, 300);
        //focus set
        const filterEl = filter.target[0];
        filter.attr('tabindex',0);
        filter.focus();
        document.body.style.overflow = 'hidden';
        //focus confine
        const focusWrap = this.closest2(filter.target[0],'.filter-selection');
        filterEl.focusCheck = function(e){
          setTimeout(() => {
            if (e.keyCode === 9) {
              const out = focusWrap.querySelector(':focus') === null;
              if (out) {
                filterEl.focus();
              }
            }
          },30);
        };
        document.addEventListener('keydown', filterEl.focusCheck);
      });

      //when mobile
      this.ele.component.find('.filter-select__view').on('click', () => {
        this.mobileFilterClose();
      });

      //when mobile
      this.ele.component.find('.filter-selection-popup__close').on('click', () => {
        this.mobileFilterClose();
      });

      this.ele.component.find('.filter-item-title__anchor').on('click', (event) => {
        this.dep1Toggle(event.currentTarget);
      });

      this.ele.component.find('.filter-selection__toggle').on('click', (event) => {
        this.dep2Toggle(event.currentTarget);
      });

      $q(window).on('resize', () => {
        this.resize();
      });
    }
    /**
    //  @author      : kejmail
    //  @param       : DomElement start element
    //  @param       : string style value
    //  @returns     : find parent element
    //  @discription : find parent
    **/
    closest2(elem, query) {
      function roop(parent) {
        if (parent === document.body) return null;
        const pall = document.createDocumentFragment();
        pall.appendChild(parent.parentNode.cloneNode());
        if (pall.querySelector(query) !== null) return parent.parentNode;
        return roop(parent.parentNode);
      }
      const rtn = roop(elem);
      return rtn;
    }

    set2depChange(checkEl) {
      const dep2El = checkEl.parentNode.nextElementSibling;
      const dep2ck = dep2El !== null ? dep2El.querySelectorAll('input[type="checkbox"]') : null;
      let dep2 = $q(dep2El);
      if (dep2ck !== null && dep2.hasClass('filter-selection__2-depth') && dep2ck.length !== 0) {
        //click element is selectAll checkbox
        [...dep2ck].forEach((ck) => {
          ck.checked = checkEl.checked;
        });
      } else {
        dep2 = this.closest2(checkEl,'.filter-selection__2-depth');
        if (dep2 !== null) {
          //click element is 2depth inner checkbox
          const sel = dep2.querySelectorAll('input[type="checkbox"]:checked').length;
          const all = dep2.querySelectorAll('input[type="checkbox"]').length;
          const btn = $q(dep2.previousElementSibling).find('input[type="checkbox"]');
          if (sel === all) {
            btn.target[0].checked = true;
          } else {
            btn.target[0].checked = false;
          }
        }
      }
    }
    showMore() {
      const wrapStyle = this.ele.selectList.target[0].getBoundingClientRect();
      let selectWid = 0;
      const check = this.ele.selectList.find('.filter-select__item').target.some((sel) => {
        selectWid += sel.getBoundingClientRect().width;
        if (wrapStyle.width < selectWid) return true;
      });
      return check;
    }

    checkFilterFormValue(filterItemForm) {
      const inputEls = filterItemForm.find('input[type="text"]').target;
      const checkValue = inputEls.every((input) => input.value !== '');
      if (!checkValue) { 
        this.resetFilterForm(filterItemForm);
      } else {
        this.setFilterForm(filterItemForm);
      }
    }

    setFilterForm(filterItemForm) {
      const checkClass = 'is-checked';
      const inputEls = filterItemForm.find('input[type="text"]').target;
      const dataNm = inputEls.reduce((acc, cur, index) => acc + (index === 0 ? `$${cur.value}` : ` - $${cur.value}`), '');
      filterItemForm.addClass(checkClass);
      filterItemForm.attr('data-form', true);
      filterItemForm.attr('data-nm', dataNm);
    }

    resetFilterForm(filterItemForm) {
      const checkClass = 'is-checked';
      filterItemForm.removeClass(checkClass);
      filterItemForm.removeAttr('data-form');
      filterItemForm.removeAttr('data-nm');
    }

    resetFilterInput(input) {
      const inputParent = $q(input).closest('.text-field-v2');
      inputParent.removeClass('delete');
      inputParent.removeClass('active');
      input.value = '';
    }

    deleteFilterForm(filterItemForm) {
      filterItemForm.target.forEach((form) => {
        const itemForm = $q(form);
        itemForm.find('input[type="text"]').target.forEach((input) => {
          this.resetFilterInput(input);
        });
        this.resetFilterForm(itemForm);
      });
    }

    setList() {
      let html = '';
      const removeFilterSelectItemArray = this.removeFilterSelectItemArray;
      function makeLists(cks,pre = '') {
        cks = Array.prototype.slice.call(cks);
        cks.forEach((ck) => {
          if (ck.checked || $q(ck).hasClass('filter-item-form is-checked')) {
            let filtersearchcode = '';
            let filterFormcode = '';
            let filterFlag = true;
            if (ck.getAttribute('data-filtersearchcode') !== null) {
              filtersearchcode = `data-filtersearchcode="${ck.getAttribute('data-filtersearchcode')}"`;
            }
            if (ck.getAttribute('data-form') !== null) {
              filterFormcode = `data-form="${ck.getAttribute('data-form')}"`;
            }

            if (removeFilterSelectItemArray.length) {
              removeFilterSelectItemArray.forEach((v) => {
                if (v.category === ck.getAttribute('data-category') && v.flag) {
                  filterFlag = false;
                }
              });
            } 
            
            if (filterFlag) {
              let dataTypeAttribute = null;
              if (ck.getAttribute('data-category')) {
                dataTypeAttribute = `data-type=${ck.getAttribute('data-category')}`;
              } else {
                dataTypeAttribute = '';
              }
              html += `<li class="filter-select__item" ${dataTypeAttribute} >${pre + ck.getAttribute('data-nm')}<a href="javascript:void(0);" class="filter-select__remove" role="button" data-check-idx='${ck.getAttribute('data-check-idx')}' ${filtersearchcode} ${filterFormcode}><span class="hidden">REMOVE</span><svg class="icon" focusable="false"><use xlink:href="#cancel-close-regular" href="#cancel-close-regular"></use></svg></a></li>`;
            }
          }
        });
      }
      this.ele.component.find('.filter-selection__list').target.forEach((dep1) => {
        if (!dep1.querySelectorAll('.filter-selection__2-depth-accordion').length) {
          makeLists(dep1.querySelectorAll('.filter-checkbox [type="checkbox"]:checked, .filter-radio [type="radio"]:checked'));
        } else {
          const ckeckeds = dep1.querySelectorAll('.filter-selection__2-depth-accordion .filter-checkbox [type="checkbox"]:checked, .filter-selection__2-depth-accordion .filter-radio [type="radio"]:checked');
          if (ckeckeds.length > 0) {
            const pre = dep1.querySelector('.filter-selection__2-depth-accordion').getAttribute('data-1dep-title');
            makeLists(ckeckeds,`${pre}:`);
          }
        }
      });

      window.sg.common.icon.update(this.ele.component.find('.filter-select__result').target[0]);
      this.ele.selectList.target[0].innerHTML = html;
      //delete btn
      const listCloseBtn = this.ele.selectList.find('.filter-select__remove');
      listCloseBtn.on('click', (event) => {
        const button = event.currentTarget;
        const checkIdx = button.getAttribute('data-check-idx');
        const checkFilterForm = button.getAttribute('data-form');

        const checkbox = this.ele.checks.eq(checkIdx).target[0];
        if(checkFilterForm) {
          const formTarget = document.querySelector(`div[data-check-idx="${checkIdx}"]`);
          this.deleteFilterForm($q(formTarget));
        } else {
          checkbox.checked = false;
        }

        const nowIdx = listCloseBtn.target.indexOf(event.currentTarget);

        let before = null;
        if (nowIdx !== 0) {
          before = nowIdx - 1;
        } else if(listCloseBtn.target.length >= 2) {
          before = 0;
        }

        if(!checkFilterForm) { this.set2depChange(checkbox);}
        this.setList();
        if (before !== null) {
          this.ele.selectList.find('.filter-select__remove').eq(before).target[0].focus();
        } else {
          this.ele.component.find('.filter-select__clear').target[0].focus();
        }
      });
      //CLEAR ALL btn active
      const wrap = this.ele.component;
      const count = wrap.find('[type="checkbox"]:checked, [type="radio"]:checked').target.length;
      if (count !== 0) {
        wrap.find('.filter-select__title__count').target[0].innerHTML = `(${count})`;
        wrap.find('.filter-select__title-count').target[0].innerHTML = `(${count})`;
        wrap.find('.filter-select__clear').addClass('filter-select__clear--active');
        wrap.find('.filter-select__view').addClass('filter-select__view--active');
      } else {
        wrap.find('.filter-select__title__count').target[0].innerHTML = '';
        wrap.find('.filter-select__title-count').target[0].innerHTML = '';
        wrap.find('.filter-select__clear').removeClass('filter-select__clear--active');
        wrap.find('.filter-select__view').removeClass('filter-select__view--active');
      }

      //more btn
      const check = this.showMore();
      if (check) {
        this.ele.listMoreBtn.target[0].style.display = 'inline-block';
        if (this.ele.listMoreBtn.target[0].classList.contains('filter-select__more--active')) {
          this.listMoreOpenClose(true);
        }
      } else {
        this.ele.listMoreBtn.target[0].style.display = '';
        this.listMoreOpenClose(false);
      }
    }

    listMoreOpenClose(state) {
      const btnTxt = this.ele.listMoreBtn.find('.filter-select__more-button').target[0];
      if (state === undefined) {
        state = !this.ele.listMoreBtn.hasClass('filter-select__more--active');
      }

      const wrap = this.ele.component.find('.filter-selection__contents').target[0];
      const list = this.ele.component.find('.filter-select__list').target[0];
      const contentWrap = this.closest2(this.ele.component.target[0],'.result__wrap');

      if (state) {
        this.ele.listMoreBtn.addClass('filter-select__more--active');
        list.style.height = 'auto';
        btnTxt.innerHTML = this.less;

        wrap.style.marginTop = `${list.getBoundingClientRect().height}px`;
        if (contentWrap !== null && contentWrap.querySelector('.result-list') !== null) {
          contentWrap.querySelector('.result-list').style.marginTop = `${list.getBoundingClientRect().height}px`;
        }
      } else {
        this.ele.listMoreBtn.removeClass('filter-select__more--active');
        list.style.height = '';
        btnTxt.innerHTML = this.more;

        wrap.style.marginTop = '';
        if (contentWrap !== null && contentWrap.querySelector('.result-list') !== null) {
          contentWrap.querySelector('.result-list').style.marginTop = '';
        }
      }
    }
    /**
    //  @author      : kejmail
    //  @param       : $qObject more btn
    //  @param       : $qObject more btn's sibling selector
    //  @param       : boolean open or close
    //  @discription : checkbox more open and close
    **/
    checkMoreOpenClose(moreWrap, checksInMore, state) {
      const btnTxt = moreWrap.find('.filter-item-more__text').target[0];
      if (state === undefined) {
        state = btnTxt.innerHTML === this.more;
      }

      if (!moreWrap.hasClass('filter-item-more--active')) {
        checksInMore.css({
          display: 'block',
        });

        moreWrap.addClass('filter-item-more--active');
        btnTxt.innerHTML = this.less;
      } else {
        checksInMore.target.forEach((ck,i) => {
          if(i < 5) return;
          ck.style.display = 'none';
        });

        moreWrap.removeClass('filter-item-more--active');
        btnTxt.innerHTML = this.more;
      }
    }

    mobileFilterClose(isPc) {
      const filter = this.ele.component.find('.filter-selection__contents');
      this.ele.component.find('.filter-select').removeClass('filter-select--active');

      const $qcomponent = this.ele.component;

      filter.stop();

      function afterAni() {
        $qcomponent.removeClass('filter-selection--open');
        filter.css({
          opacity: '',
        });
        filter.stop();
      }

      if (isPc) {
        afterAni();

        if(!this.showMore()){
          this.ele.listMoreBtn.target[0].style.display = '';
        }
      } else {
        filter.animate({
          opacity: '0',
        }, 300,() => {
          afterAni();
        });
      }

      filter.removeAttr('tabindex');

      document.body.style.overflow = '';
      const filterEl = filter.target[0];
      document.removeEventListener('keydown',filterEl.focusCheck);
    }
    /**
     //  @author      : kejmail
     //  @param       : DomElement 1depth accordion btn
     //  @param       : boolean open or close
     //  @discription : 1depth open and close
    **/
    dep1Toggle(elem,state) {
      if (elem === undefined) return ;
      const accordion = $q(elem).closest('.filter-selection__item').find('.filter-selection__1-depth-accordion');
      const btn = $q(elem).find('.filter-item-title__toggle');
      if (state === undefined) state = btn.hasClass('filter-item-title__toggle--active');

      if (state) {
        accordion.css({
          display: 'none',
        });

        btn.removeClass('filter-item-title__toggle--active');
        btn.find('.hidden').target[0].innerHTML = 'Expand';
      } else {
        accordion.css({
          display: '',
        });

        btn.addClass('filter-item-title__toggle--active');
        btn.find('.hidden').target[0].innerHTML = 'Collaps';
      }
    }
    /**
     //  @author      : kejmail
     //  @param       : DomElement 2depth accordion btn
     //  @param       : boolean open or close
     //  @discription : 2depth open and close
    **/
    dep2Toggle(elem, state) {
      const accordion = $q(elem.parentNode).find('.filter-selection__2-depth-accordion');
      const btn = $q(elem);
      if(state === undefined)state = btn.hasClass('filter-selection__toggle--active');
      if(state){
        accordion.css({
          display: 'none',
        });
        btn.removeClass('filter-selection__toggle--active');
        btn.find('.hidden').target[0].innerHTML = 'Expand';
      }else{
        accordion.css({
          display: 'block',
        });
        btn.addClass('filter-selection__toggle--active');
        btn.find('.hidden').target[0].innerHTML = 'Collaps';
      }
    }
    //checkbox show, only 1dep each 5
    setAccordion(more) {
      const checksInAccordion = [...more.parentNode.children].filter((el) => el.classList.contains('filter-checkbox'));
      if (checksInAccordion.length > 5) {
        checksInAccordion.forEach((ck, i) => {
          if (i < 5) return;
          ck.style.display = 'none';
        });

        more.querySelector('.filter-item-more__text').innerHTML = this.more;
      }else{
        $q(more).css({
          display: 'none',
        });
      }
      const $qchecks = $q(checksInAccordion);
      return $qchecks;
    }

    /**
     //  @author      : kyb
     //  @param       : {string} remove target 'data-type' value
     //  @param       : {boolean} remove state keep going value
     //  @discription : filter-select__item list remove
    **/
    removeFilterSelectItem(type, keep) {
      const filterSelectItem = this.ele.selectList.find('.filter-select__item').target;
      let pushFlag = true;
      if (keep) {
        filterSelectItem.forEach((element) => {
          if ($q(element).attr('data-type') === type) {
            $q(element).remove();
          }
        });
      }

      this.removeFilterSelectItemArray.forEach((v,i) => {
        if (v.category === type) {
          this.removeFilterSelectItemArray[i].flag = keep;
          pushFlag = false;
        }
      });

      if (pushFlag) {
        this.removeFilterSelectItemArray.push({ 
          category: type,
          flag: keep,
        });
      }
    }
  }

  function init() {
    const target = $q('.filter-selection').target;
    if (instanceEl.length !== 0) {
      instanceEl.forEach((element , idx) => {
        if (element !== null && target.indexOf(element) < 0) {
          instanceEl[idx] = null;
          instance[idx] = null;
        }
      });
    }

    target.forEach((element) => {
      if ($q(element).find('.filter-selection__list input[type="checkbox"]').target.length > 0) {
        const idx = instanceEl.indexOf(element);
        if (idx < 0) {
          instanceEl.push(element);
          instance.push(new FilterSelection(element));
        } else {
          instance[idx].resize();
        }
      }
    });
  }

  const removeFilterSelectItem = (type,keep) => {
    $q('.filter-selection').target.forEach((element) => {
      if (FilterSelection.instances.has(element)) {
        const instances =  FilterSelection.instances.get(element);
        instances.removeFilterSelectItem(type,keep);
      }
    });
  };

  FilterSelection.instances = new WeakMap();

  $q.ready(() => {
    init();
    window.sg.components.filterSelection = {
      reInit: init,
      removeFilterSelectItem,
    };
  });
})();

(function(win, $, doc, sga, search, api, template) {
    var _template = search.template; //sga.template.compile($('div.sga-templates'));
    var _bestMatch = $('<section class="best-match"></section>');

    var isEdit = false;
    
    if (window.parent && $(window.parent.document).find('.foundation-authoring-ui-mode').length > 0) {
        isEdit = true;
    }

    function _init() {

        $('.best-match').remove();

        sga.ui.registerEventListener("keyword-search", "best-match", function(resData) {

            if(resData.bestMatchList){
                var bestMatchList = resData.bestMatchList;
                var html = '';

                for(var i=0; i < bestMatchList.length; i++){
                    var bestMatch = bestMatchList[i];

                    var bindData = {
                        index : i,
                        title : hightlightKeyword(resData.common.searchValue, bestMatch.title),
                        description : hightlightKeyword(resData.common.searchValue, bestMatch.description),
                        //title : bestMatch.title,
                        //description : bestMatch.description,
                        alt : bestMatch.imgAlt,
                        pcImg : bestMatch.imgUrl,
                        pageTrack : digitalData.page.pageInfo.pageTrack,
                        no : i+1
                    };

                    var $item = $( _template.bind("bestmatch", bindData) );

                    var $href = $item.find("a.best-match__wrap");
                    $href.attr('href', bestMatch.linkUrl);

                    html += $item.html();

                }

                _bestMatch.html(html);

                if(html != ''){

                    if( $('.result__side').length <= 0 ){
                        var resultSide = $('<div class="result__side"></div>');
                        resultSide.prepend(_bestMatch);
                        $('.tab-panel__item#all').prepend(resultSide);
                    }else{
                        if( $('.sc-g-best-match').length > 0 )
                            $('.sc-g-best-match').append(html);
                        else
                            $('.tab-panel__item#all .result__side').prepend(_bestMatch);
                    }


                }else{
                    if(!isEdit){
                        var additional = $('.search-support-info__additional-info');
                        var contactUs = $('.search-support-info__contact-us');
                        
                        if(additional.length <= 0 && contactUs.length <=0){
                            $('#all .result__side').remove();
                        }
                    }
                }
            }
        });
    }

    function hightlightKeyword(keyword, text){
    	var boldTarget = keyword.split(" ");

    	if(boldTarget.length > 0){
    		return text.replace(new RegExp('(\\b)(' + boldTarget.join('|') + ')(\\b)','ig'), '$1<mark>$2</mark>$3');
    	} else {
    		return text;
    	}
    }
    
    $(function() {
        _init();
    });
    
})(window, jQuery, document, window.smg.sga, window.smg.sga.search, window.smg.sga.search.apiClient, window.smg.sga.search.template);
(() => {
  const $q = window.sg.common.$q;
  const BREAKPOINTS = window.sg.common.constants.BREAKPOINTS;
  const utils = window.sg.common.utils;
  const lazyLoad = window.sg.common.lazyLoad;
  const KEYCODE = window.sg.common.constants.KEY_CODE;

  const selector = {
    component: '.where-to-buy',
    container: '.where-to-buy__container.layer-popup',
    tabItem: '.where-to-buy__tab-item button',
    tabPanelOnline: '.where-to-buy__online',
    tabPanelOffline: '.where-to-buy__locator',
    tabPanels: '.where-to-buy__tabpanels div[role="tabpanel"]',
    showMore: '.where-to-buy__store-more-cta',
    onlineListWrap: '.where-to-buy__store-list',
    onlineListItem: '.where-to-buy__store-item',
    distanceBtn: '.where-to-buy__distance-button',
    resultList: '.where-to-buy__result-content:not(.where-to-buy__result-content--disabled)',
    storeDetail: '.where-to-buy__detail',
    backStoreList: '.where-to-buy__detail-close',
    storeListArea: '.where-to-buy__result',
    storeListInner: '.where-to-buy__result-list',
    storeHeader: '.where-to-buy__result-top',
    layerCloseBtn: '.where-to-buy__content > .layer-popup__close',
    layerDim: '.layer-popup-dim',
    activeClsTop: 'where-to-buy__result--top',
    activeClsMiddle: 'where-to-buy__result--middle',
    activeClsBottom: 'where-to-buy__result--bottom',
    activeClsActive: 'where-to-buy__result--active',
    nearbyPop: '.where-to-buy__layer--nearby',
    nearbyPopClose: '.where-to-buy__layer--nearby .layer-popup__close, .where-to-buy__layer--nearby .cta--cancel',
    displayItem: 'display-item',
    isSelected: 'is-selected',
    isActive: 'is-active',
  };

  const el = {
    window: null,
    component: null,
  };

  class WhereToBuy {
    constructor(component) {
      this.el = {
        window: $q(window),
        component: $q(component),
        container: null,
        tabItem: null,
        tabPanelOnline: null,
        tabPanelOffline: null,
        showMore: null,
        onlineListWrap: null,
        onlineListItem: null,
        distanceBtn: null,
        resultList: null,
        storeDetail: null,
        storeHeader: null,
        backStoreList: null,
        storeListArea: null,
        storeListInner: null,
        layerCloseBtn: null,
        layerDim: null,
        isMoving: null,
        activeList: null,
        moveStartY: null,
        curPosition: null,
        closeFocus: null,
        nearbyPop: null,
        nearbyPopClose: null,
      };

      this.handler = {
        resize: this.resize.bind(this),
        slideMoveStart: this.slideMoveStart.bind(this),
        slideMoving: this.slideMoving.bind(this),
        slideMoveEnd: this.slideMoveEnd.bind(this),
        showPopup: this.showPopup.bind(this),
        closePopup: this.closePopup.bind(this),
        focusInnerPopup: (event) => {
          if (event.keyCode === KEYCODE.TAB) {
            if (this.matches(document.activeElement, '.layer-popup__inner') && event.shiftKey) {
              $q(document.activeElement).find('.layer-popup__close').focus();
            } else if (this.matches(document.activeElement, '.layer-popup__close') && event.shiftKey === false) {
              $q(document.activeElement).closest('.layer-popup__inner').focus();
            }
          }
        },
        focusShopDetail: (event) => {
          if (event.keyCode === KEYCODE.TAB) {
            requestAnimationFrame(() => {
              const $wrap = $q(document.activeElement).closest('.where-to-buy__detail');
              if ($wrap.target.length === 0) {
                const $detail = this.el.container.find('.where-to-buy__detail');
                if (event.shiftKey) {
                  const $focusAble = $detail.find('a, button');
                  $focusAble.eq($focusAble.target.length - 1).focus();
                } else {
                  $detail.focus();
                }
              }
            });
          }
        },
      };

      WhereToBuy.instances.set(component, this);

      this.setElement();

      this.init();
    }

    init() {
      this.bindEvents();

      this.resize();
    }

    reInit() {
      this.setElement();

      this.bindEvents();

      this.resize();
    }

    setElement() {
      this.el.container =  this.el.component.find(selector.container);
      this.el.tabItem = this.el.component.find(selector.tabItem);
      this.el.tabPanelOnline = this.el.component.find(selector.tabPanelOnline);
      this.el.tabPanelOffline = this.el.component.find(selector.tabPanelOffline);
      this.el.tabPanels = this.el.component.find(selector.tabPanels);
      this.el.showMore = this.el.component.find(selector.showMore);
      this.el.onlineListWrap = this.el.component.find(selector.onlineListWrap);
      this.el.onlineListItem = this.el.component.find(selector.onlineListItem);
      this.el.distanceBtn = this.el.component.find(selector.distanceBtn);
      this.el.resultList = this.el.component.find(selector.resultList);
      this.el.storeDetail = this.el.component.find(selector.storeDetail);
      this.el.storeHeader = this.el.component.find(selector.storeHeader);
      this.el.backStoreList = this.el.component.find(selector.backStoreList);
      this.el.storeListArea = this.el.component.find(selector.storeListArea);
      this.el.storeListInner = this.el.component.find(selector.storeListInner);
      this.el.layerCloseBtn = this.el.component.find(selector.layerCloseBtn);
      this.el.layerDim = this.el.component.find(selector.layerDim);
      this.el.nearbyPop = this.el.component.find(selector.nearbyPop);
      this.el.nearbyPopClose = this.el.component.find(selector.nearbyPopClose);
      this.el.isMoving = false;
      this.desktopFlag = false;
      this.mobileFlag = false;
      this.closeFocus = this.closeFocus || null;
    }

    activeTab(idx) {
      this.el.tabItem.removeClass(selector.isSelected);
      this.el.tabItem.eq(idx).addClass(selector.isSelected);
      
      this.el.tabPanels.removeClass(selector.isActive);
      this.el.tabPanels.eq(idx).addClass(selector.isActive);
    }

    showMoreItem() {
      const activeItem = [];
      let endCnt = 6;

      this.el.onlineListItem.target.forEach((item) => {
        const $item = $q(item);

        if ($item.css('display') === 'none') {
          activeItem.push($item);
        }
      });

      if (activeItem.length < endCnt) {
        endCnt = activeItem.length;
      }

      for (let i = 0; i < endCnt; i++) {
        activeItem[i].addClass(selector.displayItem);
      }

      if (this.el.onlineListItem.eq(this.el.onlineListItem.target.length - 1).hasClass(selector.displayItem)) {
        this.el.showMore.hide();
      }

      const movePos = this.el.component.find('.where-to-buy__store').target[0].scrollHeight - this.el.component.find('.where-to-buy__online-contents').height();
      this.el.component.find('.where-to-buy__online-contents').moveScroll(movePos, 200);
    }

    activeDistance(item) {
      const addSpan = '<span class="hidden">selected</span>';

      this.el.distanceBtn.removeClass(selector.isSelected);
      // this.el.distanceBtn.attr('aria-selected', false);
      item.addClass(selector.isSelected);
      // item.attr('aria-selected', true);

      this.el.distanceBtn.find('.hidden').remove();
      item.append(addSpan);
    }

    activeStoreList(item) {
      this.el.storeDetail.show();
      this.el.storeDetail.attr('tabindex', 0);
      this.el.storeDetail.focus();

      setTimeout(() => {
        this.resetClass(this.el.storeListArea);
        this.el.storeListArea.addClass(selector.activeClsMiddle);
      }, 200);

      this.el.activeList = item;
    }

    backStoreList() {
      this.el.storeDetail.removeAttr('tabindex');
      this.el.storeDetail.hide();
      this.el.activeList.focus();
    }

    slideMoveStart(e) {
      this.el.moveStartY = e.clientY ? e.clientY : e.changedTouches[0].pageY;
      this.el.curPosition = parseInt(this.el.storeListArea.css('top').replace('px', '')) || this.el.storeListArea.target[0].getBoundingClientRect().top - this.el.tabPanelOffline.target[0].getBoundingClientRect().top;
      this.el.isMoving = true;

      window.addEventListener('mousemove',this.handler.slideMoving,{ passive: false });
      this.el.window.on('mouseup', this.handler.slideMoveEnd);
      window.addEventListener('touchmove',this.handler.slideMoving,{ passive: false });
      this.el.window.on('touchend', this.handler.slideMoveEnd);
    }

    slideMoving(e) {
      if (this.el.isMoving) {
        const distance = (e.clientY ? e.clientY : e.changedTouches[0].pageY) - this.el.moveStartY;
        this.el.curPosition = this.el.curPosition + distance;

        this.resetClass(this.el.storeListArea);

        this.el.storeListInner.show();

        this.el.storeListArea.css({
          'top': `${this.el.curPosition}px`,
        });

        this.el.storeListArea.addClass(selector.activeClsActive);

        this.el.moveStartY = this.el.moveStartY + distance;
      }
      e.preventDefault();
    }

    slideMoveEnd() {
      const areaHeight = this.el.component.find('.where-to-buy__locator').height();
      const areadivMin = areaHeight / 3;
      const areadivMax = areaHeight - areadivMin;
      let positionCls;

      this.el.isMoving = null;
      this.el.moveStartY = 0;
      this.el.curPosition = parseInt(this.el.storeListArea.css('top').replace('px', '')) || null;

      if (this.el.curPosition === null) {
        return;
      }

      this.el.storeListArea.css({
        'top': '',
      });

      this.el.storeListArea.removeClass(selector.activeClsActive);

      if (this.el.curPosition < areadivMin) {
        positionCls = selector.activeClsTop;
      } else if (this.el.curPosition > areadivMax) {
        positionCls = selector.activeClsBottom;
        
        setTimeout(() => {
          this.el.storeListInner.hide();
        },200);
      } else {
        positionCls = selector.activeClsMiddle;
      }

      this.el.storeListArea.addClass(positionCls);

      window.removeEventListener('mousemove',this.handler.slideMoving);
      this.el.window.off('mouseup', this.handler.slideMoveEnd);
      window.removeEventListener('touchmove',this.handler.slideMoving);
      this.el.window.off('touchend', this.handler.slideMoveEnd);
    }

    resetClass(item) {
      [selector.activeClsTop, selector.activeClsMiddle, selector.activeClsBottom].forEach((cls) => {
        item.removeClass(cls);
      });
    }

    closeLayer() {
      this.el.layerDim.hide();
      this.el.container.hide();
    }

    showPopup(btn) {
      this.el.container.show();
      this.el.layerDim.show();

      utils.hiddenScroll();
      this.el.component.setLayerFocus(selector.container, selector.layerCloseBtn);
      const $innerPopup = this.moveFocusInnerPopup();
      if ($innerPopup === null) {
        window.sg.common.utils.setMobileFocusLoop(this.el.component.target[0]);
      }
      this.closeFocus = btn;
    }

    moveFocusInnerPopup(){
      let $innerPopup = null;

      this.el.container.find('.where-to-buy__locator.is-active').find('.where-to-buy__layer--gbs, .where-to-buy__layer--nearby').target.forEach((pop) => {
        if(pop.style.display === 'block'){
          $innerPopup = $q(pop).find('.layer-popup__inner');
          $innerPopup.focus();
        }
      });

      if($innerPopup !== null && $innerPopup.target.length > 0){
        window.sg.common.utils.removeMobileFocusLoop();
        window.sg.common.utils.setMobileFocusLoop($innerPopup.target[0]);
        return $innerPopup.target[0];
      } else {
        return null;
      }
    }

    closePopup(btn = null) {
      const btnEl = btn === null ? this.closeFocus : btn;
      utils.visibleScroll();
      this.el.component.offLayerFocus();
      window.sg.common.utils.removeMobileFocusLoop();
      this.closeLayer();
      this.originFocus(btnEl);
    }

    originFocus(backBtn = null) {
      if (backBtn !== null) {
        backBtn.focus();
      }
    }

    resize() {
      if (BREAKPOINTS.MOBILE > utils.getViewPort().width) {
        if (utils.getViewPort().width > utils.getViewPort().height) {
          this.el.component.addClass('mode--landscape');
        } else {
          this.el.component.removeClass('mode--landscape');
        }
        if (this.mobileFlag === false) {
          this.mobileFlag = true;
          this.desktopFlag = false;

          // drag event(store list)
          this.el.storeHeader.target.forEach((item) => {
            const $item = $q(item);

            $item.on('mousedown', this.handler.slideMoveStart);
            $item.on('touchstart', this.handler.slideMoveStart);
          });

          this.resetClass(this.el.storeListArea);
        }
      } else {
        this.el.component.removeClass('mode--landscape');
        if (this.desktopFlag === false) {
          this.desktopFlag = true;
          this.mobileFlag = false;

          this.el.storeHeader.target.forEach((item) => {
            const $item = $q(item);
    
            $item.off('mousedown', this.handler.slideMoveStart);
            $item.off('touchstart', this.handler.slideMoveStart);
          });

          this.el.storeListInner.show();

          this.resetClass(this.el.storeListArea);
        }
      }
    }

    matches(el, selector) {
      return (el.matches ? el.matches(selector) : el.msMatchesSelector(selector));
    }

    bindEvents() {
      $q(window).off('resize', this.handler.resize).on('resize', this.handler.resize);

      // tab active
      this.el.tabItem.target.forEach((item, idx) => {
        const $item = $q(item);

        $item.off('click').on('click', () => {
          this.activeTab(idx);
          this.moveFocusInnerPopup();
        });
      });

      // show more
      this.el.showMore.target.forEach((item) => {
        const $item = $q(item);

        $item.off('click').on('click', () => {
          this.showMoreItem();
        });
      });

      // distance active
      this.el.distanceBtn.target.forEach((item) => {
        const $item = $q(item);

        // if ($item.hasClass(selector.isSelected)) {
        //   $item.attr('aria-selected', true);
        // } else {
        //   $item.attr('aria-selected', false);
        // }

        $item.off('click').on('click', () => {
          this.activeDistance($item);
        });
      });

      // offline store active
      this.el.resultList.target.forEach((item) => {
        const $item = $q(item);

        $item.off('click').on('click', () => {
          if (!$item.hasClass('new-window')) {
            this.activeStoreList($item);
          }
        });
      });

      // back store list
      this.el.backStoreList.target.forEach((item) => {
        const $item = $q(item);

        $item.off('click').on('click', () => {
          this.backStoreList();
        });
      });

      // popup close
      this.el.nearbyPopClose.off('click').on('click', () => {
        this.el.nearbyPop.hide();

        window.sg.common.utils.removeMobileFocusLoop();
        window.sg.common.utils.setMobileFocusLoop(this.el.component.target[0]);

        this.el.distanceBtn.target.forEach((item) => {
          const $item = $q(item);

          if ($item.hasClass('is-selected')) {
            $item.focus();
          }
        });
      });

      this.el.layerCloseBtn.on('click', () => {
        this.closePopup();
      });

      //inner Popup focus lock
      this.el.container.find('.where-to-buy__locator').find('.where-to-buy__layer--gbs, .where-to-buy__layer--nearby').find('.layer-popup__inner')
        .attr('tabindex', 0)
        .off('keydown', this.handler.focusInnerPopup)
        .on('keydown', this.handler.focusInnerPopup);

      this.el.container.find('.where-to-buy__detail')
        .off('keydown', this.handler.focusShopDetail)
        .on('keydown', this.handler.focusShopDetail);
    }
  }

  const init = () => {
    el.window = $q(window);
    el.component = $q(selector.component);

    if (!el.component.target.length) {
      return;
    }

    lazyLoad.setLazyLoad();

    $q(selector.component).target.forEach((element) => {
      if (!WhereToBuy.instances.has(element)) {
        new WhereToBuy(element);
      }
    });
  };

  const reInit = () => {
    lazyLoad.setLazyLoad();
    
    $q(selector.component).target.forEach((element) => {
      if (WhereToBuy.instances.has(element)) {
        const instances =  WhereToBuy.instances.get(element);
        instances.reInit();
      } else {
        new WhereToBuy(element);
      }
    });
  };

  WhereToBuy.instances = new WeakMap();

  function showPopup(closeEl) {
    $q(selector.component).target.forEach((element) => {
      if (!WhereToBuy.instances.has(element)) {
        new WhereToBuy(element).showPopup(closeEl);
      } else {
        WhereToBuy.instances.get(element).showPopup(closeEl);
      }
    });
  }


  function closePopup(closeEl) {
    $q(selector.component).target.forEach((element) => {
      if (!WhereToBuy.instances.has(element)) {
        new WhereToBuy(element).closePopup(closeEl);
      } else {
        WhereToBuy.instances.get(element).closePopup(closeEl);
      }
    });
  }

  $q.ready(init);

  window.sg.components.whereToBuy = {
    init,
    reInit,
    showPopup,
    closePopup,
  };
})();

(function (win, $) {
	'use strict';
	
	/**
	 * 1. Where To Buy 버튼 class에 'js-cta-buy'를 넣어 주세요. 
	 *   -. P5에서는 js-cta-buy, js-cta-buy-etc 국가 분기에 따라 혼용해서 사용하였는데, 'js-cta-buy' 만 넣으시면 됩니다.
	 *   -. Local WTB ps-widget, cci-trigger-overlay class는 별도 선언 하지 않아도 됩니다.
	 * 2. 적용 attribute (하위 4개 다 넣어주어도 무관함.)
	 *    -. data-modelcode
	 *    -. data-iacode
	 *    -. data-title  (at / ch / ch_fr / de ) 에 사용
	 *    -. data-img-src (at / ch / ch_fr / de ) 에 사용
	 *    위 4개의 attribute를  WTB CTA에 넣어 주시고, 기존에 사용한던 data-sku, data-productcode, ps-sku 등은 넣지 않아도 됩니다.
	 * 3. 페이지 로드 된 후에 JavaScript에서 WTB 버튼을 화면에 넣은 경우(비동기 호출)에는 
	 *    window.smg.wtb.common.reInit(); 함수를 호출 해 주세요.
	 *    종전에 ca/ca_fr 에서 사용하던 PriceSpider.rebind()는 별도로 호출 하실 필요 없습니다.
	 * 4. 각 국가별 외부 WTB를 사용하기 위한 Script 선언은 페이지에서 하셔야 합니다. (pd/pf/search page 참고)
	 */
	
	if('undefined' === typeof win.smg) {
		win.smg = {};
	}
	
	var wtb = win.smg.wtb = win.smg.wtb || {};
	
	wtb.initData = {
			nodePath 				: $("#current_node_path").val(),
			d_modelCode 			: $("#current_model_code").val(),
			d_categorySubTypeCode	: $("#wtb-categorySubTypeCode").val(),
			buyinstoreRedirectYN 	: $("#buyinstoreRedirectYN").val(),
			bvConversationFlag 		: $("#bvConversationFlag").val(),
			bvConversationRTLFlag 	: $("#bvConversationRTLFlag").val(),
			channelCampaignTag		: "N", // 실제 WTB 클릭시 campaign tag (tag=WTBwidget) 를 넣어서 호출 변경위함
			placedWtbResources 		: false,
			useNewWtbFlag 			: $("#useNewWtb").val(),
			distanceUnitValue 		: "",
			modelCodeValue 			: "",
			rtlValue 				: $("#rtlValue").val(),
			apiChangeStockStatus	: "",
			useWtbStockFunction		: ""
	}
	
	wtb.common = (function() {
		return {
			reInit : function() {
				rebindWtbBtn();
			}
		}
	})();
	
	function rebindWtbBtn() {
		var siteCode = $("#siteCode").val();
		
		$(".js-cta-buy, .js-cta-buy-etc").each(function(){
			if(siteCode === 'ca' || siteCode === 'ca_fr') {
				$(this).addClass("ps-widget");
				$(this).attr("ps-sku", $(this).data("modelcode"));
				PriceSpider.rebind();
			}
			
			if(siteCode === "de") {
				/*|| (siteCode === "de" && "010" !== $(this).attr("data-iacode").substring(0,3))*/
				$(this).addClass("cci-trigger-overlay");
				$(this).attr("data-sku", $(this).data("modelcode"));
				$(this).attr("data-productcode", $(this).data("modelcode"));
			}
		});
		
	}
	
	function _init() {
		rebindWtbBtn();
		wtb.bak.init();
	}
	
	$(function () {
		_init();
	});
	
})(window, window.jQuery);
(function (win, $) {
	'use strict';
	
	win.smg = win.smg || {};
	var wtb = win.smg.wtb = win.smg.wtb || {};
	
	wtb.bak = (function() {
		return {
			init : function() {
				callWtb();
			},	
			
			reInit : function() {
				window.sg.components.whereToBuy.reInit();
			}
		}
		
	})();
	
	function callWtb() {
		var initData = win.smg.wtb.initData;
		
	    //offline store set cookie
	    function setOffStoreCookie(cname, cvalue, exdays) {
			var d = new Date();
			d.setTime(d.getTime() + ((exdays || 0) * 24 * 60 * 60 * 1000));
			document.cookie = cname + '=' + cvalue + '; expires=' + d.toUTCString();
		};
		
		//offline store get cookie
		function  getOffStoreCookie(cname) {
			var name = cname + '=',
				ca = document.cookie.split(';'),
				c;

			for(var i=0, leng=ca.length; i<leng; i++) {
				c = ca[i];
				while (c.charAt(0)===' ') {
					c = c.substring(1);
				}
				if (c.indexOf(name) !== -1) {
					return c.substring(name.length,c.length);
				}
			}
			return '';
		};
		

		//offline store list 
		var getOffStoreList = function(jsonData) {
			$('#store-list').html("");
			var totalStoreCount = jsonData.common.storesCount;
			var storesData = jsonData.stores;
			var geoInfoData = jsonData.geoInfo;
			$(".where-to-buy__container .where-to-buy__result-count").text(totalStoreCount);
			if(totalStoreCount !== 0) {
				for (var ii = 0; ii < totalStoreCount; ii++) {
					var storeList = "";
				
					storeList += 
						'<li class="where-to-buy__result-item" role="listitem">' + 
							'<a href="javascript:;" class="where-to-buy__result-content ';
							var storeClass = ""; 
							var brandType ="";
							var storeName = storesData[ii].name;
							if(storesData[ii].cityName != null) {
								storeName += " " + storesData[ii].cityName;
							}
								if(storesData[ii].brandTypeCode === 'E') {
									storeClass = "type--experience";
									brandType = "E";
								}else if(storesData[ii].brandTypeCode === 'B') {
									storeClass = "type--brand";
									brandType = "B";
								}else if(storesData[ii].brandTypeCode === 'O') {
									storeClass = "type--other";
									brandType = "O";
								}
					storeList += storeClass + '" role="button"' + 
					            'an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-detail view" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+'">' +
								'<div class="where-to-buy__result-info" data-store-id="'+ storesData[ii].id +'">' + 
									'<p class="where-to-buy__result-type">';
					/* SVG Icon 추가 */
					storeList += '<svg class="icon icon--store-experience" focusable="false" aria-hidden="true">' +
								'<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#pin-experience-i"></use>' +
								'</svg>' +
								'<svg class="icon icon--store-brand" focusable="false" aria-hidden="true">' +
								'<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#pin-brand-i"></use>' +
								'</svg>' +
								'<svg class="icon icon--store" focusable="false" aria-hidden="true">' +
								'<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#pin-other-i"></use>' +
								'</svg>';
									if(brandType === "E") {
										storeList += Granite.I18n.get("Samsung Experience Stores");
									}else if(brandType === "B") {
										storeList += Granite.I18n.get("Samsung Brand Store");
									}else if(brandType === "O") {
										storeList += Granite.I18n.get("Other Store");
									}
					/* SVG Icon 추가 */
					storeList += '<svg class="icon icon--next" focusable="false" aria-hidden="true">' +
		                        '<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#next-bold"></use>' +
		                        '</svg>';
					storeList += '</p>';
					
					storeList += '<p class="where-to-buy__result-name">'+ storesData[ii].name;
									if (storesData[ii].cityName != null) {
										storeList += 
										'<span class="where-to-buy__locator__store-city">'+ ' '+storesData[ii].cityName +'</span></p>';
									}																											
					storeList += '<p class="where-to-buy__result-distance">'+ storesData[ii].distance + initData.distanceUnitValue +'</p>' +
									'<input type="hidden" class="lat" value="'+ storesData[ii].latitude +'">' +
									'<input type="hidden" class="long" value="'+ storesData[ii].longitude +'">' + 
									'<input type="hidden" class="storeId" value="'+ storesData[ii].id +'">' + 
									'<input type="hidden" class="storeindex" value="'+ (ii+1) +'">' + 
									'<input type="hidden" id="markerlatitude_'+ (ii+1) +'" value="'+ storesData[ii].latitude +'">'+
									'<input type="hidden" id="markerlongitude_'+ (ii+1) +'" value="'+ storesData[ii].longitude +'">'+	
									'<input type="hidden" id="markerlongitude_'+ (ii+1) +'" value="'+ storesData[ii].longitude +'">'+
									'<input type="hidden" id="markerbrandtype_'+ (ii+1) +'" value="'+ brandType +'">'+
								'</div>'  +
									'</a>' + 
									'</li>';	
					$('#store-list').append(storeList);
				}
				if(geoInfoData) {
					$("#maxLat").val(geoInfoData.maxLatitude);
					$("#minLat").val(geoInfoData.minLatitude);
					$("#maxLong").val(geoInfoData.maxLongitude);
					$("#minLong").val(geoInfoData.minLongitude);
					$("#store-list li:eq(0)>a").addClass("is-active");
				}
			}
			if(totalStoreCount === 0) {
				$("#store_list_nullYn").val("Y");
				$("#stroelength").val("0");
			}else{
				$("#store_list_nullYn").val("N");
				$("#stroelength").val(totalStoreCount);
			}							
		}
		
		//hatch offlinestore data
		var getHatchOffStoreList = function(jsonData) {
			$('#store-list').html("");
			var totalStoreCount = jsonData.locations.length;
			var storesData = jsonData.locations;
			var geoInfoData = jsonData.geoInfo;
			
			$(".where-to-buy__container .where-to-buy__result-count").text(totalStoreCount);
			if(totalStoreCount !== 0) {
				for (var ii = 0; ii < totalStoreCount; ii++) {
					var initNum = 0;
					var hatchDistance = "";
					if(initData.distanceUnitValue == "Km"){
						hatchDistance = (parseFloat(storesData[ii].distance)/1000).toFixed(2);
					}else if(initData.distanceUnitValue == "Mile"){
						hatchDistance = (parseFloat(storesData[ii].distance)/1609.344).toFixed(2);
					}
					
					var storeList = "";
				
					storeList += 
						'<li class="where-to-buy__result-item" role="listitem">' + 
							'<a href="javascript:;" class="where-to-buy__result-content ';
							var storeClass = ""; 
							var brandType ="";
							var storeName = "";
							if(storesData[ii].name != null && storesData[ii].name != ""){
								storeName = storesData[ii].name;
							}					
								if(storesData[ii].storeTypes == '1_ses') {
									storeClass = "type--experience";
									brandType = "E";
								}else if(storesData[ii].storeTypes == '2_sbs') {
									storeClass = "type--brand";
									brandType = "B";
								}else if(storesData[ii].storeTypes == '3_retailer_store' || storesData[ii].storeTypes == null) {
									storeClass = "type--other";
									brandType = "O";
								}
					storeList += storeClass + '" role="button"' + 
					            'an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-detail view" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+'">' +
								'<div class="where-to-buy__result-info" data-store-id="'+ storesData[ii].searchableId +'">' + 
									'<p class="where-to-buy__result-type">';
					/* SVG Icon 추가 */
					storeList += '<svg class="icon icon--store-experience" focusable="false" aria-hidden="true">' +
								'<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#pin-experience-i"></use>' +
								'</svg>' +
								'<svg class="icon icon--store-brand" focusable="false" aria-hidden="true">' +
								'<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#pin-brand-i"></use>' +
								'</svg>' +
								'<svg class="icon icon--store" focusable="false" aria-hidden="true">' +
								'<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#pin-other-i"></use>' +
								'</svg>';
									if(brandType === "E") {
										storeList += Granite.I18n.get("Samsung Experience Stores");
									}else if(brandType === "B") {
										storeList += Granite.I18n.get("Samsung Brand Store");
									}else if(brandType === "O") {
										storeList += Granite.I18n.get("Other Store");
									}
					/* SVG Icon 추가 */
					storeList += '<svg class="icon icon--next" focusable="false" aria-hidden="true">' +
		                        '<use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#next-bold"></use>' +
		                        '</svg>';
					storeList += '</p>';
					
					storeList += '<p class="where-to-buy__result-name">'+ storeName;
									if (storesData[ii].locality != null && storesData[ii].locality != "") {
										storeList += 
										'<span class="where-to-buy__locator__store-city">'+ ' '+storesData[ii].locality +'</span></p>';
									}																											
					storeList += '<p class="where-to-buy__result-distance">'+ hatchDistance + initData.distanceUnitValue +'</p>' +
									'<input type="hidden" class="lat" value="'+ storesData[ii].coordinates.latitude +'">' +
									'<input type="hidden" class="long" value="'+ storesData[ii].coordinates.longitude +'">' + 
									'<input type="hidden" class="storeId" value="'+ storesData[ii].searchableId +'">' + 
									'<input type="hidden" class="storeindex" value="'+ (ii+1) +'">' + 
									'<input type="hidden" id="markerlatitude_'+ (ii+1) +'" value="'+ storesData[ii].coordinates.latitude +'">'+
									'<input type="hidden" id="markerlongitude_'+ (ii+1) +'" value="'+ storesData[ii].coordinates.longitude +'">'+	
									'<input type="hidden" id="markerbrandtype_'+ (ii+1) +'" value="'+ brandType +'">'+
								'</div>'  +
									'</a>' + 
									'</li>';	
					$('#store-list').append(storeList);
				}
			}
			if(totalStoreCount === 0) {
				$("#store_list_nullYn").val("Y");
				$("#stroelength").val("0");
			}else{
				$("#store_list_nullYn").val("N");
				$("#stroelength").val(totalStoreCount);
			}							
		}
		
		//offline store map 

	    var setMapData = function(infowindow, target, offStoreMap, markerlist) {
	    	var hatchOffstoreUse = $("#hatchOffstoreUse").val();
            var currentIndex = target.attr("labelContent");
            var currentStoreId = $("#store-list li:eq("+(currentIndex-1)+") .storeId").val();		                  
            var offDeatilSearchDomain = $("#searchApiDomain").val() + '/' + $("#apiStageInfo").val() + '/b2c/storelocator/detail';
            
            var siteCd = $("#siteCode").val();
			var distanceUnit = $("#offstoreDistanceUnit").val();
			var latitude = $("#offstoreLatitude").val();
            var longitude = $("#offstoreLongitude").val();
			var param = {
				"siteCode":siteCd,
				"latitude":latitude,
        		"longitude":longitude,
        		"distanceUnit":distanceUnit,
        		"storeId":currentStoreId
        		}
			
			if(hatchOffstoreUse != 'Y'){
				$.ajax({
					type: "GET",						
					url: offDeatilSearchDomain,
					data : param,
					async:false,
					success: function (data) {
						var storeData = data.response.resultData.storeDetail; 
						var storeName = storeData.name;
						if(storeData.cityName != null) {
							storeName +=  ' ' + storeData.cityName;
						}
						var context = "";
	                    context += '<div class="where-to-buy__map-tooltip">'+
	                    				'<p class="where-to-buy__map-store-name">'+
	                    					'<button type="button" class="store-arr2" an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-detail view" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+'">'+storeName;
	                    		context += 	'</button>' + 
	                    				'</p>';
	                    		if((storeData.phone != null && storeData.phone !== "") || (storeData.email != null && storeData.email !== "")) {						                    				                    				
	                    context += 		'<ul class="where-to-buy__map-info-list">';
	                    			if (storeData.phone != null && storeData.phone !== "") {
	                    				context +=
	                    					'<li class="where-to-buy__map-info-item">'+
                								'<a href="tel:'+storeData.phone+'" class="where-to-buy__map-info-link icon-tel" title="Call '+storeData.phone+'"' +
                								'an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+':call">'+storeData.phone+
                								  /* SVG Icon 추가 */
                								  '<svg class="icon icon--tel" focusable="false" aria-hidden="true"><use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#call-bold"></use></svg>' +
                								'</a>'+
                							'</li>';
									}
	                    			if (storeData.email != null && storeData.email !== "") {
	                    				context +=
	                    					'<li class="where-to-buy__map-info-item">'+
                								'<a href="mailto:'+storeData.email+'" class="where-to-buy__map-info-link icon-mail" title="Mail to '+storeData.email+'"' +
                								'an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+':email">'+storeData.email+'</a>'+
                							'</li>';
									}
	                    context += 		'</ul>';
	                    		}
	                    context += 		'<input class="ly_brandType" value="'+storeData.brandType+'" type="hidden">'+
	                    				'<input class="lat" type="hidden" value="'+storeData.latitude+'"/>'+
	                    				'<input class="long" type="hidden" value="'+storeData.longitude+'"/>'+
	                    				'<input id="detail-index" type="hidden" value="'+currentIndex+'">'+
	                    				'<input id="currentStoreId" type="hidden" value="'+currentStoreId+'">'+
	                    			'</div>';						                    						                    					
	                    $("#tv-experience-layer").html(context); 
	                    infowindow.setContent( ""+ context ) ;
	                    infowindow.open(offStoreMap, markerlist);		
	                    $('.where-to-buy__result-content').removeClass('is-active');
	                    $('#store-list li:eq('+(currentIndex-1)+') .where-to-buy__result-content').addClass('is-active');
	                    $(".where-to-buy__result-content").eq(currentIndex-1).focus();
					},
					error: function(XMLHttpRequest, textStatus, errorThrown) {
					}
				});	
			}else{							
				var hatchOffstoreUrl = $("#hatchOffstoreUrl").val();
				var hatchOffstoreBrandID =  $("#hatchOffstoreBrandID").val();
				var hatchOffstoreRegion = $("#hatchOffstoreRegion").val();
				var hatchOffstoreLang = $("#hatchOffstoreLang").val();
				var offHatchDomain = hatchOffstoreUrl + hatchOffstoreBrandID + "/geo/list";			
				var offHatchnRadius = $("button.where-to-buy__distance-button.is-selected").attr("data-value");
				if(initData.distanceUnitValue == "Mile"){
					offHatchnRadius = offHatchnRadius*1609.344;
				}else{
					offHatchnRadius = offHatchnRadius*1000;
				}			
				var modelCode = "";
				if ($("#selectModelCode").val() == null || $("#selectModelCode").val() === undefined || $("#selectModelCode").val() === "" ) {
					modelCode = $("#current_model_code").val();
				}else{
					modelCode = $("#selectModelCode").val();
				}
				var hatchParam = "";
				if(hatchOffstoreLang != "" && hatchOffstoreLang != null){
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"segment": hatchOffstoreLang,
						"filters":[
							{
							  "columnName": "searchableId",
							  "operation": "equal",
							  "value": [currentStoreId]
							  }
						]
					};
				}else{
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"filters":[
							{
							"columnName": "searchableId",
							  "operation": "equal",
							  "value": [currentStoreId]
							  }
						]
					};
				}
				
				$.ajax({
					headers: {
						"Content-Type": "application/json",
						//"Cookie" : "icl_opt_out=true"
					},
					type: "POST",						
					url: offHatchDomain,
					data: JSON.stringify(hatchParam),
					cache: true,
					timeout: 20000,
					success: function (data) {
						var storeData = data.locations[0];	
						var storeName = "";
						if(storeData.name != null && storeData.name != ""){
							storeName = storeData.name;
						}					
						if(storeData.locality != null && storeData.locality != "") {
							storeName	+= ' ' + storeData.locality;	
						}
						var brandType ="";
						if(storeData.storeTypes == '1_ses') {
							brandType = "E";
						}else if(storeData.storeTypes == '2_sbs') {
							brandType = "B";
						}else{
							brandType = "O";
						}
						
						var context = "";
	                    context += '<div class="where-to-buy__map-tooltip">'+
	                    				'<p class="where-to-buy__map-store-name">'+
	                    					'<button type="button" class="store-arr2" an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-detail view" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+'">'+storeName;
	                    		context += 	'</button>' + 
	                    				'</p>';
	                    		if((storeData.telephone != null && storeData.telephone !== "") || (storeData.email != null && storeData.email !== "")) {						                    				                    				
	                    context += 		'<ul class="where-to-buy__map-info-list">';
	                    			if (storeData.telephone != null && storeData.telephone !== "") {
	                    				context +=
	                    					'<li class="where-to-buy__map-info-item">'+
                								'<a href="tel:'+storeData.telephone+'" class="where-to-buy__map-info-link icon-tel" title="Call '+storeData.telephone+'"' +
                								'an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+':call">'+storeData.telephone+
                								  
                								  '<svg class="icon icon--tel" focusable="false" aria-hidden="true"><use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#call-bold"></use></svg>' +
                								'</a>'+
                							'</li>';
									}
	                    			if (storeData.email != null && storeData.email !== "") {
	                    				context +=
	                    					'<li class="where-to-buy__map-info-item">'+
                								'<a href="mailto:'+storeData.email+'" class="where-to-buy__map-info-link icon-mail" title="Mail to '+storeData.email+'"' +
                								'an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeName+':email">'+storeData.email+'</a>'+
                							'</li>';
									}
	                    context += 		'</ul>';
	                    		}
	                    context += 		'<input class="ly_brandType" value="'+brandType+'" type="hidden">'+
	                    				'<input class="lat" type="hidden" value="'+storeData.coordinates.latitude+'"/>'+
	                    				'<input class="long" type="hidden" value="'+storeData.coordinates.longitude+'"/>'+
	                    				'<input id="detail-index" type="hidden" value="'+currentIndex+'">'+
	                    				'<input id="currentStoreId" type="hidden" value="'+currentStoreId+'">'+
	                    			'</div>';						                    						                    					
	                    $("#tv-experience-layer").html(context); 
	                    infowindow.setContent( ""+ context ) ;
	                    infowindow.open(offStoreMap, markerlist);		
	                    $('.where-to-buy__result-content').removeClass('is-active');
	                    $('#store-list li:eq('+(currentIndex-1)+') .where-to-buy__result-content').addClass('is-active');
	                    $(".where-to-buy__result-content").eq(currentIndex-1).focus();
					},
					error: function(XMLHttpRequest, textStatus, errorThrown) {
					}
				});
			}
	    }
	    
		var markers = [];
	    var initMap = function (latitude, longitude, gpsNRadius) {			    	
			var defaultLocation = new google.maps.LatLng(latitude, longitude);
			var offStoreMap;			    
	        var nRadius;
	        var nRadiusTemp = $("button.where-to-buy__distance-button.is-selected").attr("data-value");
	        if(nRadiusTemp) {
	        	nRadius = nRadiusTemp;
	        } else {
	        	if(gpsNRadius === 'Y') {
	        		nRadius = 5;		        	
			    } else {
			    	nRadius = 10;
			    }	
	        }
	        
	        var zoomSet = 15;

	        if(parseInt(nRadius) <= 1) {
	        	zoomSet = 15;
	        }else if(parseInt(nRadius) > 1 && parseInt(nRadius) <= 2) {
	        	zoomSet = 14;
	        }else if(parseInt(nRadius) > 2 && parseInt(nRadius) <= 5) {
	        	zoomSet = 13;
	        }else if(parseInt(nRadius) > 5 && parseInt(nRadius) <= 10) {
	        	zoomSet = 12;
	        }else if(parseInt(nRadius) > 10 && parseInt(nRadius) <= 25) {
	        	zoomSet = 11;
	        }else if (parseInt(nRadius) > 25 && parseInt(nRadius) <= 50) {
	        	zoomSet = 10;
	        }else if (parseInt(nRadius) > 50) {
	        	zoomSet = 9;
	        }
	        
	        var controlPosition = rtlValue === "Y" ? google.maps.ControlPosition.LEFT_TOP : google.maps.ControlPosition.RIGHT_TOP;
	        
	        var mapOptions = {
	        		scaleControl: true,
	                scaleControlOptions: {
	                    position: google.maps.ControlPosition.BOTTOM_CENTER
	                },
	                mapTypeControl: false,
	                panControl: true,
	                panControlOptions : {
	                    position: controlPosition
	                },
	                zoomControl: true,
	                zoomControlOptions: {
	                    style: google.maps.ZoomControlStyle.SMALL,
	                    position: controlPosition
	                },
	                streetViewControl: true,
	                streetViewControlOptions: {
	                    position: controlPosition
	                },
	              center: defaultLocation,		             
	              zoom: zoomSet,		             
	              mapTypeId: google.maps.MapTypeId.ROADMAP
	            };
	        			        
	        offStoreMap = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
	        
	        var gpsMarker = "";
	        var circle = "";
	        if(getOffStoreCookie("newwtb_offstore") == 'true'){
	        	gpsMarker = new google.maps.Marker({
	        		position: defaultLocation,
	                map: offStoreMap,
	                icon : {
                        	scaledSize: new google.maps.Size(50, 50),
	                		origin: new google.maps.Point(0,0), 
	                        anchor: new google.maps.Point(0,0)
	                     }
	                });    
	                 
	        	circle = new google.maps.Circle({
	        		map: null
	        	});
	                 
	        	circle = new google.maps.Circle({
	        		map: offStoreMap,
	        		center : defaultLocation,
	        		radius: 5000, 
	        		fillColor: '#AA0000', 
	        		strokeColor :'#AA0000', 
	        		strokeOpacity:0 
	        	});

	        }
	        
	        var infowindow = new google.maps.InfoWindow();
	        
	        $('#store-list').children('li').each(function(index) {
	        	var indexData = index+1;
	    	    var markerlatitude = Number($("#markerlatitude_"+indexData).val());
	    	    var markerlongitude = Number($("#markerlongitude_"+indexData).val());
	            var marklistLocation = new google.maps.LatLng(markerlatitude, markerlongitude);
	            
	            var labelNum = 0;
	            labelNum += indexData;
	            
	    	    var markerlist;
	    	    
	    	    var imageIconUrl = "";
	    	    var markerType = $("#markerbrandtype_"+indexData).val();
	    	  
	    	    if(markerType === "E") {
	    	    	imageIconUrl = "/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/icon-pin-experience.svg";
	    	    }else if(markerType === "B") {
	    	    	imageIconUrl = "/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/icon-pin-brand.svg";
	    	    }else if(markerType === "O") {
	    	    	imageIconUrl = "/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/icon-pin-other.svg";
	    	    }		    	   
	    	    
	    	    markerlist = new google.maps.Marker({
	    			position: marklistLocation,
	    			labelContent: ''+labelNum,
	    			map: offStoreMap,
	    			icon : {
	    		    	    url: imageIconUrl, 
	    		    	    origin: new google.maps.Point(0,0), 
	    		    	    anchor: new google.maps.Point(0,0), 
	    		    	    scaledSize: new google.maps.Size(60, 60)
    	    	    }
	    		});
	    	    		  	    
	    	    markers[labelNum] = markerlist;
	    	    
	    	    var	openWindowFn = function() {
                    if (infowindow) {
                        infowindow.close();
                    }
                    setMapData(infowindow, $(this), offStoreMap, markerlist);                    		                    
            	}
	    	    markerlist.addListener('click', function() {		    	    	
	    	    	offStoreMap.setCenter(markerlist.getPosition());
	            });
	            google.maps.event.clearListeners(markerlist, 'click');
	            google.maps.event.addListener(markerlist, 'click', openWindowFn);				          			            
	        });	
	        
	        $('.where-to-buy__container .where-to-buy__result-content').on('click', function () {	
            	var indexValue = $(this).find(".storeindex").val();
	            google.maps.event.trigger(markers[indexValue], 'click');
	        });		       
	    }	
	    

		//call offlines store v2 api(default)
		var getStorelocatorDefault = function() {
			var hatchOffstoreUse = $("#hatchOffstoreUse").val();
			var offSearchDomain = $("#searchApiDomain").val() + '/' + $("#apiStageInfo").val() + '/b2c/storelocator/list';
			var latitude = $("#offstoreLatitude").val();
			var longitude = $("#offstoreLongitude").val();
			var siteCd = $("#siteCode").val();				
			var distanceUnit = $("#offstoreDistanceUnit").val();
			var nRadius ='';
			var nRadiusTemp = $(".where-to-buy__container button.where-to-buy__distance-button.is-selected").attr("data-value");
			var distanceText ='';
			var selectedHtml ='';
			if(nRadiusTemp != null) {
	        	nRadius = nRadiusTemp;
			}else if(siteCd == 'ae' || siteCd == 'ae_ar'){
				nRadius = 1;
				$(".where-to-buy__container button.where-to-buy__distance-button[data-value='1']").addClass("is-selected");
				distanceText = $(".where-to-buy__container button.where-to-buy__distance-button[data-value='1']").text();
				selectedHtml = distanceText+'<span class="hidden">selected</span>';
				$(".where-to-buy__container button.where-to-buy__distance-button[data-value='1']").html(selectedHtml);
			}else{
				nRadius = 10;
				$(".where-to-buy__container button.where-to-buy__distance-button[data-value='10']").addClass("is-selected");
                distanceText = $(".where-to-buy__container button.where-to-buy__distance-button[data-value='10']").text();
				selectedHtml = distanceText+'<span class="hidden">selected</span>';
				$(".where-to-buy__container button.where-to-buy__distance-button[data-value='10']").html(selectedHtml);
			}	
			
			var modelCode = "";
			if ($("#selectModelCode").val() == null || $("#selectModelCode").val() === undefined || $("#selectModelCode").val() === "" ) {
				modelCode = $("#current_model_code").val();
			}else{
				modelCode = $("#selectModelCode").val();
			}
			var iaCode = $("#categoryInfo").val();
			
			var param = {
        			"siteCode":siteCd,
        			"latitude":latitude,
        			"longitude":longitude,
        			"distanceUnit":distanceUnit,
        			"nRadius":nRadius,
        			"modelCode":modelCode,
        			"iaCode" : iaCode
        		};
			
			if(hatchOffstoreUse == 'Y'){
				var hatchOffstoreUrl = $("#hatchOffstoreUrl").val();
				var hatchOffstoreBrandID =  $("#hatchOffstoreBrandID").val();
				var hatchOffstoreRegion = $("#hatchOffstoreRegion").val();
				var hatchOffstoreLang = $("#hatchOffstoreLang").val();
				var offHatchDomain = hatchOffstoreUrl + hatchOffstoreBrandID + "/geo/list";
				var offHatchnRadius = "";
				var offHatchIacode = [];
				var offHatchTypecode = iaCode.substr(0,2) + "000000";
				var offHatchSubTypecode = iaCode.substr(0,4) + "0000";						
				offHatchIacode.push(offHatchTypecode);
				offHatchIacode.push(offHatchSubTypecode);	
				
				if(initData.distanceUnitValue == "Mile"){
					offHatchnRadius = nRadius*1609.344;
				}else{
					offHatchnRadius = nRadius*1000;
				}
				var hatchParam = "";
				if(hatchOffstoreLang != "" && hatchOffstoreLang != null){
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"segment": hatchOffstoreLang,
						"filters":[
							{
							 "columnName": "productTags",
							 "operation": "equal",
							 "value": offHatchIacode
							}
						]
					};
				}else{
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"filters":[
							{
							 "columnName": "productTags",
							 "operation": "equal",
							 "value": offHatchIacode
							}
						]
					};
				}
				$.ajax({
					headers: {
						"Content-Type": "application/json",
						//"Cookie" : "icl_opt_out=true"
					},
					type: "POST",						
					url: offHatchDomain,
					data: JSON.stringify(hatchParam),
					cache: true,
					timeout: 20000,
					success: function (data) {			
						getHatchOffStoreList(data);	
						initMap(latitude, longitude, "N");
					},
					error: function(XMLHttpRequest, textStatus, errorThrown) {
					},
					complete: function() {
						wtb.bak.reInit();
					}
				});
			}else{
				$.ajax({						
					type: "GET",						
					url: offSearchDomain,
        			data : param,
        			async:false,
        			success: function (data) {														
						getOffStoreList(data.response.resultData);	
						initMap(latitude, longitude, "N");
        			},
        			error: function(XMLHttpRequest, textStatus, errorThrown) {
        			},
        			complete: function() {
        				wtb.bak.reInit();
				}
			});
			}
		}
		

		//call offline store v2 api		
		var getStorelocator = function(latitude, longitude, gpsNRadius) {
			var hatchOffstoreUse = $("#hatchOffstoreUse").val();
			var offSearchDomain = $("#searchApiDomain").val() + '/' + $("#apiStageInfo").val() + '/b2c/storelocator/list';
			var siteCd = $("#siteCode").val();				
			var distanceUnit = $("#offstoreDistanceUnit").val();
			var nRadius ='';
			var nRadiusTemp = $("button.where-to-buy__distance-button.is-selected").attr("data-value");
			var distanceText ='';
			var selectedHtml ='';
			if(nRadiusTemp) {
	        	nRadius = nRadiusTemp;
	        }else {
	        	if(gpsNRadius === 'Y' && siteCd != 'ae') {
	        		nRadius = 5;
					$(".where-to-buy__container button.where-to-buy__distance-button[data-value='5']").addClass("is-selected");
					distanceText = $(".where-to-buy__container button.where-to-buy__distance-button[data-value='5']").text();
					selectedHtml = distanceText+'<span class="hidden">selected</span>';
					$(".where-to-buy__container button.where-to-buy__distance-button[data-value='5']").html(selectedHtml);
	        	}else if(siteCd == 'ae' || siteCd == 'ae_ar'){
					nRadius = 1;
					$(".where-to-buy__container button.where-to-buy__distance-button[data-value='1']").addClass("is-selected");
					distanceText = $(".where-to-buy__container button.where-to-buy__distance-button[data-value='1']").text();
					selectedHtml = distanceText+'<span class="hidden">selected</span>';
					$(".where-to-buy__container button.where-to-buy__distance-button[data-value='1']").html(selectedHtml);
				}else{
	        		nRadius = 10;
					$(".where-to-buy__container button.where-to-buy__distance-button[data-value='10']").addClass("is-selected");
					distanceText = $(".where-to-buy__container button.where-to-buy__distance-button[data-value='10']").text();
					selectedHtml = distanceText+'<span class="hidden">selected</span>';
					$(".where-to-buy__container button.where-to-buy__distance-button[data-value='10']").html(selectedHtml);
	        	}	
	        }
			
			var modelCode = "";
			if ($("#selectModelCode").val() == null || $("#selectModelCode").val() === undefined || $("#selectModelCode").val() === "" ) {
				modelCode = $("#current_model_code").val();
			}else{
				modelCode = $("#selectModelCode").val();
			}				
			var iaCode = $("#categoryInfo").val();
			
			var param = {
        			"siteCode":siteCd,
        			"latitude":latitude,
        			"longitude":longitude,
        			"distanceUnit":distanceUnit,
        			"nRadius":nRadius,
        			"modelCode":modelCode,
        			"iaCode" : iaCode
        		};
							
			if(hatchOffstoreUse == 'Y'){
				var hatchOffstoreUrl = $("#hatchOffstoreUrl").val();
				var hatchOffstoreBrandID =  $("#hatchOffstoreBrandID").val();
				var hatchOffstoreRegion = $("#hatchOffstoreRegion").val();
				var hatchOffstoreLang = $("#hatchOffstoreLang").val();
				var offHatchDomain = hatchOffstoreUrl + hatchOffstoreBrandID + "/geo/list";
				var offHatchIacode = [];
				var offHatchTypecode = iaCode.substr(0,2) + "000000";		
				var offHatchSubTypecode = iaCode.substr(0,4) + "0000";	
				var offHatchnRadius = nRadius*1000; 
				var offHatchnRadius = "";
				if(initData.distanceUnitValue == "Mile"){
					offHatchnRadius = nRadius*1609.344;
				}else{
					offHatchnRadius = nRadius*1000;
				}
							
				offHatchIacode.push(offHatchTypecode);
				offHatchIacode.push(offHatchSubTypecode);	
				
				var hatchParam = "";
				if(hatchOffstoreLang != "" && hatchOffstoreLang != null){
					hatchParam = {
							"countryCode":hatchOffstoreRegion,
							"geoCenterArea": {
								"center": {
									"latitude":latitude,
									"longitude":longitude
								},
								"distance":offHatchnRadius
							},
							"product":modelCode,
							"segment": hatchOffstoreLang,
							"filters":[
								{
								 "columnName": "productTags",
								 "operation": "equal",
								 "value": offHatchIacode
								}
							]
						};
				}else{
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"filters":[
							{
							 "columnName": "productTags",					 
							 "operation": "equal",
							 "value": offHatchIacode
							}
						]
					};
				}
				
					
				$.ajax({
					headers: {
						"Content-Type": "application/json",
						//"Cookie" : "icl_opt_out=true"
					},
					type: "POST",						
					url: offHatchDomain,
					data: JSON.stringify(hatchParam),
					cache: true,
					timeout: 20000,
					success: function (data) {
						getHatchOffStoreList(data);	
						initMap(latitude, longitude, gpsNRadius);	
					},
					error: function(XMLHttpRequest, textStatus, errorThrown) {
					},
					complete: function() {
						wtb.bak.reInit();
					}
				});
			}else{
				$.ajax({
					type: "GET",						
					url: offSearchDomain,
					data : param,
					async:false,
					success: function (data) {													
						getOffStoreList(data.response.resultData);
						initMap(latitude, longitude, gpsNRadius);	
					},
					error: function(XMLHttpRequest, textStatus, errorThrown) {
					},
					complete: function() {
						wtb.bak.reInit();
					}
				});
			}
		}
		
		
		//offline store get gps info
		var setGeoLocation = function(jsonData) {
			
			function handleGeolocationError() {
			//Error
				console.warn('ERROR');
			}
			
			function geolocateByIP() {
				$.getJSON('http://freegeoip.net/json/?callback=?').then(handleGeolocationResult, handleGeolocationError);
				return;
			}
			
			function handleGeolocationDenyResult(err) {
				//console.warn('ERROR(' + err.code + '): ' + err.message);
				setOffStoreCookie("newwtb_offstore","false",5);
				getStorelocatorDefault();
			}				
	
			function handleGeolocationResult(location) {
				//Modernizr.geolocation might come true still when the user rejects the geolocation, so we are better off using hasOwnProperty.
				var lat = typeof location.coords !== 'undefined' ? location.coords.latitude : location.latitude,
					lng = typeof location.coords !== 'undefined' ? location.coords.longitude : location.longitude;
				
				if (!lat || !lng || isNaN(lat) || isNaN(lng)) {
					var latitude = $("#offstoreLatitude").val();
					var longitude = $("#offstoreLongitude").val();
					getStorelocator(latitude,longitude, "N");
				} else {
					$("#offstoreLatitude").val(lat);
					$("#offstoreLongitude").val(lng);
					getStorelocator(lat, lng, "Y");
				}
			}
			
			function geolocateUser(coarseGrainedCallback) {
			
				if(navigator.geolocation) { // geolocation이 지원하는 브라우져
					navigator.geolocation.getCurrentPosition(handleGeolocationResult, handleGeolocationDenyResult);
					return;
				} else if (coarseGrainedCallback) { // geolocation이 지원하지않는 브라우져
					geolocateByIP();
				}
			}
			
			geolocateUser(true);
		}
		
		
		
		//offline store check gps cookie
		var offStoreCookieCheck = function() {
			var cookieCheck ="";
			if(getOffStoreCookie("newwtb_offstore") != null && getOffStoreCookie("newwtb_offstore") !== '') {
				cookieCheck = getOffStoreCookie("newwtb_offstore");
				if(cookieCheck === 'true') {
					setGeoLocation();
				}else{
					var latitude = $("#offstoreLatitude").val();
					var longitude = $("#offstoreLongitude").val();
					getStorelocator(latitude,longitude, "N");
				}
			}else{
				getStorelocatorDefault();
				layerOpen('.where-to-buy__container .where-to-buy__layer--gbs');
			}
		};
		
		var getWtbData = function(wtbPath) {
			
			var siteCode = $("#siteCode").val();

			var drawLocatorBtn = function() {
				//uk, it, fr, za, in만  Search Store 영역 노출
				if(siteCode === 'uk' || siteCode === 'it' || siteCode === 'fr' || siteCode === 'za' || siteCode === 'in' || siteCode === 'tr') {
					$(".where-to-buy__container .where-to-buy__search").show();
				}
			};
			var drawMoreBtn = function() {
				var onlinstore = $(".where-to-buy__store");
				var onlinstorelistlength = $(".where-to-buy__store-list a.where-to-buy__store-link").length;
				if(onlinstore.hasClass("where-to-buy__column--4")) {
					if(onlinstorelistlength > 12) {
						$(".where-to-buy__container .where-to-buy__store-more-cta").show();
					}
				}else{
					if(onlinstorelistlength > 6) {
						$(".where-to-buy__container .where-to-buy__store-more-cta").show();
					}
				}
			};
			var drawReviews = function() {
				if("Y" === $("#bvFlag").val() || "Y" === $("#bvRTLFlag").val() || "Y" === $("#aplautYn").val()) {
					var ratings = 0;
					var reviewCount = 0;
					if($("#ratingsValue").val()) {
						ratings = parseFloat($("#ratingsValue").val()).toFixed(1);
					}
					if($("#reviewCountValue").val()) {
						reviewCount = parseFloat($("#reviewCountValue").val() || "0");
					}
					
					var ratingsHtml = "";
					var ratingPointHtml = "";
					var reviewCountHtml = "";
					var fullStarRatings = Math.floor(ratings);
					var starWidth = parseInt((ratings-fullStarRatings)*100);
					
					for(var k=0; k<fullStarRatings; k++) {
						ratingsHtml += '<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 100%;"></span></span>';
					}			
					if(fullStarRatings<5) {
						ratingsHtml += '<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: '+starWidth+'%;"></span></span>';
					}
					for(var l = 4; l > fullStarRatings; l--) {
						ratingsHtml += '<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
					}
					ratingPointHtml += '<span class="hidden">Product Ratings : </span><span>'+ratings+'</span>';
					reviewCountHtml += '(<span class="hidden">Number of Ratings :</span><span>'+reviewCount+'</span>)';
					
					$(".where-to-buy__container .where-to-buy__product-rating .rating__star-list").html(ratingsHtml);
					$(".where-to-buy__container .where-to-buy__product-rating .rating__point").html(ratingPointHtml);
					$(".where-to-buy__container .where-to-buy__product-rating .rating__review-count").html(reviewCountHtml);	
					
					if(ratings === 0 && reviewCount === 0) {
						$(".where-to-buy__container .where-to-buy__product-info .where-to-buy__product-rating .rating").addClass("rating--empty");
					}
				}
			};
			
			$.ajax({
				type: "GET",						
				url: wtbPath,
				async:false,
				success: function (data) {
					$(".where-to-buy").html(data);
					$(".where-to-buy__container.layer-popup [an-tr]").each(function(){
					    $(this).attr("an-tr", $(this).attr("an-tr").replace("{{pageTrack}}", digitalData.page.pageInfo.pageTrack));
					});
					
					initData.modelCodeValue = $("#wtbModelCode").val();
					var distanceUnit = $("#offstoreDistanceUnit").val();
					if(distanceUnit === "3959") {
						initData.distanceUnitValue = "Mile";
					}else{
						initData.distanceUnitValue = "Km";
					}
					
					var etaleYn = $("#etailinUrlYn").val();
					var onlineStoreUse = $("#onlineUse").val();
					var offlineStoreUse = $("#inStoreUse").val();
					var instoreIAFlag = $("#instoreIAFlag").val(); //N일 때 offlinstore 미사용 카테고리임 default는 Y
					var onlineRetailorsSize = $("#wtbOnlineRetailorsSize").val();
					var buyonlineDisplayYn = $("#wtbOnlineStoreDisplayYn").val(); 	
					//재고에 따른 onlineStore 노출 기능 사용 시 재고가 있는 경우는 onlinestore 미노출
					var stockStatusText = initData.apiChangeStockStatus;
					var wtbStockStatus = "N";	
					var onlineDisplayByStock = "Y"
					
					if(stockStatusText != null && stockStatusText != 'null'){
						stockStatusText = stockStatusText.replace(/\s/gi, "").toUpperCase();
						if(stockStatusText == "INSTOCK" || stockStatusText == "LOWSTOCK" || stockStatusText == "PREORDER"){
							wtbStockStatus = "Y";
						}
					}
					
					if(initData.useWtbStockFunction == 'Y' && wtbStockStatus == 'Y'){
						onlineDisplayByStock = 'N';
					}
					
					if(siteCode === 'cz' || siteCode === 'sk' ) {
						$("#whereToBuyLocator").addClass("is-selected");			
						$("#whereToBuyLocator").attr("aria-selected", true);
						$(".where-to-buy__locator").addClass("is-active");
						
						if(((onlineStoreUse === 'N' || !onlineRetailorsSize || onlineRetailorsSize === "0") && etaleYn !== 'Y') || buyonlineDisplayYn === 'N' || onlineDisplayByStock === 'N') {
							$("#whereToBuyOnline").parent().remove();
							$("#whereToBuyOnline").attr("aria-selected", false);
							$(".where-to-buy__online").remove();
							$("#whereToBuyOnline").removeClass("is-selected");
						}
						offStoreCookieCheck();
						
					}else{
						if(offlineStoreUse === 'Y' && instoreIAFlag === 'Y') {
							if(((onlineStoreUse === 'N' || !onlineRetailorsSize || onlineRetailorsSize === "0") && etaleYn !== 'Y') || buyonlineDisplayYn === 'N' || onlineDisplayByStock === 'N') {
								$("#whereToBuyOnline").parent().remove();
								$("#whereToBuyLocator").addClass("is-selected");						
								$("#whereToBuyLocator").attr("aria-selected", true);
								$(".where-to-buy__online").remove();
								$(".where-to-buy__locator").addClass("is-active");
							}
							if(siteCode !== 'cn') {
								offStoreCookieCheck();
							}
						}else if(offlineStoreUse !== 'Y' || instoreIAFlag === 'N') { 					
							$("#whereToBuyLocator").parent().remove();
							if(onlineDisplayByStock === 'N'){
								var outofstockText = "<p>"+Granite.I18n.get('We are sorry, but this product is currently not available from any of our retail partners.') + "</p>";
								$(".where-to-buy__store").html(outofstockText);
							}
						}
					}			
					//html 코드 포함 케이스가 있어서 js에서 처리하는걸로 수정
					var displayName = $("#wtbDisplayName").val();
					$(".where-to-buy__container .where-to-buy__product-name").html(displayName);
					
					drawLocatorBtn();
					drawMoreBtn();
					drawReviews();
				},
				error: function(XMLHttpRequest, textStatus, errorThrown) {
				},
				complete: function() {
					wtb.bak.reInit();
				}
			});
		}
		
		//offline store detail 
		var getOffStoreDetail = function(jsonData) {
			var storeDetailData = jsonData;		
			var storeDetailHeadline = "";
			var storeDetailType = "";
			var storeDetail = "";
			var storeLat = storeDetailData.latitude;
			var storeLog = storeDetailData.longitude;
			var brandTypeValue = "";
			var googleMapUrl = "https://www.google.com/maps/search/?api=1&query="+storeLat+","+storeLog;
								
			storeDetailHeadline += storeDetailData.name;
			if(storeDetailData.cityName != null) {
				storeDetailHeadline	+= ' ' + storeDetailData.cityName;	
			}
			$(".where-to-buy__container .where-to-buy__detail-headline").text(storeDetailHeadline);
			
			
			if(storeDetailData.brandTypeCode === 'E') {
				brandTypeValue = Granite.I18n.get("Samsung Experience Stores");
			}else if(storeDetailData.brandTypeCode === 'B') {
				brandTypeValue = Granite.I18n.get("Samsung Brand Store");
			}else if(storeDetailData.brandTypeCode === 'O') {
				brandTypeValue = Granite.I18n.get("Other Store");
			}
			
			storeDetailType +=
				brandTypeValue + 
				'<span class="where-to-buy__detail-distance">'+ (storeDetailData.distance+initData.distanceUnitValue) +'</span>'; 			
			$(".where-to-buy__container .where-to-buy__detail-type").html(storeDetailType);		
			
			storeDetail +=
				'<li class="where-to-buy__detail-info-item" role="listitem"><a href="'+googleMapUrl+'" class="where-to-buy__detail-info-link icon-location" an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeDetailHeadline+':address" aria-label="'+storeDetailData.address+' Google map : Open in a new window" target="_blank">'+storeDetailData.address+
				/* SVG Icon 추가 */
				'<svg class="icon icon--location" focusable="false" aria-hidden="true"><use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#location-bold"></use></svg>' +
				'</a></li>';
			if(storeDetailData.phone != null && storeDetailData.phone !== "") {
			storeDetail +=
				'<li class="where-to-buy__detail-info-item" role="listitem"><a href="tel:'+storeDetailData.phone+'" class="where-to-buy__detail-info-link icon-tel" title="Call '+storeDetailData.phone+'" an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeDetailHeadline+':call">'+storeDetailData.phone+
				/* SVG Icon 추가 */
				'<svg class="icon icon--tel" focusable="false" aria-hidden="true"><use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#call-bold"></use></svg>' +
				'</a></li>';
			}
			if(storeDetailData.email != null && storeDetailData.email !== "") {
			storeDetail +=
				'<li class="where-to-buy__detail-info-item" role="listitem"><a href="mailto:'+storeDetailData.email+'" class="where-to-buy__detail-info-link icon-mail" title="Mail to "'+storeDetailData.email+' an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeDetailHeadline+':email">'+storeDetailData.email+'</a></li>';	
			}
			$(".where-to-buy__container .where-to-buy__detail-info-list").html(storeDetail);
			
		}
		
		//hatch offline store detail 
		var getHatchOffStoreDetail = function(jsonData) {
			var storeDetailData = jsonData.locations[0];		
			var storeDetailHeadline = "";
			var storeDetailType = "";
			var storeDetail = "";
			var storeLat = storeDetailData.coordinates.latitude;
			var storeLog = storeDetailData.coordinates.longitude;
			var brandTypeValue = "";
			var googleMapUrl = "https://www.google.com/maps/search/?api=1&query="+storeLat+","+storeLog;
						
			if(storeDetailData.name != null && storeDetailData.name != ""){
				storeDetailHeadline += storeDetailData.name;
			}
			
			if(storeDetailData.locality != null && storeDetailData.locality != "") {
				storeDetailHeadline	+= ' ' + storeDetailData.locality;	
			}
			$(".where-to-buy__container .where-to-buy__detail-headline").text(storeDetailHeadline);			
			
			if(storeDetailData.storeTypes == '1_ses') {
				brandTypeValue = Granite.I18n.get("Samsung Experience Stores");
			}else if(storeDetailData.storeTypes == '2_sbs') {
				brandTypeValue = Granite.I18n.get("Samsung Brand Store");
			}else{
				brandTypeValue = Granite.I18n.get("Other Store");
			}
			
			var hatchDistance = "";
			if(initData.distanceUnitValue == "Km"){
				hatchDistance = (parseFloat(storeDetailData.distance)/1000).toFixed(2);
			}else if(initData.distanceUnitValue == "Mile"){
				hatchDistance = (parseFloat(storeDetailData.distance)/1609.344).toFixed(2);
			}
			
			storeDetailType +=
				brandTypeValue + 
				'<span class="where-to-buy__detail-distance">'+ (hatchDistance+initData.distanceUnitValue) +'</span>'; 			
			$(".where-to-buy__container .where-to-buy__detail-type").html(storeDetailType);		
			
			if(storeDetailData.address.street != null && storeDetailData.address.street !== "") {
			storeDetail +=
				'<li class="where-to-buy__detail-info-item" role="listitem"><a href="'+googleMapUrl+'" class="where-to-buy__detail-info-link icon-location" an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeDetailHeadline+':address" aria-label="'+storeDetailData.address.street+' Google map : Open in a new window" target="_blank">'+storeDetailData.address.street+
				/* SVG Icon 추가 */
				'<svg class="icon icon--location" focusable="false" aria-hidden="true"><use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#location-bold"></use></svg>' +
				'</a></li>';
			}
			if(storeDetailData.telephone != null && storeDetailData.telephone !== "") {
			storeDetail +=
				'<li class="where-to-buy__detail-info-item" role="listitem"><a href="tel:'+storeDetailData.phone+'" class="where-to-buy__detail-info-link icon-tel" title="Call '+storeDetailData.phone+'" an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeDetailHeadline+':call">'+storeDetailData.telephone+
				/* SVG Icon 추가 */
				'<svg class="icon icon--tel" focusable="false" aria-hidden="true"><use xlink:href="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/svg-sprite.svg#call-bold"></use></svg>' +
				'</a></li>';
			}
			if(storeDetailData.email != null && storeDetailData.email !== "") {
			storeDetail +=
				'<li class="where-to-buy__detail-info-item" role="listitem"><a href="mailto:'+storeDetailData.email+'" class="where-to-buy__detail-info-link icon-mail" title="Mail to "'+storeDetailData.email+' an-tr="where to buy popup-'+digitalData.page.pageInfo.pageTrack+'-text-contact" an-ca="store locator" an-ac="store detail view" an-la="store detail view:'+storeDetailHeadline+':email">'+storeDetailData.email+'</a></li>';	
			}
			$(".where-to-buy__container .where-to-buy__detail-info-list").html(storeDetail);
			
		}
		
		//call offline store detail api
		var getStorelocatorDetail = function(storeId, latitude, longitude) {
			var hatchOffstoreUse = $("#hatchOffstoreUse").val();
			var offDeatilSearchDomain = $("#searchApiDomain").val() + '/' + $("#apiStageInfo").val() + '/b2c/storelocator/detail';
			var siteCd = $("#siteCode").val();
			var distanceUnit = $("#offstoreDistanceUnit").val();
			var param = {
				"siteCode":siteCd,
				"latitude":latitude,
        		"longitude":longitude,
        		"distanceUnit":distanceUnit,
        		"storeId":storeId
        		}
			
			if(hatchOffstoreUse != 'Y'){
				$.ajax({
					type: "GET",						
					url: offDeatilSearchDomain,
        			data : param,
        			async:false,
        			success: function (data) {								
        				getOffStoreDetail(data.response.resultData.storeDetail);
        			},
        			error: function(XMLHttpRequest, textStatus, errorThrown) {
        			}
				});
			}else{
				var hatchOffstoreUrl = $("#hatchOffstoreUrl").val();
				var hatchOffstoreBrandID =  $("#hatchOffstoreBrandID").val();
				var hatchOffstoreRegion = $("#hatchOffstoreRegion").val();
				var hatchOffstoreLang = $("#hatchOffstoreLang").val();
				var offHatchDomain = hatchOffstoreUrl + hatchOffstoreBrandID + "/geo/list";			
				var offHatchnRadius = $("button.where-to-buy__distance-button.is-selected").attr("data-value");
				if(initData.distanceUnitValue == "Mile"){
					offHatchnRadius = offHatchnRadius*1609.344;
				}else{
					offHatchnRadius = offHatchnRadius*1000;
				}
				var modelCode = "";
				if ($("#selectModelCode").val() == null || $("#selectModelCode").val() === undefined || $("#selectModelCode").val() === "" ) {
					modelCode = $("#current_model_code").val();
				}else{
					modelCode = $("#selectModelCode").val();
				}
				var hatchParam = "";
				if(hatchOffstoreLang != "" && hatchOffstoreLang != null){
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"segment": hatchOffstoreLang,
						"filters":[
							{
							  "columnName": "searchableId",
							  "operation": "equal",
							  "value": [storeId]
							  }
						]
					};
				}else{
					hatchParam = {
						"countryCode":hatchOffstoreRegion,
						"geoCenterArea": {
							"center": {
								"latitude":latitude,
								"longitude":longitude
							},
							"distance":offHatchnRadius
						},
						"product":modelCode,
						"filters":[
							{
							  "columnName": "searchableId",
							  "operation": "equal",
							  "value": [storeId]
							  }
						]
					};
				}
				$.ajax({
					headers: {
						"Content-Type": "application/json",
						//"Cookie" : "icl_opt_out=true"
					},
					type: "POST",						
					url: offHatchDomain,
					data: JSON.stringify(hatchParam),
					cache: true,
					timeout: 20000,
					success: function (data) {
						getHatchOffStoreDetail(data);
					}
				});
				
			}
		}
		

		//online store search store click
		$(document).on('click', '.where-to-buy__container .where-to-buy__search', function(e) {
			var siteCode = $("#siteCode").val();
			var storelocatorUrl = "/"+siteCode+"/storelocator";
			var openStorelocator = window.open("about:blank");
			openStorelocator.location.href = storelocatorUrl;
		});
		
		//offline store distance filter click
		$(document).on('click', '.where-to-buy__container .where-to-buy__distance-button', function(e) {
			$(".where-to-buy__distance-list li button").removeClass("is-selected");
			$(this).addClass("is-selected");
			offStoreCookieCheck();
		});
		
		//offline store list click
		$(document).on('click', '.where-to-buy__container .where-to-buy__result-content', function(e) {
			var storeId = $(this).find(".where-to-buy__result-info").attr("data-store-id");
			var lat = $("#offstoreLatitude").val();
			var long = $("#offstoreLongitude").val();					
			$('.where-to-buy__result-content').removeClass('is-active');
			$(this).addClass('is-active');
			getStorelocatorDetail(storeId, lat, long);
		});
		
		//offline store gps approval click
		$(document).on('click', '.where-to-buy__container .where-to-buy__layer--gbs .cta--contained.cta--emphasis', function(e) {
			setOffStoreCookie("newwtb_offstore","true",5);
			offStoreCookieCheck();
			layerClose(".where-to-buy__layer--gbs", false);
		});
		
		//offline store gps cancel click
		$(document).on('click', '.where-to-buy__container .where-to-buy__layer--gbs .cta--outlined.cta--black', function(e) {
			setOffStoreCookie("newwtb_offstore","false",5);
			getStorelocatorDefault();
			layerClose(".where-to-buy__layer--gbs", false);
		});
		
		//offline store gps close click
		$(document).on('click', '.where-to-buy__container .where-to-buy__layer--gbs .layer-popup__close', function(e) {					
			setOffStoreCookie("newwtb_offstore","false",5);
			getStorelocatorDefault();
			layerClose(".where-to-buy__layer--gbs", false);
		});
		
		//offlines store tooltip title click
		$(document).on('click', '.where-to-buy__container .store-arr2', function(e) {
			var storeId = $("#currentStoreId").val();
			var lat = $("#offstoreLatitude").val();
			var long = $("#offstoreLongitude").val();
			getStorelocatorDetail(storeId,lat,long);
			$(".where-to-buy__detail").show();
			$("#store-Detail-Layer").attr("data-store-detail-id",storeId);
		});
		
		//offline store tooltip close click
		$(document).on('click', '.where-to-buy__container .gm-ui-hover-effect', function(e) {
			$(".where-to-buy__detail").hide();
			$('.where-to-buy__result-content').removeClass('is-active');
		});
		
		//Where to buy lay close click
		$(document).on('click', '.where-to-buy__container .where-to-buy__content > .layer-popup__close', function(e) {
			layerClose(".where-to-buy__container", true);
		});
		
		//Where to buy lay close click
		$(document).on('click', '.where-to-buy__container .where-to-buy__store-link', function(e) {
			window.open($(this).data("deeplink"), "_blank");
		});
		
		$(document).on('click', '.js-cta-buy, .js-cta-buy-etc', function(e) {
			var iaCode = $(this).attr("data-iaCode"); 
			var siteCode = $("#siteCode").val();
			var tempModelCode = $(this).attr("data-modelcode");
			var modelCode = tempModelCode.replace("/","+");
			var modelName = $(this).attr("data-modelname");
			var channelCampaignTag = "Y";
			var countryCookie = getOffStoreCookie("country_codes") !== ''?  getOffStoreCookie("country_codes") : "kr";
			var language = $("#language").val().replace("-", "_");
			var wtbPath = "/samsung/common/wheretobuy.cm-g-where-to-buy-bak."+iaCode+"."+siteCode+"."+modelCode+"."+channelCampaignTag+"."+countryCookie+"."+language+"."+"html";
			
			if(location.href.indexOf(".html") <= -1) {
				wtbPath = wtbPath.replace(".html","/");
			}
			
			$("#current_model_code").val(tempModelCode);
			$("#wtb-categorySubTypeCode").val(iaCode);								
				
			switch (siteCode) {
				case "ru":
				case "ge":
				case "test":
					// wtb-init 미 포함인 경우 초기화후 click
					if(!$(this).hasClass('wtb-init')){ // wtb-init https://widget.24wtb.com/samsung/wtbWidget.js에 포함 되어있음
						var wtbWidget = new WtbWidget();
						wtbWidget.init({});
						document.addEventListener("click", function(e) {
							if(e.target && e.target.className && e.target.className.indexOf("js-cta-buy") !== -1) {
								wtbWidget.callPopup(e.target);
							}
						});
						$(this).get(0).click();
					}
					break;
				case "be":
				case "be_fr":
				case "nl":
					if (document.querySelector("#wtb-id-span") === null) {
	        	    	var idSpan = document.createElement('span');
	        	    	idSpan.dataset.mpn = tempModelCode;
	        	    	idSpan.id = "wtb-id-span";
	        	    	$('body').append(idSpan);
	        	    } else {
	        	    	document.querySelector("#wtb-id-span").dataset.mpn = tempModelCode;
	        	    }

	        	    //modal
	        	    switchModal(initData);
					break;
				case "pl":
					var source = "/pl/where-to-buy.html?model="+ tempModelCode +"&locale=pl-PL&iaUrlNamePath=" + digitalData.page.pageInfo.pageName + "&pageTrack=" + digitalData.page.pageInfo.pageTrack + "&urlPath="+window.location.href;
					if(location.href.indexOf(".html") <= -1) {
						source = source.replace(".html","/");
					}
					if("admin" === $("#apiStageInfo").val()){
						source = "/content/samsung" + source;
					}
					$.magnificPopup.open({
						  items: {src: source},
						  type: 'iframe',
						  callbacks: {
							    open: function() {
							    	window.sg.common.utils.hiddenScroll();
								},
							    close: function() {
							    	window.sg.common.utils.visibleScroll();
							    }
						  }    
					});
					break;
				case "de":
					break;							
				default:	
				
					//재고에 따른 onlineStore 노출 기능 
					var templateType = digitalData.page.pageInfo.pageTrack;
					if(templateType == 'product finder'){
						initData.apiChangeStockStatus = $(this).parent().find(".wtbStockStatusText").val();				
						initData.useWtbStockFunction = $(this).parent().find(".useWtbStockFunction").val();				
					}else{
						initData.apiChangeStockStatus = $("#apiChangeStockStatus").val();
						initData.useWtbStockFunction = $("#useWtbStockFunction").val();
					}
				
					getWtbData(wtbPath);
					$("#selectModelName").val(modelName);
					$("#selectModelCode").val(tempModelCode);
					
					if(siteCode === 'ca' || siteCode === 'ca_fr') {
						if(typeof $("#cnWtbUrlPath").val() !== 'undefined' && $("#cnWtbUrlPath").val()!== '') {
							pswtb.sandbox.openWTB(this, $("#cnWtbUrlPath").val());
						}
					} else {
						if(siteCode === 'cn') {
							if ($(".where-to-buy__tab li").length === 1 && $(".where-to-buy__tab li a").attr("id") === "whereToBuyLocator") {
								location.href = $("#cnWtbUrlPath").val();
								return;
							}
						}
						// offline store modelcode/modelname attribute 추가
						$(".where-to-buy__container .where-to-buy__store-link").attr("data-modelcode", tempModelCode);
						$(".where-to-buy__container .where-to-buy__store-link").attr("data-modelname", modelName);
						
						// br 모바일(01) 인 경우 review 감춤 처리
//						if('br' === siteCode && '01' === iaCode.substr(0,2)) {
//							$(".where-to-buy__container .where-to-buy__product-rating").hide();
//						}
						
						layerOpen(".where-to-buy__container");
						window.sg.common.icon.update();
						window.sg.common.lazyLoad.setLazyLoad();
					}
					break;
			}
			
			if(initData.bvConversationFlag === "Y" || initData.bvConversationRTLFlag === "Y") {
				window.bvCallback = function (BV) {
					BV.pixel.trackConversion({
						"type" : "WhereToBuy",
						"label" : "ProductPage",
						"value" : modelCode
					});
				};
			}
		});
		
	};
	
	function layerOpen(layerSelector) {
		$(".where-to-buy .layer-popup-dim").show();
		$(".where-to-buy " + layerSelector).show();
	};
	
	function layerClose(layerSelector, isWtbLayer) {
		if(isWtbLayer) {
			$(".where-to-buy .layer-popup-dim").hide();
		}
		$(".where-to-buy " + layerSelector).hide();
	};
	
	function placeResources() {
		 var script = document.createElement("script")
		 if (location.host.indexOf("www") > -1) {
			 script.src = "https://sebn.ams3.cdn.digitaloceanspaces.com/src/wtb/latest/js/app.js";
		 } else {
			 script.src = "https://sebn.ams3.digitaloceanspaces.com/src/wtb/latest/staging/js/app.js";
		 }
		 script.type = "text/javascript";
		 document.getElementsByTagName("head")[0].appendChild(script);
	};

  	function createModal(initData) {
  		  var html = document.createElement('div');
  		  html.innerHTML =
	  	      "<div id='wtb-modal-container' class='modal-container'>"
	  	    	+ "<div class='modal-overlay'></div>"
	  	    	+ "<div class='modal-window default settings'>"
	  	    		+ "<div class='internal-container'>"
	  	    			+ "<div class='modal-top-bar'>"
	  	    				+ "<div class='close-button'><img src='https://image.samsung.com/uk/smartphones/galaxy-note9/buy/shop_popup_close_btn_mo.png'/></div>"
	  	    			+ "</div>"
	  	    			+ "<div id='where-to-buy-local'>"
	  	    			+ "</div>"
	  	    		+ "</div>"
		    	+ "</div>"
		     + "</div>";
  		  $('body').append(html);
  		  $('.close-button').on('click', function (e) {
  			  switchModal(initData);
  		  });
  		  $('.modal-overlay').on('click', function (e) {
  			  switchModal(initData);
  	      });
  	};
	
  	function switchModal(initData) {
  		  if (document.querySelector("#wtb-modal-container") === null) {
  			  createModal(initData);
  		  }
  		  if (!initData.placedWtbResources) {
  			  placeResources();
  			  initData.placedWtbResources = true;
  		  }
  		  $("body").toggleClass("modal-open");
  	};
	
})(window, window.jQuery);	
/*! iFrame Resizer (jquery.iframeSizer.min.js )
 *  Desc: Force cross domain iframes to size to content.
 *  Requires: iframeSizer.contentWindow.min.js to be loaded into the target frame.
 *  Copyright: (c) 2013 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT and GPL
 */

(function(e){function o(e){i.log&&window.console&&console.log(t+" "+e)}var t="[iFrameSizer]",n=t.length,r=0,i,s={log:!1,contentWindowBodyMargin:8,doHeight:!0,doWidth:!1,interval:0,callback:function(){}};e(window).on("message",function(e){function r(e){function r(){function e(e){u.iframe.style[e]=u[e]+"px",o(u.iframe.id+" "+e+" set to "+u[e]+"px")}i.doHeight&&e("height"),i.doWidth&&e("width")}function s(){var t=e.substr(n).split(":");u={iframe:document.getElementById(t[0]),height:t[1],width:t[2]}}var u={};t===e&&e.substr(0,n)&&(s(),r(),i.callback(u))}r(e.originalEvent.data)}),e.fn.iFrameSizer=function(n){return i=e.extend({},s,n),this.each(function(){function n(){return a.contentWindow?!0:!1}function s(){a.style.overflow="hidden",a.scrolling="no",e(a).on("load",function(){u(a)}),u(a)}function u(){function e(){""===a.id&&(a.id="iFrameSizer"+r++,o("Added missing iframe ID: "+a.id))}function n(){var e=a.id+":"+i.contentWindowBodyMargin+":"+i.doWidth+":"+i.log+":"+i.interval;o("Sending init msg to iframe ("+e+")"),a.contentWindow.postMessage(t+e,"*")}e(),n()}var a=this;n()&&s()})}})(window.jQuery);
(() => {
  const $q = window.sg.common.$q;
  const utils = window.sg.common.utils;
  const swiperManager = window.sg.common.swiperManager;

  const selector = {
    section: '.su11-link-card',
  };

  class LinkCard {
    constructor(element) {
      this.selector = {
        linkCard: '.su11-link-card__list-item',
        linkCardHidden: '.su11-link-card__list-item:not(.card-visible)',
        listWrap: '.su11-link-card__list-item-wrap',
        listTitle: '.su11-link-card__list-item-title',
        listDesc: '.su11-link-card__list-item-description',
        listCta: '.su11-link-card__list-item-cta',
        viewMoreCta: '.su11-link-card__more-cta',
        cardVisibleCls: 'card-visible',
        desktopCarouselCls: 'su11-link-card__desktop-carousel',
        mobileCarouselCls: 'su11-link-card__mobile-carousel',
        indicator: '.indicator',
      };

      this.el = {
        component: $q(element),
      };

      this.handler = {
        resize: this.resize.bind(this),
        activeViewCard: this.activeViewCard.bind(this),
      };

      LinkCard.instances.set(element, this);

      this.init();
    }

    setElement() {
      this.el.linkCard = this.el.component.find(this.selector.linkCard);
      this.el.listWrap = this.el.component.find(this.selector.listWrap);
      this.el.viewMoreCta = this.el.component.find(this.selector.viewMoreCta);
      this.el.swiper = this.el.component.find('.swiper-container');
      this.el.indicator = this.el.component.find(this.selector.indicator);

      this.desktopFlag = false;
      this.mobileFlag = false;
      this.moreFlag = false;
      this.desktopSwiper = null;
      this.mobileSwiper = null;
      this.swiperFlag = this.el.swiper.target.length > 0 ? true : false;

      this.desktopSlidePerView = 3;
      this.mobileSlidePerView = 1;

      this.showAll = null;

      if (this.swiperFlag) {
        if (this.el.swiper.hasClass(this.selector.desktopCarouselCls)) {
          this.desktopSwiper = true;
          this.mobileSwiper = false;
        }
        if (this.el.swiper.hasClass(this.selector.mobileCarouselCls)) {
          this.desktopSwiper = false;
          this.mobileSwiper = true;
        }
      }
    }

    init() {
      this.setElement();

      this.bindEvents();

      this.toggleViewCta();

      this.setListView();

      this.resize();
    }

    reInit() {
      this.init();
    }

    devideColumn() {
      const itemColArr = [];
      const listWrap = this.el.component.find('.su11-link-card__list-item.card-visible .su11-link-card__list-item-wrap').target;
      const cnt = Math.floor(listWrap.length / 3);

      for (let d = 0; d <= cnt; d++) {
        itemColArr.push(listWrap.splice(0, 3));
      }

      if (utils.getCurrentDevice() === 'desktop') {
        if (this.swiperFlag && !this.el.swiper.hasClass(this.selector.mobileCarouselCls)) {
          this.setHeight($q('.card-visible .su11-link-card__list-item-wrap').target);
        } else {
          itemColArr.forEach((itemEl) => {
            this.setHeight(itemEl);
          });
        }
      } else {
        if (this.swiperFlag && this.mobileSwiper !== false) {
          this.setHeight($q('.card-visible .su11-link-card__list-item-wrap').target);
        }
      }
    }

    setDefault() {
      this.el.listWrap.target.forEach((item) => {
        const $item = $q(item);

        $item.css({
          'height': '',
        });
      });
    }

    setHeight(cardList) {
      const heightArr = [];

      cardList.forEach((item) => {
        const $item = $q(item);
        const itemPadding = parseFloat($item.css('padding-top')) + parseFloat($item.css('padding-bottom'));
        const titleHeight = $item.find(this.selector.listTitle).outerHeight() !== undefined ? $item.find(this.selector.listTitle).outerHeight() : 0;
        const descHeight = $item.find(this.selector.listDesc).outerHeight() !== undefined ? $item.find(this.selector.listDesc).outerHeight() + parseFloat($item.find(this.selector.listDesc).css('margin-top')) : 0;
        const ctaHeight = $item.find(this.selector.listCta).outerHeight() !== undefined ? $item.find(this.selector.listCta).outerHeight() : 0;
        const allHeight = itemPadding + titleHeight + descHeight + ctaHeight;

        heightArr.push(allHeight);

        $item.css({
          'height': `${allHeight}px`,
        });
      });

      const maxHeight = Math.max.apply(null, heightArr);

      cardList.forEach((item) => {
        const $item = $q(item);

        $item.css({
          'height': `${maxHeight}px`,
        });
      });
    }

    resize() {
      this.setDefault();

      if (utils.getCurrentDevice() === 'desktop') {
        if (this.desktopFlag === false) {
          this.desktopFlag = true;
          this.mobileFlag = false;

          if (this.moreFlag === false) {
            this.setListView();
          }

          if (this.swiperFlag) {
            if (this.desktopSwiper === false) {
              if (this.showAll === null) {
                this.setListView();
              }
              this.devideColumn();
              this.el.indicator.hide();
              return false;
            }

            const sw = swiperManager.getSwiper(this.el.swiper.target[0]);
            const slides = this.el.linkCard.target.length;

            this.el.viewMoreCta.hide();
            this.el.linkCard.addClass(this.selector.cardVisibleCls);
            this.el.indicator.show();

            if (sw === false) {
              if (slides > this.desktopSlidePerView) {
                swiperManager.slideInit(this.el.swiper.target[0]);
              } else {
                this.el.indicator.hide();
              }
            } else {
              if (slides <= this.desktopSlidePerView) {
                swiperManager.slideSwiperDestory(this.el.swiper.target[0]);
                this.el.indicator.hide();
              } else {
                if (!sw.params.pagination.clickable) {
                  this.el.swiper.target[0].swiper.params.pagination.clickable = true;
                  this.el.swiper.target[0].swiper.pagination.init();
                }
                setTimeout(() => {
                  if (this.el.swiper.target[0].swiper.autoplay.running === true) {
                    this.el.swiper.target[0].swiper.autoplay.stop();
                    this.el.swiper.target[0].swiper.autoplay.running = false;
                  }
                }, 300);
              }
            }
          }
        }

        this.devideColumn();
      } else {
        if (this.mobileFlag === false) {
          this.mobileFlag = true;
          this.desktopFlag = false;


          if (this.swiperFlag) {
            if (this.mobileSwiper === false) {
              if (this.showAll === null) {
                this.setListView();
              }
              this.el.indicator.hide();
              return false;
            }
            const sw = swiperManager.getSwiper(this.el.swiper.target[0]);
            const slides = this.el.linkCard.target.length;

            this.el.viewMoreCta.hide();
            this.el.linkCard.addClass(this.selector.cardVisibleCls);
            this.el.indicator.show();

            if (sw === false) {
              if (slides > this.mobileSlidePerView) {
                swiperManager.slideInit(this.el.swiper.target[0]);
              } else {
                this.el.indicator.hide();
              }
            } else {
              if (slides <= this.mobileSlidePerView) {
                swiperManager.slideSwiperDestory(this.el.swiper.target[0]);
                this.el.indicator.hide();
              } else {
                if (!sw.params.pagination.clickable) {
                  this.el.swiper.target[0].swiper.params.pagination.clickable = true;
                  this.el.swiper.target[0].swiper.pagination.init();
                }
                setTimeout(() => {
                  if (this.el.swiper.target[0].swiper.autoplay.running === true) {
                    this.el.swiper.target[0].swiper.autoplay.stop();
                    this.el.swiper.target[0].swiper.autoplay.running = false;
                  }
                }, 300);
              }
            }            
          }
        }
        if (this.swiperFlag && this.mobileSwiper !== false) {
          this.devideColumn();
        }
      }
    }

    toggleViewCta() {
      const setMax = utils.getCurrentDevice() === 'desktop' ? 6 : 3;

      if (this.el.linkCard.target.length > setMax) {
        this.el.viewMoreCta.show();
      } else {
        this.el.viewMoreCta.hide();
      }
    }

    setListView() {
      const nowView = utils.getCurrentDevice();
      const viewCnt = nowView === 'desktop' ? 6 : 3;

      if (!this.swiperFlag){
        this.el.linkCard.removeClass(this.selector.cardVisibleCls);

        this.el.linkCard.target.forEach((item, idx) => {
          const $item = $q(item);

          if (idx < viewCnt) {
            $item.addClass(this.selector.cardVisibleCls);
          }
        });

        if (this.el.linkCard.target.length > viewCnt) {
          this.el.viewMoreCta.show();
        } else {
          this.el.viewMoreCta.hide();
        }
      } else {
        if (nowView === 'desktop') {
          if (this.desktopSwiper) {
            this.el.viewMoreCta.hide();
          } else {
            this.el.indicator.hide();
            this.el.linkCard.removeClass(this.selector.cardVisibleCls);

            this.el.linkCard.target.forEach((item, idx) => {
              const $item = $q(item);

              if (idx < viewCnt) {
                $item.addClass(this.selector.cardVisibleCls);
              }
            });

            if (this.el.linkCard.target.length > viewCnt) {
              this.el.viewMoreCta.show();
            } else {
              this.el.viewMoreCta.hide();
            }
          }
        } else {
          if (this.mobileSwiper) {
            this.el.viewMoreCta.hide();
          } else {
            this.el.indicator.hide();
            this.el.linkCard.removeClass(this.selector.cardVisibleCls);

            this.el.linkCard.target.forEach((item, idx) => {
              const $item = $q(item);

              if (idx < viewCnt) {
                $item.addClass(this.selector.cardVisibleCls);
              }
            });

            if (this.el.linkCard.target.length > viewCnt) {
              this.el.viewMoreCta.show();
            } else {
              this.el.viewMoreCta.hide();
            }
          }
        }
      }
    }

    activeViewCard() {
      let lastCnt = true;
      const VIEWCNT = 6;
      this.el.linkCardHidden = this.el.component.find(this.selector.linkCardHidden);

      if (this.el.linkCardHidden.target.length - 6 < 1) {
        lastCnt = false;
      }

      this.el.linkCardHidden.target.forEach((item, idx) => {
        const $item = $q(item);

        if (idx < VIEWCNT) {
          $item.addClass(this.selector.cardVisibleCls);
        }

        if (idx === 0) {
          let focusItem = null;

          if ($item.find('.cta').target.length > 0) {
            focusItem = $item.find('.cta').eq(0);

            focusItem.focus();
          } else {
            focusItem = $item;

            focusItem.attr('tabindex', '0');

            focusItem.focus();

            focusItem.removeAttr('tabindex');
          }
        }
      });

      if (lastCnt === false) {
        this.el.viewMoreCta.hide();
        this.showAll = true;
      }

      this.moreFlag = true;

      this.setDefault();
      this.devideColumn();
    }

    bindEvents() {
      $q(window).off('resize', this.handler.resize).on('resize', this.handler.resize);

      this.el.viewMoreCta.off('click', this.handler.activeViewCard).on('click', this.handler.activeViewCard);
    }
  }

  const init = () => {
    if (!$q(selector.section).target.length) {
      return;
    }

    $q(selector.section).target.forEach((element) => {
      if (!LinkCard.instances.has(element)) {
        new LinkCard(element);
      }
    });
  };

  const reInit = () => {
    $q(selector.section).target.forEach((element) => {
      if (LinkCard.instances.has(element)) {
        const instances = LinkCard.instances.get(element);
        instances.reInit();
      } else {
        new LinkCard(element);
      }
    });
  };

  const viewMore = () => {
    $q(selector.section).target.forEach((element) => {
      if (LinkCard.instances.has(element)) {
        const instances = LinkCard.instances.get(element);
        instances.activeViewCard();
      }
    });
  };

  LinkCard.instances = new WeakMap();

  $q.ready(init);

  window.sg.components.su11LinkCard = {
    init,
    reInit,
    viewMore,
  };
})();

(() => {
  const $q = window.sg.common.$q;
  const utils = window.sg.common.utils;
  const setMobileFocusLoop = window.sg.common.utils.setMobileFocusLoop;
  const removeMobileFocusLoop = window.sg.common.utils.removeMobileFocusLoop;

  const selector = {
    section: '.confirm-popup',
    close: '.confirm-popup__close',
    focusEl: 'a:not([style*="display: none"]):not([style*="display:none"]), button:not([style*="display: none"]):not([style*="display:none"]), input',
  };

  class PopupConfirm {
    constructor(el) {
      this.els = {
        el,
        popupConfirmCloseBtn: el.querySelector('.confirm-popup__close'),
        popupConfirmNoBtn: el.querySelector('.confirm-popup .confirm-popup__cta-wrap Button:first-of-type'),
        popupConfirmYesBtn: el.querySelector('.confirm-popup .confirm-popup__cta-wrap Button:last-of-type'),
      };
      this.init();
    }

    init() {
      if(PopupConfirm.instances.get(this.els.el)) {
        return;
      }

      PopupConfirm.instances.set(this.els.el, this);

      this.bindEvents();
    }

    bindEvents() {
      this.els.popupConfirmCloseBtn.addEventListener('click', () => {
        this.close();
      });
      this.els.popupConfirmNoBtn.addEventListener('click', () => {
        this.close();
      });
      this.els.popupConfirmYesBtn.addEventListener('click', () => {
        this.close();
      });

      const closeBtn = document.querySelector(`${selector.section} ${selector.close}`);
      closeBtn.removeEventListener('keydown', keydownCloseBtn);
      closeBtn.addEventListener('keydown', keydownCloseBtn);

      const layer = $q(selector.section).find(selector.focusEl).target[0];
      layer.removeEventListener('keydown', keydownLayer);
      layer.addEventListener('keydown', keydownLayer);
    }

    close() {
      const productCardList = $q('.pd13-offers-product-card-list');
      const productFinder = $q('.pd12-product-finder');

      if (productCardList.target.length > 0 || productFinder.target.length > 0) {
        const confirmPop = $q('.confirm-popup');
        if (confirmPop.attr('data-aria-hidden')) { //call in popup
          confirmPop.attr('aria-hidden', 'true');

          const callLayer = ['.pd-get-stock-alert-popup', '.compare-popup'];

          callLayer.forEach((layerEl) => {
            if ($q(layerEl).css('display') === 'block') {
              $q(layerEl).removeAttr('data-aria-hidden');
              $q(layerEl).removeAttr('aria-hidden');
            }
          });
        } else {
          removeMobileFocusLoop();
        }
      } else {
        if (document.querySelectorAll('[data-aria-hidden]').length > 0) {
          removeMobileFocusLoop();
        }
      }

      this.els.el.style.display = 'none';
      utilsHide();
      
      const agent = window.navigator.userAgent;
      const isIphone = agent.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
      const iosVersion = isIphone ? parseFloat(isIphone[2].replace('_', '.')) : 0;
      if(iosVersion >= 16.1){
        setTimeout(() => {
          if (window.sg.components.confirmPopup.popupCallCta !== null) {
            window.sg.components.confirmPopup.popupCallCta.focus();
            window.sg.components.confirmPopup.popupCallCta = null;
          }
        },200);
      } else {
        if (window.sg.components.confirmPopup.popupCallCta !== null) {
          window.sg.components.confirmPopup.popupCallCta.focus();
          window.sg.components.confirmPopup.popupCallCta = null;
        }
      }
    }
  }

  PopupConfirm.instances = new WeakMap();

  function keydownLayer(evt) {
    if (evt.shiftKey && window.sg.common.constants.KEY_CODE.TAB === evt.keyCode && evt.target === $q(selector.section).find(selector.focusEl).target[0]) {
      evt.preventDefault();
      document.querySelector(`${selector.section} ${selector.close}`).focus();
    }
  }

  function keydownCloseBtn(evt) {
    if (!evt.shiftKey && window.sg.common.constants.KEY_CODE.TAB === evt.keyCode) {
      evt.preventDefault();
      $q(selector.section).find(selector.focusEl).target[0].focus();
    }
  }

  function showPopup(callCta = null) {
    document.querySelector('.confirm-popup').style.display = 'block';

    const agent = window.navigator.userAgent;
    const isIphone = agent.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
    const iosVersion = isIphone ? parseFloat(isIphone[2].replace('_', '.')) : 0;
    const focusEl = $q('.confirm-popup').find(selector.focusEl).target[0];
    if(iosVersion >= 16.1){
      focusEl.blur();
      setTimeout(() => {
        focusEl.focus();
      },200);
    } else {
      focusEl.focus();
    }

    const firstFocusEl = $q(selector.section).find(selector.focusEl).target[0];
    firstFocusEl.removeEventListener('keydown', keydownLayer);
    firstFocusEl.addEventListener('keydown', keydownLayer);

    utilsShow();

    const productCardList = $q('.pd13-offers-product-card-list');
    const productFinder = $q('.pd12-product-finder');
    const confirmPop = $q('.confirm-popup');

    if (window.sg.components.confirmPopup.popupCallCta !== null) {
      window.sg.components.confirmPopup.popupCallCta = null;
    }

    if (callCta !== null) {
      if (callCta instanceof Element) {
        window.sg.components.confirmPopup.popupCallCta = callCta;
      } else if (callCta instanceof Object) {
        if (callCta[0] instanceof Element) {
          window.sg.components.confirmPopup.popupCallCta = callCta[0];
        } else {
          window.sg.components.confirmPopup.popupCallCta = callCta.target[0];
        }
      }
    }

    if (productCardList.target.length > 0 || productFinder.target.length > 0) {
      if (confirmPop.attr('data-aria-hidden')) { //call in popup
        confirmPop.attr('aria-hidden', 'false');
        const callLayer = ['.pd-get-stock-alert-popup', '.compare-popup'];

        callLayer.forEach((layerEl) => {
          if ($q(layerEl).css('display') === 'block') {
            $q(layerEl).attr('data-aria-hidden', null);
            $q(layerEl).attr('aria-hidden', 'true');
          }
        });
      } else {
        setMobileFocusLoop(confirmPop.target[0]);
      }
    } else {
      if (document.querySelectorAll('[data-aria-hidden]').length === 0) {
        setMobileFocusLoop(confirmPop.target[0]);
      }
    }
  }

  function closePopup() {
    PopupConfirm.instances.get(document.querySelector('.confirm-popup')).close();
  }

  function utilsShow() {
    utils.popupControl.open(closePopup);
    utils.hiddenScroll();
  }

  function utilsHide() {
    utils.popupControl.close();
    utils.visibleScroll();
  }

  const popupConfirm = {
    initAll() {
      [...document.querySelectorAll('.confirm-popup')].forEach((el) => {
        if (!PopupConfirm.instances.has(el)) {
          new PopupConfirm(el);
        }
      });
    },
    showPopup,
  };

  window.sg.components.confirmPopup = popupConfirm;

  $q.ready(popupConfirm.initAll);
})();

//alert layer popup
function confirmPopup(msg, type, id, $focusEl) {
    /* confirm 활성화 된 경우는 스킵 */
    if ($(".confirm-popup").is(":visible")) {
        return false;
    }

    var alertlayer = $(".confirm-popup");
    var alertTitle = alertlayer.find(".confirm-popup__title");
    //COMP6FE-1492(ca국가 추가 할인)
    var alertDisclaimer = alertlayer.find(".confirm-popup__disclaimer");
    var alertText = alertlayer.find(".confirm-popup__desc");
    var alertClose = alertlayer.find(".confirm-popup__close");
    var alertYes = alertlayer.find(".cta--contained");
    var alertNo = alertlayer.find(".cta--outlined");
    var pageTrack = digitalData.page.pageInfo.pageTrack;

    //COMP6FE-1492(ca국가 추가 할인)
    alertlayer.removeClass("error-popup-style");
    
    alertTitle.html("");
    initCta(alertClose);
    initCta(alertYes);
    initCta(alertNo);
    alertYes.attr("id", (id || null));

    if (msg != null && msg !== "") {
        alertText.html(msg);
    } else {
        alertText.html(Granite.I18n.get("We're sorry, an error occurred."));
    }

    //DTM
    if (null == type || "error" === type) {
        alertYes.html(Granite.I18n.get("Close"));
        alertNo.hide();
        alertYes.attr("an-tr", "error popup-" + pageTrack + "-cta-button")
            .attr("an-ca", "other interaction")
            .attr("an-ac", "error popup:close")
            .attr("an-la", "error popup:close");
        alertClose.attr("an-tr", "error popup-" + pageTrack + "-cta-button")
            .attr("an-ca", "other interaction")
            .attr("an-ac", "error popup:close")
            .attr("an-la", "error popup:close");
    } else if ("tnc" === type) {
        alertYes.html(Granite.I18n.get("Confirm"));
        alertNo.hide();
    } else if ("delete" === type) {
        alertYes.html(Granite.I18n.get("YES"));
        alertNo.html(Granite.I18n.get("NO"));
        alertNo.show();
    } else if ("voucherDelete" === type) {
    	alertTitle.html(Granite.I18n.get("Delete options"))
        alertYes.html(Granite.I18n.get("YES"));
        alertNo.html(Granite.I18n.get("NO"));
        alertNo.show();
        alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-delete")
            .attr("an-ca", "option click")
            .attr("an-ac", "bridge")
            .attr("an-la", "evoucher:delete option:yes");
        alertNo.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-delete")
            .attr("an-ca", "option click")
            .attr("an-ac", "bridge")
            .attr("an-la", "evoucher:delete option:no");
    } else if ("addToCart" === type) {
        alertYes.html(Granite.I18n.get("Continue shopping"));
        alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-add")
            .attr("an-ca", "option click")
            .attr("an-ac", "bridge")
            .attr("an-la", "add on:add item popup:continue shopping");
        alertNo.hide();
    } else if ("redeem" === type) {
        alertTitle.html(Granite.I18n.get("Are you sure?"));
        alertNo.html(Granite.I18n.get("Redeem"));
        alertNo.show();
        alertYes.html(Granite.I18n.get("Skip"));
        if (id === "voucherGoCart") {
            alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-text")
                .attr("an-ca", "ecommerce")
                .attr("an-ac", "addToCart")
                .attr("an-la", "evoucher:no addition:skip");
            setVoucherYes(alertYes);
        }else if(id === "voucherGoCartAddOn"){
        	alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-text")
            .attr("an-ca", "ecommerce")
            .attr("an-ac", "addToCart")
            .attr("an-la", "evoucher:no addition:skip");
        setVoucherYes(alertYes);
        } else if (id === "skipGoCart") {
            alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-notadded")
                .attr("an-ca", "content click")
                .attr("an-ac", "feature")
                .attr("an-la", "evoucher:no addition:skip");
        }else if(id === "skipGoCartAddOn"){
        	alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-notadded")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:no addition:skip");
        }
        alertNo.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-text")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:no addition:redeem");
        alertClose.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-text")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:no addition:close");
    } else if ("voucher" === type) {
    	alertTitle.html(Granite.I18n.get("Are you sure?"));
        alertNo.html(Granite.I18n.get("Back"));
        alertNo.show();
        alertYes.html(Granite.I18n.get("Continue"));
        if (id === "voucherGoCart") {
            alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-text")
                .attr("an-ca", "ecommerce")
                .attr("an-ac", "addToCart")
                .attr("an-la", "evoucher:below evoucher:continue");
            setVoucherYes(alertYes);
        }else if(id === "voucherGoCartAddOn"){
        	alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-text")
            .attr("an-ca", "ecommerce")
            .attr("an-ac", "addToCart")
            .attr("an-la", "evoucher:below evoucher:continue");
        	setVoucherYes(alertYes);
        }else if (id === "skipGoCart") {
            alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-notadded")
                .attr("an-ca", "content click")
                .attr("an-ac", "feature")
                .attr("an-la", "evoucher:below evoucher:continue");
        }else if(id === "skipGoCartAddOn"){
        	alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-notadded")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:below evoucher:continue");
        }
        alertNo.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-text")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:below evoucher:back");
        alertClose.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-text")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:below evoucher:close");
    } else if ("allVoucher" === type) {
    	alertTitle.html(Granite.I18n.get("Great!"));
        alertNo.html(Granite.I18n.get("Select again"));
        alertNo.show();
        alertYes.html(Granite.I18n.get("Continue"));
        if (id === "voucherGoCart") {
            alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-text")
                .attr("an-ca", "ecommerce")
                .attr("an-ac", "addToCart")
                .attr("an-la", "evoucher:over evoucher:continue");
            setVoucherYes(alertYes);
        }else if(id === "voucherGoCartAddOn"){
        	alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-text")
            .attr("an-ca", "ecommerce")
            .attr("an-ac", "addToCart")
            .attr("an-la", "evoucher:over evoucher:continue");
        setVoucherYes(alertYes);
        }else if (id === "skipGoCart") {
            alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-notadded")
                .attr("an-ca", "content click")
                .attr("an-ac", "feature")
                .attr("an-la", "evoucher:over evoucher:continue");
        }else if(id === "skipGoCartAddOn"){
        	alertYes.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-popup-notadded")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:over evoucher:continue");
        }
        alertNo.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-text")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:over evoucher:back");
        alertClose.attr("an-tr", "pdd10_product bought together-" + pageTrack + "-button-text")
            .attr("an-ca", "content click")
            .attr("an-ac", "feature")
            .attr("an-la", "evoucher:over evoucher:close");
    } else if ("freeGift" === type) {
        alertYes.html(Granite.I18n.get("YES"));
        alertNo.html(Granite.I18n.get("NO"));
        alertNo.show();
        alertYes.attr("an-tr", "header(pim)_offer option:bundle offer:free gift-" + pageTrack + "-alert-link")
            .attr("an-ca", "option click")
            .attr("an-ac", "pd buying tool")
            .attr("an-la", "bundle offer:free gift:reset option:yes");
        alertNo.attr("an-tr", "header(pim)_offer option:bundle offer:free gift-" + pageTrack + "-alert-link")
            .attr("an-ca", "option click")
            .attr("an-ac", "pd buying tool")
            .attr("an-la", "bundle offer:free gift:reset option:no");
    } else if ("combo" === type) {
        alertTitle.html(Granite.I18n.get("Delete"));
        alertYes.html(Granite.I18n.get("YES"));
        alertNo.html(Granite.I18n.get("NO"));
        alertNo.show();
        alertYes.attr("an-tr", "header(pim)_offer option:bundle offer:add-on -" + pageTrack + "-delete-confirm")
            .attr("an-ca", "option click")
            .attr("an-ac", "pd buying tool")
            .attr("an-la", "bundle offer:add-on:delete option:yes");
        alertNo.attr("an-tr", "header(pim)_offer option:bundle offer:add-on -" + pageTrack + "-delete-confirm")
            .attr("an-ca", "option click")
            .attr("an-ac", "pd buying tool")
            .attr("an-la", "bundle offer:add-on:delete option:no");
    }else if ("ebt" === type) {
        alertTitle.html($("#successTitle").val());
        alertText.html($("#successMessageDesc").val());
        alertYes.html(Granite.I18n.get("Close Layer"));
    } else if("continue" === type) {
        alertYes.html(Granite.I18n.get("Continue"));
        alertNo.html(Granite.I18n.get("CANCEL"));
        alertNo.show();
    }else if(type === 'OverPrice'){
        //COMP6FE-1492(ca국가 추가 할인)
    	alertYes.html(Granite.I18n.get("OK"));
    	alertText.html('');
    	alertText.hide();
    	alertNo.hide();
    	alertDisclaimer.html(msg);
    	alertlayer.addClass("error-popup-style");
    } else if ("tradeInClose" === type) { // CRHQ-8132 [B2C][MX][KZ] New Trade-In Telekom
        alertYes.html(Granite.I18n.get("Yes"));
        alertNo.html(Granite.I18n.get("No"));
        alertNo.show();
        alertYes.attr("data-event-type", type);
        alertNo.attr("data-event-type", type);
        alertClose.attr("data-event-type", type);
    }

    window.sg.components.confirmPopup.showPopup($focusEl);
};

//api 에러 발생시 layer pop
function errLayerPop(e) {
    var errorText = "";
    if (e.responseJSON != null) {
        var errmsg = e.responseJSON;
        if (errmsg.message != null && errmsg.message !== "") {
            errorText = errmsg.message;
        }
    }
    if (errorText === "") {
        errorText = Granite.I18n.get("We're sorry, an error occurred.");
    }
    //t&c && error alert popup
    confirmPopup(errorText, "error");
};

function setVoucherYes(ctaEl) {
    var bridgeCartEl = $("#primaryInfoGoCart");
    ctaEl.attr("data-modelname", bridgeCartEl.attr("data-modelname"))
        .attr("data-modeldisplay", bridgeCartEl.attr("data-modeldisplay"))
        .attr("data-modelprice", bridgeCartEl.attr("data-modelprice"))
        .attr("data-discountprice", bridgeCartEl.attr("data-discountprice"))
        .attr("data-pvitype", bridgeCartEl.attr("data-pvitype"))
        .attr("data-pvisubtype", bridgeCartEl.attr("data-pvisubtype"))
        .attr("data-pimsubtype", bridgeCartEl.attr("data-pimsubtype"))
        .attr("data-modelrevenue", bridgeCartEl.attr("data-modelrevenue"))
        .attr("data-modelqty", bridgeCartEl.attr("data-modelqty"))
        .attr("data-modelcurrency", bridgeCartEl.attr("data-modelcurrency"));
}

// cta tagging 초기화
function initCta(ctaEl) {
    ctaEl.removeAttr("an-tr")
        .removeAttr("an-ca")
        .removeAttr("an-ac")
        .removeAttr("an-la")
        .removeAttr("data-modelname")
        .removeAttr("data-modeldisplay")
        .removeAttr("data-modelprice")
        .removeAttr("data-discountprice")
        .removeAttr("data-pvitype")
        .removeAttr("data-pvisubtype")
        .removeAttr("data-pimsubtype")
        .removeAttr("data-modelrevenue")
        .removeAttr("data-modelqty")
        .removeAttr("data-modelcurrency");
}
(() => {
  const $q = window.sg.common.$q;
  const commonTab = window.sg.common.tab;
  const BREAKPOINTS = window.sg.common.constants.BREAKPOINTS;
  const swiperManager = window.sg.common.swiperManager;
  const utils = window.sg.common.utils;
  const lazyLoad = window.sg.common.lazyLoad;

  const selector = {
    tab: '.offers-product-card-grid .offers-product-card-grid__tab',
    component: '.offers-product-card-grid',
    tabComponent: '.offers-product-card-grid__tab-panel',
    cardComponent: '.offers-product-card-grid__item-wrap',
    tabItem: '.tab__item',
  };

  const el = {
    window: $q(window),
    mainSwiper: null,
  };

  let hashActiveTab = 0;
  let isLoadInit = true;

  class OffersProductWrap {
    constructor(component) {
      this.selector = {
        container: '.offers-product-card-grid',
        mainSwiper: '.offers-product-card-grid__swiper',
        tabWrap: '.tab',
        tabItem: '.tab__item',
      };

      this.el = {
        component: $q(component),
        mainSwiper: null,
      };

      this.isLoadInit = isLoadInit;

      OffersProductWrap.instances.set(component, this);

      this.setElement();

      this.init();
    }

    setElement() {
      this.el.mainSwiper = this.el.component.find(this.selector.mainSwiper);
      this.el.mainSwiper.addClass('basic-swiper');
      this.el.mainSwiper.find('.swiper-slide').eq(hashActiveTab).addClass('swiper-slide-active');
      const mainSwiperEl = this.el.mainSwiper.target[0];

      this.el.tabWrap = this.el.component.find(this.selector.tabWrap);
      this.el.tabItem = this.el.component.find(this.selector.tabItem);
      
      if(this.el.tabItem.target.length > 0){
        $q(mainSwiperEl).find('.offers-product-card-grid__tab-panel').attr('role','tabpanel');
      }

      let activedIdx = mainSwiperEl.swiper ? mainSwiperEl.swiper.activeIndex : 0;
      swiperManager.slideReInit(mainSwiperEl);
      swiperManager.slideInitEnd(mainSwiperEl,() => {
        this.el.mainSlide = mainSwiperEl.swiper;

        const isAllyTab = this.el.tabWrap.find('.tab__item-title[aria-controls]').target.length > 0;
        if(isAllyTab && this.isLoadInit){
          const hashActiveNewTab = this.el.tabWrap.find(`.offers-product-card-grid__tab .tab__item-title[aria-controls="${location.hash.replace('#','')}"]`);
          activedIdx = hashActiveNewTab.target.length > 0 ? hashActiveNewTab.parent().index() : activedIdx;
          window.sg.common.tab.init(this.el.tabWrap.target[0], activedIdx);
          this.isLoadInit = false;
        }

        const $panel = this.el.mainSwiper.find('.offers-product-card-grid__tab-panel');
        $panel.attr('aria-hidden',true);//work due to removal of aria-hidden by slideReInit
        $panel.eq(activedIdx).attr('aria-hidden',false);

        this.el.mainSlide.slideTo(activedIdx, 0);
      });
      this.el.mainSlide = mainSwiperEl.swiper;

      this.initTime = null;
      this.reInitTime = null;
    }

    init() {
      this.bindEvents();

      if (this.initTime !== null) {
        clearTimeout(this.initTime);
      }

      this.initTime = setTimeout(() => {
        this.setTabIndex(0);
      }, 500);
    }

    reInit() {
      this.setElement();

      this.bindEvents();

      if (this.reInitTime !== null) {
        clearTimeout(this.reInitTime);
      }

      this.reInitTime = setTimeout(() => {
        this.setTabIndex(this.el.component.find(`${selector.tabComponent}.swiper-slide-active`).index() || 0);
      }, 500);
    }

    setTabIndex(idx) {
      this.el.component.find(selector.tabComponent).target.forEach((item, activeIdx) => {
        const $item = $q(item);

        if (idx === activeIdx) {
          $item.find('input:checked, a, button:not(.option-selector__button--disabled)').attr('tabindex', '0');
        } else {
          $item.find('input:checked, a, button').attr('tabindex', '-1');
        }
      });
    }

    bindEvents() {
      this.el.tabItem.target.forEach((item, idx) => {
        const $item = $q(item);

        $item.off('click').on('click', () => {
          this.el.mainSlide.slideTo(idx, 300);
        });
      });

      this.el.mainSlide.off('slideChange').on('slideChange', () => {
        const activeIndex = this.el.mainSlide.activeIndex;
        commonTab.selectTab(this.el.component.find(this.selector.tabWrap).target[0], activeIndex);
        
        const event = document.createEvent('CustomEvent');
        event.initCustomEvent('slideChange', false, true, {
          activeIndex,
          activeEl: this.el.mainSlide.slides[activeIndex],
        });
        this.el.mainSlide.el.dispatchEvent(event);

        
        setTimeout(() => {
          this.setTabIndex(this.el.mainSlide.activeIndex);
        }, 500);
      });

      this.el.mainSlide.off('slideChangeTransitionEnd').on('slideChangeTransitionEnd', () => {
        const allWrapper = this.el.component.find(selector.tabComponent);
        const activeWrapper = allWrapper.eq(this.el.mainSlide.activeIndex);

        if (!OffersProductGrid.instances.has(activeWrapper.target[0])) {
          new OffersProductGrid(activeWrapper.target[0]);
        }

        this.el.mainSwiper.find('.offers-product-card-grid__tab-panel').attr('aria-hidden', true);
        activeWrapper.attr('aria-hidden', false);
      });
    }
  }
  
  class OffersProductGrid {
    constructor(component) {
      this.selector = {
        cardItemWrap: '.offers-product-card-grid__item-wrap',
        cardItem: '.offers-product-card-grid__item',
        viewMoreBtn: '.offers-product-card-grid__cta-more .cta',
        priceArea: '.offers-product-card-grid__price',
      };

      this.el = {
        component: $q(component),
      };

      this.handler = {
        resize: this.resize.bind(this),
      };

      OffersProductGrid.instances.set(component, this);

      this.setElements();

      this.setInstances();

      this.init();
    }

    setElements() {
      this.el.componentWrap = this.el.component.closest('.offers-product-card-grid');
      this.el.cardItemWrap = this.el.component.find(this.selector.cardItemWrap);
      this.el.cardItem = this.el.component.find(this.selector.cardItem);
      this.el.viewMoreBtn = this.el.componentWrap.find(this.selector.viewMoreBtn);
      this.el.mainSlide = this.el.component.closest('.swiper-container').target[0].swiper;
      this.el.cardTab = this.el.componentWrap.find('.offers-product-card-grid__tab-panel');
      this.el.activeCardTab = this.el.componentWrap.find('.offers-product-card-grid__tab-panel.swiper-slide-active');
      this.setCard = null;
      this.desktopFlag = false;
      this.mobileFlag = false;
      
      this.isVisible = window.sg.common.utils.isVisible;
      this.isChangeHeight = false;
      this.activeCardList = null;
    }

    init() {
      this.bindEvents();

      this.resize();
    }

    reInit(element) {
      this.setElements();

      if(element){
        this.activeCardList = $q(element).find(`${this.selector.cardItemWrap}:not(.is-show)`);
        if(this.activeCardList.target.length === 0){
          this.activeCardList = $q(element).find(this.selector.cardItemWrap);
        }
      }else{
        this.activeCardList = null;
      }

      this.setInstances();

      this.bindEvents();
      
      if(element){
        this.setDefault();
        this.devideColumn();
      }else{
        this.resize();
      }
    }

    reInitItem(activeItem) {
      this.setElements();

      this.setSingleInstances(activeItem);

      this.bindEvents();

      // this.resize();
      this.setDefault();
      this.devideColumn();
    }

    setInstances() {
      let oCardList;

      if(this.activeCardList){
        oCardList = this.activeCardList.target;
      }else{
        oCardList = this.el.component.find(selector.cardComponent).target;
      }

      oCardList.forEach((cardElement) => {
        if ($q(cardElement).hasClass('is-show')) {
          window.sg.common.OptionSelector.reInit($q(cardElement));
        }
      });
    }

    setSingleInstances(item) {
      window.sg.common.OptionSelector.reInit(item);
    }

    swiperUpdate(){
      const swiperEl = this.el.component.closest('.swiper-container').target[0];
      swiperManager.slideUpdate(swiperEl);
      swiperManager.slideInitEnd(swiperEl,() => {
        this.el.mainSlide = swiperEl.swiper;
      });
    }

    resize() {
      this.isChangeHeight = false;
      this.activeCardList = null;

      this.setDefault();

      if (BREAKPOINTS.MOBILE < utils.getViewPort().width) {
        if (this.desktopFlag === false) {
          this.desktopFlag = true;
          this.mobileFlag = false;

          el.window.trigger('resize');
        }

        this.devideColumn();
      } else {
        if (this.mobileFlag === false) {
          this.mobileFlag = true;
          this.desktopFlag = false;

          el.window.trigger('resize');
        }
      }
    }

    setDefault() {
      if(this.isVisible(this.el.component.target[0]) && !this.isChangeHeight){
        if(this.el.activeCardTab){
          this.el.cardItem = this.el.cardTab.find(this.selector.cardItem);
        }else{
          this.el.cardItem = this.el.component.find(this.selector.cardItem);
        }
        const resizeList = [this.el.cardItem, this.el.cardItem.find('.offers-product-card-grid__name'), this.el.cardItem.find('.offers-product-card-grid__cta-calculate'), this.el.cardItem.find('.offers-product-card-grid__fiche'), this.el.cardItem.find(this.selector.priceArea), this.el.cardItem.find('.option-selector')];

        resizeList.forEach((a) => {
          a.target.forEach((item) => {
            $q(item).css({
              'height': '',
            });
          });
        });
      }
    }

    devideColumn() {
      if (BREAKPOINTS.MOBILE >= utils.getViewPort().width) {
        //mobile
        return;
      }
      if(this.isVisible(this.el.component.target[0]) && !this.isChangeHeight){
        this.isChangeHeight = true;
        this.el.component.target.forEach((element) => {
          let myItemCol;

          if(this.el.activeCardTab){
            this.el.cardTab.target.forEach((tabContent) => {
              tabContent = $q(tabContent);
              myItemCol = tabContent.find(this.selector.cardItem);
              
              const sliceArr = myItemCol.target;
              const itemColArr = [];
              const cnt = Math.ceil(sliceArr.length / 4);

              for (let i = 0; i <= cnt; i++) {
                let j = 0;
                itemColArr[i] = [];

                while (j < 4) {
                  const divideItem = sliceArr.splice(0, 1);

                  itemColArr[i].push(...divideItem);

                  j++;
                }
              }
              itemColArr.forEach((item) => {
                this.setHeight(item);
              });
            });
          }else{
            myItemCol = $q(element).find(this.selector.cardItem);
            const sliceArr = myItemCol.target;
            const itemColArr = [];
            const cnt = Math.ceil(sliceArr.length / 4);

            for (let i = 0; i <= cnt; i++) {
              let j = 0;
              itemColArr[i] = [];

              while (j < 4) {
                const divideItem = sliceArr.splice(0, 1);

                itemColArr[i].push(...divideItem);

                j++;
              }
            }

            itemColArr.forEach((item) => {
              this.setHeight(item);
            });
          }
        });   

        const heightWrap = this.el.component.target[0].scrollHeight;
        if (heightWrap > parseInt(this.el.component.target[0].style.height,0)) {
          this.el.component.target[0].style.height = `${heightWrap}px`;
          this.el.component.target[0].parentNode.style.height = `${heightWrap}px`;
        }
      }
    }

    setHeight(elList) {
      const cardWrap = $q(elList);
      const resizeList = [cardWrap.find(this.selector.priceArea),cardWrap.find('.offers-product-card-grid__name'), cardWrap.find('.offers-product-card-grid__cta-calculate'),cardWrap.find('.offers-product-card-grid__fiche'), cardWrap.find('.option-selector'),cardWrap];

      resizeList.forEach((item) => {
        const setHeightArr = [];

        item.target.forEach((a) => {
          setHeightArr.push($q(a).outerHeight());
        });
  
        const maxHeight = Math.max.apply(null, setHeightArr);
  
        item.target.forEach((card) => {
          $q(card).css({
            'height': `${maxHeight}px`,
          });
        });
      });
    }

    activeView() {
      // firstSet = true;
      const maxCnt = parseInt(this.el.componentWrap.attr('data-items'));
      const activevIdx = this.el.mainSlide.activeIndex;

      this.setCard = this.el.component.find(`${this.selector.cardItemWrap}:not(.is-show)`);
      const $newFirstCard = this.setCard.eq(0);

      this.setCard.target.forEach((item, idx) => {
        const $item = $q(item);

        if (idx < maxCnt) {
          $item.addClass('is-show');

          lazyLoad.setLazyLoad();

          setTimeout(() => {
            $item.addClass('is-fade');
            this.setSingleInstances($q(item));

            lazyLoad.setLazyLoad();
          }, 200);
        }
      });

      setTimeout(() => {
        $newFirstCard.find('.offers-product-card-grid__item .pd-wishlist-cta').focus();
 
        setTimeout(() => {
          this.swiperUpdate();
        }, 30);
      }, 150);

      if(this.activeCardList){
        this.isChangeHeight = false;  
        this.setDefault();
        this.devideColumn();
      }else{
        el.window.trigger('resize');
      
        this.resize();
      }
      this.el.mainSlide.slideTo(activevIdx, 0);

      this.setCard = null;
    }

    bindEvents() {
      window.removeEventListener('resize',this.handler.resize);
      window.addEventListener('resize', () => {
        this.handler.resize();
      });


      document.removeEventListener('scroll',this.devideColumn);
      document.addEventListener('scroll', () => {
        this.devideColumn();
      });
    }
  }

  const init = () => {
    if (!$q(selector.component).target.length) {
      return;
    }

    setLocation();

    lazyLoad.initAll();
    lazyLoad.setLazyLoad();

   
    $q(selector.component).target.forEach((element) => {
      if (!OffersProductWrap.instances.has(element)) {
        new OffersProductWrap(element);
      }
    });

    $q(`${selector.tabComponent}.swiper-slide-active`).target.forEach((element) => {
      if (!OffersProductGrid.instances.has(element)) {
        new OffersProductGrid(element);
      } else { //When call init() multiple times.
        const firstImg = element.querySelector('.offers-product-card-grid__image .image__main');
        if (firstImg !== null) {
          if (firstImg.complete) {
            OffersProductGrid.instances.get(element).resize(); 
          } else {
            const $element = $q(element);
            $element.find('.offers-product-card-grid__image .image__main').on('load',() => {
              OffersProductGrid.instances.get(element).resize();
              swiperManager.slideUpdate($element.closest('.swiper-container').target[0]);
            });
          }
        }
      }
    });
  };

  function goScroll() {
    if (location.hash !== '' && location.hash !== '#') {
      setTimeout(() => {
        const $target = $q(`.offers-product-card-grid__tab .tab__item-title[aria-controls="${location.hash.replace('#','')}"], .offers-product-card-grid__tab .tab__item[id="${location.hash.replace('#','')}"] .tab__item-title`).parent();
        if ($target.target.length > 0) {
          const top = document.body.scrollTop || document.documentElement.scrollTop;
          window.scrollTo(0, top + $target.offset().top);
        }
      }, 400);
    }
  }

  function setLocation() {
    const tab2 = $q(selector.tab);
    if (!tab2.target.length) {
      return;
    }

    tab2.addClass('tab');
    
    const tabEl = document.querySelectorAll(selector.tab);
    [...tabEl].forEach((tabEl) => {
      const isAllyTab = tabEl.querySelectorAll('.tab__item-title[aria-controls]').length > 0;
      if (location.hash !== '' && isAllyTab === false) {
        hashActiveTab = $q(document.querySelector(`${location.hash}${selector.tabItem}`)).index(); //Tabs without aria-controls before accessibility processing are expected to not call init() and reInit() in AEM 
        window.sg.common.tab.init(tabEl, hashActiveTab);
      } else {
        window.sg.common.tab.init(tabEl, ($q(tabEl).find('.tab__item--active').index() || 0));
      }
    });
  }

  function setReinit(element){
    let $componentEl;
    if(element){
      $componentEl = $q(element);
    }else{
      $componentEl = $q(selector.component);
    }
    
    $componentEl.target.forEach((item) => {
      const $item = $q(item);

      $item.find('.basic-swiper').target.forEach((sw) => {
        if(sw.swiper === undefined){
          swiperManager.slideInit(sw);
        }else{
          swiperManager.slideUpdate(sw);
        }
      });

      if (OffersProductWrap.instances.has(item)) {
        const instances = OffersProductWrap.instances.get(item);
        instances.reInit();
      } else {
        new OffersProductWrap(item);
      }

      setLocation();

      $item.find(selector.tabComponent).target.forEach((tabEl) => {
        const $tabEl = $q(tabEl);

        if ($tabEl.hasClass('swiper-slide-active')) {
          if (!OffersProductGrid.instances.has(tabEl)) {
            new OffersProductGrid(tabEl);
          } else {
            const instances =  OffersProductGrid.instances.get(tabEl);
            instances.reInit(element);
          }
        }
      });
    });
  }

  const reInit = (element) => {
    lazyLoad.setLazyLoad();
    setReinit(element);
  };

  /**
   * grid를 다시 그리고, optionSelector를 reInit함
   * @func reInitItem
   * @param {HTMLElement} el optionSelector인자를 받는걸로 확인
   */
  const reInitItem = (item) => {
    lazyLoad.setLazyLoad();

    const $activeItem = $q(item);
    const $activeWrap = $activeItem.closest(selector.tabComponent).target[0];

    if (OffersProductGrid.instances.has($activeWrap)) {
      const gridInstances =  OffersProductGrid.instances.get($activeWrap);
      gridInstances.reInitItem($activeItem);
    }
  };

  /**
   * view more클릭시 모션실행
   * @func activeView
   * @param {HTMLElement} el view more 버튼
   * @example window.sg.components.offersProductCardGrid.activeView($('.offers-product-card-grid__cta-more a')[0])
   */
  const activeView = (btnEl) => {
    requestAnimationFrame(() => {
      $q(btnEl).closest(selector.tabComponent).target.forEach((element) => {
        if (OffersProductGrid.instances.has(element)) {
          const instances = OffersProductGrid.instances.get(element);
          instances.activeView();
        }
      });
    });
  };

  OffersProductWrap.instances = new WeakMap();
  OffersProductGrid.instances = new WeakMap();

  $q.ready(() => {
    init();
    isLoadInit = false;
  });
  $q.load(goScroll);

  window.sg.components.offersProductCardGrid = {
    init,
    reInit,
    reInitItem,
    activeView,
    goScroll,
  };
})();

(function (win, $) {

	var isNotNull = function(_str){
		return !fnIsNull(_str);
	};

	var escapeHtml = function(text) {
		var newText = text;
		if(isNotNull(newText)){
			newText = newText
				.replace(/&/g, "&amp;")
				.replace(/</g, "&lt;")
				.replace(/>/g, "&gt;")
				.replace(/"/g, "&quot;")
				.replace(/'/g, "&#039;");
		}
		return newText;
	};

	function getSavePriceRate(originalPrice, savePrice, decimalPoint = 2) {
		const rate = (parseFloat(savePrice) / parseFloat(originalPrice)) * 100;
		return String(Number(rate.toFixed(decimalPoint))).replace('.', ',');
	};
	
	var offerProductCardListFn = function(){
		//i18n 언어 셋팅
		Granite.I18n.setLocale($('#language').val());
		const RATING_I18n = Granite.I18n.get("Rating");
		const RATING_PRODUCT_I18n = Granite.I18n.get("Product Ratings");
		const NUMBER_RATING_I18n = Granite.I18n.get("Number Of Ratings");
		
		const utils = window.sg.common.utils;
		
		// PageModel 변수 ( body.html )
		const siteCode = $('#siteCodeDev').val() || $('#siteCode').val();
		const storeDomain = $('#storeDomain').val();
		const searchDomain = $('#searchDomainDev').val() || $('#searchDomain').val();
		const scene7domain = $('#scene7domain').val();
		const apiStageInfo = $('#apiStageInfoDev').val() || $('#apiStageInfo').val();
		const shopIntegrationFlag = $('#shopIntegrationFlagDev').val() || $('#shopIntegrationFlag').val();
		const storeWebDomain = $("#storeWebDomain").val();
		
		// OfferProductCardListModel metadata
		let cartUrl = $('[name="opl_cartUrl"]').val();
		const priceDisplayYn = $('[name="opl_priceDisplayYn"]').val();
		const priceCurrency = $('[name="opl_priceCurrency"]').val();
		const emiUrl = $('[name="opl_emiUrl"]').val();
		const financingUrl = $('[name="opl_financingUrl"]').val();
		const hybrisApiJson = $('[name="opl_hybrisApiJson"]').val(); 		//hybris api 호출 시 json 으로 호출하는 국가 ( N : jsonp )
		const calculateFinancingYN = $('[name="opl_calculateFinancingYn"]').val();
		const pageTrack = $('[name="opl_pageTrack"]').val();
		const pageTrackEppHome = (pageTrack == 'epp home')?true:false;

		const isGPv2 = (shopIntegrationFlag === 'GPv2')?true:false;
		const isHybrisIntg = (shopIntegrationFlag === 'Hybris-intg')?true:false;
		const isNewHybris = (shopIntegrationFlag === 'Hybris-new')?true:false;				//new-hybris
		const isGlobal = !isGPv2 && !isHybrisIntg && !isNewHybris;							//new-hybris
		const isNonshop = ( fnIsNull(shopIntegrationFlag) || shopIntegrationFlag === 'None') ? true : false;

		let useCTAButton = "false"; // 20200520 CTA버튼 노출 관련 설정 값
		let useEnergyLabel = "false"; // 20200520 ENERGY LABEL 추가
		let useRepairbility = "false"; // 20200520  Repairbility 추가
		let useUserRatingContainer = "false";
		let ratingTabAnchorId = "";

		const oplImagePreset = "?$252_252_PNG$";
		const oplImageLazyloadPreset = "LazyLoad_Home";
		
		var isButtonShow = false;
		
		let defaultFilterObjList = [];
		let defaultFilterCodeList = []; // defaultParameter가 search api 에 parameter로 전달 시 사용되는 code 로 변환된 데이터  ( 첫 로딩 시 셋팅된다 )
		let isDefaultFilter = false;

		var islogin = false;

		// [EPP] 관련 변수 추가
		const isEppSite = checkEppSite();
		if(isEppSite && window.sg.epp == null){
			window.sg.epp = {};
			window.sg.epp.common = {};
		}
		const eppCompanyCode = isEppSite ? window.sg.epp.common.companyCode : "";
		if(siteCode === "in" && isEppSite){
			// epp in 사이트 cart url 적용
			cartUrl = storeWebDomain + "/in/web/store/"+eppCompanyCode+"/cart/";
		}
		const apiSiteInfo = isEppSite ? 'epp/v2' :'b2c';
		
		const eppIsUserGroupPricing = isEppSite ? window.sg.epp.common.isUserGroupPricing : false;
		const eppUserGroupName = eppIsUserGroupPricing ? window.sg.epp.common.groupName : "";

		// api 관련 변수
		let oplSearchApiUrlForType = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/offerpopular/hybris';   		// Searchapi url
		let oplSearchApiUrlForSKU = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/card/detail/hybris';
		if( isGPv2 ){
			oplSearchApiUrlForType = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/offerpopular/gpv2';
			oplSearchApiUrlForSKU = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/card/detail/gpv2';
		} else if (isGlobal){ 
			oplSearchApiUrlForType = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/offerpopular/global';
			oplSearchApiUrlForSKU = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/card/detail/global';
		} else if (isNewHybris){				//new-hybris
			oplSearchApiUrlForType = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/offerpopular/newhybris';
			oplSearchApiUrlForSKU = searchDomain+'/'+apiStageInfo+'/'+apiSiteInfo+'/product/card/detail/newhybris';
		}
		
		let dotcom_multistore = $.cookies.get("dotcom_multistore") ? $.cookies.get("dotcom_multistore").toString() : '';
		
		// 22.09.15 >> ca, ca_fr 국가에서 search API 를 호출 시 "&regionCode=[지역 코드]" 를 포함해서 호출하도록 변경
		let country_region = $.cookies.get("country_region") ? $.cookies.get("country_region") : '';
		
		var shopSiteCd = '';
		if(siteCode == "ae" || siteCode=="ae_ar"){
			shopSiteCd = isNotNull(dotcom_multistore) ? dotcom_multistore : siteCode;
		} else if(siteCode == "levant"){
			shopSiteCd = "jo";
		} else if(siteCode == "levant_ar"){
			shopSiteCd = "jo_ar";
		} else if(siteCode == "n_africa"){
			shopSiteCd = "ma";
		}
		
		let loadPageCount = 1;
		
		var componentNum, tabNum;
		
		var tabBuildCount = 0;

		//제품 전체 데이터
		/* productListData 구조 : 
		 * [// component 단위
		 *  	{
		 *  	 index : [
		 *  		product Info,
		 *  		...
		 *  		]
		 *  	}
		 *  ]
		 */
		var productListData = [[]];
		
		var $oplComponent = $(".js-offers-product-list");
		
		var $emiPopupEl = $('.eip-popup');

		var clickColorChip = false; // [Global, hybrisIntg] color옵션 변경 시 메모리옵션이 최대값으로 선택되는 로직

		var arrayContains = function(array, element){
			for (var i=0; i<array.length; i++) {
				if (array[i] === element) {
					return true;
				}
			}
			return false;
		};

		var productPreset = function(presetStr, imgUrl){
			var preset = "?$"+presetStr;
			var tempImgUrl = imgUrl.toLowerCase();
	
			if (tempImgUrl.indexOf(".jpg") > -1) {
				preset += "_JPG$";
			} else if (tempImgUrl.indexOf(".jpeg") > -1) {
				preset += "_JPG$";
			} else if (tempImgUrl.indexOf(".png") > -1) {
				preset += "_PNG$";
			} else if (tempImgUrl.indexOf(".gif") > -1) {
				preset += "_GIF$";
			} else {
				preset += "_PNG$";
			}
	
			return preset;
		};

		/**
		 * imageUrl 앞에 scene7domain을 붙여준다
		 * 
		 * @param imgUrl 이미지 url
		 * @param presetType : lazy, prd_desktop, prd_mobile, none 
		 * @param iconFl icon 여부
		 * @return newUrl scene7domain 을 붙인 imgUrl
		 */
		var oplImgDomain = function(imgUrl, presetType, iconFl) {
			var newUrl = "";
			var useScene7domain = scene7domain;
			if (imgUrl.indexOf("http:") > -1 || imgUrl === "" ||
				imgUrl.indexOf("//stg-images.samsung.com/") > -1 || imgUrl.indexOf("//images.samsung.com/") > -1 || imgUrl.indexOf("image.samsung.com/") > -1 ||
				imgUrl.indexOf("//stg-images.samsung.com.cn/") > -1 || imgUrl.indexOf("//images.samsung.com.cn/") > -1 || imgUrl.indexOf("image.samsung.com.cn/") > -1) {
				newUrl = imgUrl;
			}else{
				if(iconFl){
					useScene7domain = useScene7domain.replace("/image/","/content/");
				}
				newUrl = useScene7domain + imgUrl;
			}

			if(newUrl.indexOf("?$") < 0){
				if(presetType === "lazy"){
					newUrl += productPreset(oplImageLazyloadPreset, newUrl);
				} else {
					newUrl += oplImagePreset;
				}
			}
			return newUrl;
		};
		
		/**
		 * Price 영역
		 * 
		 * Global - monthlyPriceInfo, priceDisplay, formattedPriceSave
		 * Hybris-Intg - monthlyPriceInfo, priceDisplay, promotionPriceDisplay, price, promotionPrice
		 * GPv2 - leasingInfo, priceDisplay, promotionPriceDisplay, listPriceDisplay, price. promotionPrice, listPrice
		 *
		 */
		var buildPriceArea = function(product, upperStock){
			var productCardTemplate = "";
			var frontModel = product.modelList[product.frontModelIdx];
			var priceDisplay = frontModel.priceDisplay;
			if((siteCode==="nl" || siteCode==="be" || siteCode ==="be_fr") && isNotNull(priceDisplay)){
				priceDisplay = deleteCurrency(priceDisplay, priceCurrency);
			}
			
			var emiPrice = "";
			
			var usePriceArea = false;
			if(priceDisplayYn === "Y" && isNotNull(priceDisplay) && (siteCode !== "pl" || upperStock !== "OUTOFSTOCK")){
				/* pl 국가이면서 Out Of Stock일경우 가격 미노출 */
				usePriceArea = true;
			}
			
			//Hybris Intg > tradeIn price text 표시
			var tradeInPriceText = "";
			
			if(isHybrisIntg && isNotNull(frontModel.tradeInPriceText) && !isMiniCardType) {
				tradeInPriceText = frontModel.tradeInPriceText;
			}
			
			// SEDA Only, SEROM Only 추가
			let prodPriceClass = "";
			if((siteCode === "br" && isNotNull(frontModel.formattedPriceSave)) || siteCode === "ro" || siteCode === "bg"){
				prodPriceClass = " offers-product-card-grid__price--type2";
			}
			productCardTemplate +=
				'<div class="offers-product-card-grid__price'+prodPriceClass+'">';
			if(usePriceArea){
				var promotionDisplay = "";
				var currentDisplay = priceDisplay;
				
				// monthlyPrice data
				var useMonthlyPrice = false;
				var monthlyPrice = "";
				var tenureVal = "";
				var leasingInterest = "";
				
				// leasingInfo data
				var useLeasingInfo = false;
				var downPaymentFormatted = "";
				var tenureUnit = "";
				var monthlyRate = "";
				
				var usUseTradeInDiscount = false;
				
				//[US] tradeInDiscount 가 있는 경우 > listPrice : 원가 , tradeInDiscount : save
				if(siteCode==="us" && isNotNull(frontModel.tradeInDiscount) && isNotNull(frontModel.listPrice)
						&& frontModel.tradeInDiscount != 0 && frontModel.listPrice != 0 && ( Number(frontModel.listPrice) > Number(frontModel.tradeInDiscount))){
					usUseTradeInDiscount = true;
					priceDisplay = currencyComma(frontModel.listPrice, priceCurrency);
					
					var usPromotionPriceForTradeIn = frontModel.listPrice;
					if(isNotNull(frontModel.promotionPrice)){
						usPromotionPriceForTradeIn = frontModel.promotionPrice;
					}
					
					var usCurrentPrice = Number(usPromotionPriceForTradeIn) - Number(frontModel.tradeInDiscount);
					
					currentDisplay = 'From '+currencyComma(usCurrentPrice, priceCurrency)+' with trade-in<sup>θ</sup>';
				}
				//new-hybris
				if(isGPv2 || isNewHybris){
					if(isNotNull(frontModel.leasingInfo) && siteCode === "nl" && frontModel.upgrade === "Y"){
						// nl 사이트만 leasingInfo 사용
						var leasingInfo = frontModel.leasingInfo;
						if(isNotNull(leasingInfo.monthlyRate) && isNotNull(leasingInfo.downPaymentFormatted)){
							monthlyRate = deleteCurrency(leasingInfo.monthlyRate, priceCurrency);
							
							tenureVal = leasingInfo.tenureVal;
							downPaymentFormatted = deleteCurrency(leasingInfo.downPaymentFormatted, priceCurrency);
							tenureUnit = leasingInfo.tenureUnit;
							
							useLeasingInfo = true;
						}
							
					} else if ( isNotNull(frontModel.monthlyPriceInfo)
							&& isNotNull(frontModel.monthlyPriceInfo.leasingMonthly) && isNotNull(frontModel.monthlyPriceInfo.leasingMonths) && isNotNull(frontModel.monthlyPriceInfo.interest)){
						monthlyPrice = frontModel.monthlyPriceInfo.leasingMonthly;
						monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
						tenureVal = frontModel.monthlyPriceInfo.leasingMonths;
						leasingInterest = frontModel.monthlyPriceInfo.interest;

						useMonthlyPrice = true;
					}
					
					promotionDisplay = frontModel.promotionPriceDisplay;

					if((siteCode==="nl" || siteCode==="be" || siteCode ==="be_fr") && isNotNull(promotionDisplay)){
						promotionDisplay = deleteCurrency(promotionDisplay, priceCurrency);
					}
					
					//[EPP] nl/be/be_fr leasing 정보사용 예외처리 (2022.08.24)
					if((siteCode==="nl" || siteCode==="be" || siteCode ==="be_fr" || siteCode ==="pl" ) && isEppSite){
						useLeasingInfo = false;
						useMonthlyPrice = false;
					}
				} else {
					if( isNotNull(frontModel.monthlyPriceInfo) && 
							isNotNull(frontModel.monthlyPriceInfo.leasingMonthly) && isNotNull(frontModel.monthlyPriceInfo.leasingMonths) && 
							(siteCode === "au" || siteCode === "nz" || siteCode === "ae" || siteCode === "my" || siteCode === "sg" || siteCode === "ca" || siteCode === "ca_fr" || 
							siteCode === "it" || siteCode === "se" || siteCode === "dk" || siteCode === "fi" || siteCode === "no" || siteCode === "es" || siteCode === "pt" || 
							siteCode === "th" || siteCode === "tw" || siteCode === "ru" || siteCode === "ch" || siteCode === "ch_fr")){
						var monthlyPriceInfo = frontModel.monthlyPriceInfo;
						monthlyPrice = monthlyPriceInfo.leasingMonthly;
						monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
						tenureVal = monthlyPriceInfo.leasingMonths;

						useMonthlyPrice = true;
					}
					if(isHybrisIntg){
						promotionDisplay = frontModel.promotionPriceDisplay;
					}
				}
				
				if(isNotNull(promotionDisplay) && !usUseTradeInDiscount){
					currentDisplay = promotionDisplay;
				}
				

				//price area build
				// SAMCOL VAT free
				if(siteCode === "co" && frontModel.vatEligible === "true"){
					productCardTemplate +=
						'<div class="offers-product-card-grid__price-samcol">'+
							'<div class="offers-product-card-grid__price-samcol-price">'+Granite.I18n.get("Price without VAT")+': '+frontModel.vatFreePriceDisplay+'</div>';
					if(isNotNull(promotionDisplay)){
						productCardTemplate +=
							'<p class="offers-product-card-grid__price-samcol-special">'+Granite.I18n.get("Price with discount")+': '+promotionDisplay+'</p>';
					}
					productCardTemplate +=
							'<p class="offers-product-card-grid__price-samcol-rrp">'+Granite.I18n.get("Price before")+': <del>'+priceDisplay+'</del></p>'+
						'</div>';
				}else{
					if( (upperStock === "LEARNMORE" || upperStock === "NOORDER") && 
							(siteCode === "nl" || siteCode === "be" || siteCode === "be_fr")){
						productCardTemplate +=
							'<div class="offers-product-card-grid__price-current">'+
								'<span class="hidden">'+Granite.I18n.get("Current Price") +': </span>'+
								'<span class="offers-product-card-grid__price-current-payment">'+
									priceDisplay+
								'</span>'+
							'</div>'+
							'<div class="offers-product-card-grid__price-next"></div>';
						emiPrice = frontModel.price;
					} else if(((isGPv2 || isNewHybris) && upperStock !== "LEARNMORE" && upperStock !== "NOORDER") || 
							(!isGPv2 && !isNewHybris && upperStock !== "LEARNMORE")){				//new-hybris
						if( isNotNull(tradeInPriceText) ){
							productCardTemplate += 
							'<div class="offers-product-card-grid__price-current">'+
								'<span class="hidden">'+Granite.I18n.get("Monthly Price")+': </span>'+
								'<span class="offers-product-card-grid__price-current-text">'+
									tradeInPriceText+
								'</span>'+
							'</div>';
						} else if(siteCode === "ro" || siteCode === "bg") {
							productCardTemplate +=
							'<div class="offers-product-card-grid__price-current">'+
								'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
								'<span class="offers-product-card-grid__price-current-payment-serom">'+
									currentDisplay+
								'</span>'+
							'</div>';
						} else if(useMonthlyPrice && !usUseTradeInDiscount){
							productCardTemplate +=
								'<div class="offers-product-card-grid__price-current">'+
									'<span class="hidden">'+Granite.I18n.get("Monthly Price")+': </span>'+
									'<span class="offers-product-card-grid__price-current-text">'+
										Granite.I18n.get("From {0}/mo",["</span><span class=\"offers-product-card-grid__price-current-payment\">"+monthlyPrice])+
									'</span>'+
									'<span class="offers-product-card-grid__price-current-text"> ';
									if(isNotNull(leasingInterest) && siteCode !== "pe" && siteCode !== "cl" && siteCode !== "mx"){
										if(siteCode === "co"){
											productCardTemplate+=
												Granite.I18n.get("for {0} mos",[tenureVal]);
										}else{
											productCardTemplate+=
												Granite.I18n.get("for {0} mos at {1}% APR",[tenureVal, leasingInterest]);
										}
									} else {
										productCardTemplate+=
											Granite.I18n.get("for {0} mos",[tenureVal]);
									}
									productCardTemplate+=
									'</span>'+
									'<span class="offers-product-card-grid__price-current-text"> '+
										Granite.I18n.get("or")+' '+
										currentDisplay+
									'</span>'+
								'</div>';
						} else if(useLeasingInfo){

							if(downPaymentFormatted !== "" && tenureUnit !== "" && tenureVal !== "" && monthlyRate !== ""){
								var leasingText = " " + downPaymentFormatted + " + " + 
								tenureVal + " x " +
								monthlyRate + "/" + 
								Granite.I18n.get(tenureUnit);

								productCardTemplate +=
									'<div class="offers-product-card-grid__price-current">'+
										'<span class="hidden">'+Granite.I18n.get("Monthly Price")+': </span>'+
										'<span class="offers-product-card-grid__price-current-text">'+
											currentDisplay+
										'</span>'+
										'<span class="offers-product-card-grid__price-current-text"> '+
											Granite.I18n.get("or")+' '+ leasingText+
										'</span>'+
									'</div>';
							}
						} else if(siteCode === "br") {
							var formattedPriceSave = isNotNull(frontModel.formattedPriceSave)?frontModel.formattedPriceSave:"";
							var rrpPriceDisplay = isNotNull(frontModel.rrpPriceDisplay)?frontModel.rrpPriceDisplay:"";

							if(isNotNull(rrpPriceDisplay) && isNotNull(formattedPriceSave)){
								productCardTemplate +=
								'<div class="offers-product-card-grid__price-next">'+
									'<span class="offers-product-card-grid__price-suggested">'+
										'<span class="hidden">Original Price: </span>'+
										'<del>'+rrpPriceDisplay+'</del>'+
									'</span>'+
									'<span class="offers-product-card-grid__price-save">'+
										'<span class="offers-product-card-grid__price-save-text">'+
											formattedPriceSave+
										'</span>'+
									'</span>'+
								'</div>';
							}

							productCardTemplate +=
								'<div class="offers-product-card-grid__price-current">'+
									'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
									'<span class="offers-product-card-grid__price-current-payment">'+
										currentDisplay+
									'</span>'+
									'<span class="offers-product-card-grid__price-current-payment-unit"> à vista</span>'+
								'</div>';
						} else {
							productCardTemplate +=
								'<div class="offers-product-card-grid__price-current">'+
									'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
									'<span class="offers-product-card-grid__price-current-payment">'+
										currentDisplay+
									'<span>'+
								'</div>';
						}
						
						//Save Text 영역
						//2023.06.19 SEROM 국가 .offers-product-card-grid__price-next 영역 미노출
						if(siteCode !== "ro" && siteCode !== "bg" && siteCode !== "br") {
							productCardTemplate +=
									'<div class="offers-product-card-grid__price-next">';
							if(isGPv2 || isNewHybris){							//new-hybris
								if(isNotNull(promotionDisplay)){
									var listPrice = 0;
									if(frontModel.listPrice != null){
										listPrice = parseFloat(frontModel.listPrice) - parseFloat(frontModel.price);
									}
									
									var savePrice = parseFloat(frontModel.price) - parseFloat(frontModel.promotionPrice);
									
									if(usUseTradeInDiscount){
										savePrice = Number(frontModel.listPrice) - usCurrentPrice;
										frontModel.saveText = currencyComma(savePrice, priceCurrency);
									}
									//COMP6FE-1599 [EPP] SEPOL MSRP Price 추가건 : && !(checkEppSite() && siteCode === "pl") 추가								
									if(savePrice !== 0 && isNotNull(frontModel.saveText) && !(checkEppSite() && siteCode === "pl") ){
										var saveText = frontModel.saveText;
										
										if(eppIsUserGroupPricing){
											saveText = savePrice;
										}
										productCardTemplate += 
											'<span class="offers-product-card-grid__price-suggested">';
										if(siteCode === "nl" || siteCode === "be" || siteCode === "be_fr" || siteCode === "de"){
											/* SEBN, DE 국가 정상가 앞에 From 문구 추가*/
											productCardTemplate +=
												'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
												Granite.I18n.get("From {0}",['<del>'+priceDisplay+'</del>']);
										} else if(siteCode === "pl" && frontModel.lowestWasPrice === "0"){
											productCardTemplate +=
												'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>';
										} else {
											productCardTemplate +=
												'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
												'<del>'+priceDisplay+'</del>';
										}
										productCardTemplate +=
											'</span> ';
										if(siteCode !== "nl" && siteCode !== "be" && siteCode !== "be_fr"){
											/* GPv2 국가 save 문구 노출
											* SEBN 국가 save 문구 미노출 처리 */
											productCardTemplate +=
											'<span class="offers-product-card-grid__price-save">'+
												'<span class="offers-product-card-grid__price-save-text">';
												
												if(siteCode === "pl" && frontModel.lowestWasPrice === "0"){
													productCardTemplate +=
														'<span class="hidden">'+Granite.I18n.get("Save Price")+': </span>';
												} else{
													productCardTemplate +=
														Granite.I18n.get("Save {0}", [currencyComma(saveText, priceCurrency)]);
												}
												
											productCardTemplate +=
												'</span>'+
											'</span>';
										}
									} else if(listPrice > 0 && (siteCode === "nl" || siteCode === "be" || siteCode === "be_fr")){
										productCardTemplate += 
											'<span class="offers-product-card-grid__price-suggested">'+
												'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
												'<span>'+Granite.I18n.get("Listprice")+'</span>  '+
													currencyComma(frontModel.listPrice, priceCurrency)+
											'</span>';
										}
									
										//COMP6FE-1599 [EPP] SEPOL MSRP Price 추가건 : msrpPrice 추가	
										if ( checkEppSite() && siteCode === "pl" ) {
											let msrpPrice = '';
											if ( isNotNull(frontModel.msrpPrice) ){
												msrpPrice = currencyComma(frontModel.msrpPrice, priceCurrency);
												productCardTemplate += 
													'<span class="offers-product-card-grid__price-suggested">'+
														'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
														'<span>'+Granite.I18n.get("Listprice")+'</span>  '+
														msrpPrice+
													'</span>';
											}
										}
										emiPrice = frontModel.promotionPrice;
								} else {
									emiPrice = frontModel.price;
								}
							} else if (isHybrisIntg){
								emiPrice = frontModel.price;
								if(isNotNull(frontModel.promotionPrice) && isNotNull(frontModel.promotionPriceDisplay) && (Number(frontModel.price) > Number(frontModel.promotionPrice))){
									emiPrice = frontModel.promotionPrice;
									//promotionPrice 를 사용하는 경우
									productCardTemplate += 
										'<span class="offers-product-card-grid__price-suggested">'+
											'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
											'<del>'+priceDisplay+'</del>'+
										'</span>';
									//&EPPONLY CRHQ-8126 [B2C] MY(SME) PF save price 표기 추가
									if ( isEppSite && siteCode === "my" ){
										var savePrice = parseFloat(frontModel.price) - parseFloat(frontModel.promotionPrice);
										productCardTemplate +=
											'<span class="offers-product-card-grid__price-save">'+
												'<span class="offers-product-card-grid__price-save-text">'+
													Granite.I18n.get("Save {0}", [currencyComma(savePrice, priceCurrency)])+
												'</span>'+
											'</span>';	
									}								
								}
							} else {
								//global

								//2023.06.28 it국가 옴니버스 price 적용
								if(siteCode == "it") {
									if( frontModel.lowestWasPrice === undefined ) {
										// lowestWasPrice 키값이 없을 때 기존 로직 적용
										if(isNotNull(frontModel.formattedPriceSave)){
											productCardTemplate += 
												'<span class="offers-product-card-grid__price-suggested">'+
													'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
													frontModel.formattedPriceSave+
												'</span>';
										}
									} else {
										// lowestWasPrice 키값이 있을때 lowestWasPrice - promotionPrice > 0 이면 신규 영역 추가
										if( isNotNull(frontModel.lowestWasPrice) && isNotNull(frontModel.promotionPrice) ){
											const savePrice = parseFloat(frontModel.lowestWasPrice) - parseFloat(frontModel.promotionPrice);
											if( savePrice > 0 ){
												const savePriceRate = getSavePriceRate(frontModel.lowestWasPrice, savePrice, 2);
												productCardTemplate += 
													'<span class="offers-product-card-grid__price-suggested">'+
														'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
														'<del>'+ currencyComma(frontModel.lowestWasPrice, priceCurrency) +'</del>' + 
													'</span>'+
													'<span class="offers-product-card-grid__price-save">'+
														'<span class="offers-product-card-grid__price-save-text">'+
															Granite.I18n.get("Save the {0}%", savePriceRate)+
														'</span>'+
													'</span>';
											}
										}
									}
								} else {
									if(isNotNull(frontModel.formattedPriceSave)){
										productCardTemplate += 
											'<span class="offers-product-card-grid__price-suggested">'+
												'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
												frontModel.formattedPriceSave+
											'</span>';
									}
								}
							}
						}
						
						if(siteCode === "br"){
							var afterTaxPriceDisplay = isNotNull(frontModel.afterTaxPriceDisplay)?frontModel.afterTaxPriceDisplay:"";
							var monthlyPriceInfo = frontModel.monthlyPriceInfo;
							monthlyPrice = monthlyPriceInfo.leasingMonthly;
							monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
							tenureVal = monthlyPriceInfo.leasingMonths;
							
							productCardTemplate += 
								'<div class="offers-product-card-grid__price-description">'+
									afterTaxPriceDisplay + ' em ' + tenureVal  + 'x ' + monthlyPrice + ' sem juros '+
								'</div>';
						} else if(siteCode === "co" && isNotNull(leasingInterest)) {
							productCardTemplate += 
								'</div>'+
								'<div class="offers-product-card-grid__price-description">*Aplican condiciones</div>';
						} else if(siteCode === "ro" || siteCode == "bg" && isNotNull(frontModel.priceDisplay)) {
							if(parseInt(frontModel.promotionPrice) < parseInt(frontModel.price)) {
								productCardTemplate += 
								'<div class="offers-product-card-grid__price-description">'+"PR: " + frontModel.priceDisplay +'</div>';
								emiPrice = frontModel.promotionPrice;
							}else {
								emiPrice = frontModel.price;
							}
						}
						else {
							productCardTemplate += 
								'</div>';
						}
						
					}
				}
			}

			productCardTemplate +=
				'</div>';

			if(siteCode === "ro" || siteCode === "bg") {
				productCardTemplate +=
				buildFinancing(frontModel, emiPrice) +
				buildRating(frontModel);
			} else {
				productCardTemplate +=
				buildRating(frontModel) +
				buildFinancing(frontModel, emiPrice);
			}

			if(useCTAButton === "true"){
				//var frontModel = product.modelList[product.frontModelIdx];
				var originPrice = "";
				if(isNotNull(frontModel.price)){
					originPrice = frontModel.price;
				} else if( isNotNull(frontModel.priceDisplay)){
					originPrice = deleteCurrencyComma(frontModel.priceDisplay,priceCurrency);
				}
				// pre order, buy now, add to cart 에 사용
				var wtbTaggingAttr = 
					' an-tr="pd07_offers where to buy compare-'+pageTrack+'-text-link" an-ca="buy cta" an-ac="where to buy" an-la="pf product card:where to buy"';
				var compareCTATaggingAttr = 
					' an-tr="pd07_offers where to buy compare-'+pageTrack+'-text-compare" an-ca="content click" an-ac="feature" an-la="pf product card:compare"';
				var addToCartTaggingAttr = 
					' an-tr="pd07_offers buy cta-'+pageTrack+'-cta-cart page" an-ca="ecommerce" an-ac="addToCart" an-la="pf product card:add to cart"';
				var buyNowToCartTaggingAttr = 
					' an-tr="pd07_offers buy cta-'+pageTrack+'-cta-button cart page" an-ca="ecommerce" an-ac="addToCart" an-la="pf product card:buy now"';
				var buyNowtoLinkTaggingAttr = 
					' an-tr="pd07_offers buy cta-'+pageTrack+'-cta-button" an-ca="buy cta" an-ac="buy now" an-la="pf product card:buy now"';
				var preOrderToCartTaggingAttr = 
					' an-tr="pd07_offers buy cta-'+pageTrack+'-cta-button cart page" an-ca="ecommerce" an-ac="addToCart" an-la="pf product card:pre order"';
				var preOrderToLinkTaggingAttr = 
					' an-tr="pd07_offers buy cta-'+pageTrack+'-cta-button" an-ca="buy cta" an-ac="pre-order" an-la="pf product card:pre order"';
				var bespokeCtaTaggingAttr = 
					' an-tr="pd07_offers bespoke cta-'+pageTrack+'-cta-button" an-ca="ecommerce" an-ac="bespoke" an-la="pf product card:customize yours"';
				var learnmoreCTATaggingAttr = 
					' an-tr="pd07_offers learn more-'+pageTrack+'-cta-link" an-ca="product click" an-ac="offer product card" an-la="learn more click"';
				
				var dataModelCodeAttr = 
					' data-modelcode="'+frontModel.modelCode+'"';
				var dataModelNameAttr = 
					' data-modelname="'+frontModel.modelName+'"';
				var dataShopSkuAttr = '';
				if(isGPv2){
					dataShopSkuAttr = 
					' data-sku-code="'+frontModel.shopSkuCode+'"';
				}
				var taggingAttrForBuy = 
					' data-pimsubtype="'+(isNotNull(product.categorySubTypeEngName) ? product.categorySubTypeEngName.toLowerCase():'')+'"'+
					' data-pvitype="'+(isNotNull(frontModel.pviTypeName) ? frontModel.pviTypeName.toLowerCase():'')+'"'+
					' data-pvisubtype="'+(isNotNull(frontModel.pviSubtypeName) ? frontModel.pviSubtypeName.toLowerCase():'')+'"'+
					' data-modelrevenue="'+originPrice+'"'+
					' data-modelqty="1"'+
					' data-modelcurrency="'+priceCurrency+'"'+
					dataModelCodeAttr + 
					dataModelNameAttr +
					' data-modeldisplay="'+escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "))+'"';
				if(isGPv2 || isHybrisIntg){
					taggingAttrForBuy+=
					' data-modelprice="'+originPrice+'"';
				}else{
					taggingAttrForBuy+=
					' data-discountprice="'+originPrice+'"';
				}
				
				var useConfiguratorUrl = false;
				var hasNoUrl = false;
				var configUrl = "";
				if(isNotNull(frontModel.configuratorUseYn) && frontModel.configuratorUseYn=="Y"){
					useConfiguratorUrl = true;
					if(!isNotNull(frontModel.configuratorUrl) || frontModel.configuratorUrl==''){
						hasNoUrl = true;
					}else{
						configUrl = frontModel.configuratorUrl;
					}
				}
				var ctaTypeUpperCase = frontModel.ctaTypeUpperCase;
				
				var isSimplePD = product.simplePdYN === "Y" ? true : false;
				var buyingPDUrl = frontModel.originPdpUrl;
				if(isSimplePD){
					
					if(isEppSite){
						if(frontModel.originPdpUrl != null){
							buyingPDUrl = frontModel.originPdpUrl.replace("feature.", "buy.");
						}
					} else {
						buyingPDUrl = frontModel.originPdpUrl + "buy/";
					}
				}
				
				var isSTDPD = false;
				if(!isSimplePD && frontModel.marketingpdpYN === "N"){
					isSTDPD = true;
				}
				
				if(isGPv2){
					/* GPv2 standard pd 이동시 benefits 포커스 이동 :: 확인 필요함 */
					var learnmoreUrl = frontModel.pdpUrl;
					if(isSTDPD){
						learnmoreUrl += "#benefits";
					}
					frontModel.pdpUrl = learnmoreUrl;
				}

				var isBespokeCta = false;
				if(isNotNull(frontModel.bespokeCtaUse) && frontModel.bespokeCtaUse == "Y"){
					isBespokeCta = true;
				}
				
				// COMP6FE-1619 [EPP] SIEL Offline 뱃지 추가건
				let buyNowCta = Granite.I18n.get("Buy now");
				if (isEppSite && window.sg.epp && window.sg.epp.common && ( window.sg.epp.common.ecomStoreType === "offline" || window.sg.epp.common.ecomStoreType === "offline_reverse_o2o" ) ){
					buyNowCta = Granite.I18n.get("Buy Online");
				}
								
				productCardTemplate +=
					'<div class="offers-product-card-grid__button">';

				if(isNonshop){
					productCardTemplate +=
						'<a class="cta cta--outlined cta--black" href="'+frontModel.pdpUrl+'"'+dataModelCodeAttr + dataModelNameAttr+
						' aria-label="'+Granite.I18n.get("Learn more") + ':'+ escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "))+'"'+
						learnmoreCTATaggingAttr+'>'
						+ Granite.I18n.get("Learn more") + '</a>';
				}else{
					if(ctaTypeUpperCase === "WHERETOBUY" || ctaTypeUpperCase === "BACKORDER" || ctaTypeUpperCase === "BACKORDERED" || ctaTypeUpperCase === "INSTOCK" || ctaTypeUpperCase === "PREORDER"){
						const ctaText = ctaTypeUpperCase === "PREORDER" ? Granite.I18n.get("pre order") : buyNowCta;
						const taggingAttr = ctaTypeUpperCase === "PREORDER" ? preOrderToLinkTaggingAttr : buyNowtoLinkTaggingAttr;
						const buyNowAriaLabelText = ctaText + ' '+escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "));
						if(useConfiguratorUrl){
							productCardTemplate +=
								'<a class="cta cta--contained cta--black " href="'+configUrl+'" data-link_info="" data-config_info="'+configUrl+'"'+taggingAttrForBuy+
								' aria-label="'+buyNowAriaLabelText+'"'+taggingAttr+'>' + ctaText + '</a>';
						}else{
							productCardTemplate +=
								'<a class="cta cta--contained cta--black " href="'+buyingPDUrl+'" data-link_info="'+buyingPDUrl+'" data-config_info=""'+taggingAttrForBuy+
								' aria-label="'+buyNowAriaLabelText+'"'+taggingAttr+'>' + ctaText + '</a>';
						}
					}else{
						productCardTemplate +=
							'<a class="cta cta--outlined cta--black" href="'+frontModel.pdpUrl+'"'+dataModelCodeAttr + dataModelNameAttr+
							' aria-label="'+Granite.I18n.get("Learn more") + ':'+ escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "))+'"'+
							learnmoreCTATaggingAttr+'>'
							+ Granite.I18n.get("Learn more") + '</a>';
					}
				}
				/*
				if(useConfiguratorUrl){
					if(!frontModel.ctaLocalText || frontModel.ctaLocalText==""){
						productCardTemplate +=
							'<a class="cta cta--contained cta--black js-buy-now" href="javascript:;" link_info="" config_info="'+configUrl+'"'+taggingAttrForBuy+
							buyNowtoLinkTaggingAttr+'>' + Granite.I18n.get("Buy now") + '</a>';
					}else{
						productCardTemplate +=
							'<a class="cta cta--contained cta--black js-buy-now '+ (hasNoUrl ? 'cta--disabled':'') +'" href="javascript:;" '+ (hasNoUrl ? 'aria-disabled="true"':'') +' link_info="" config_info="'+configUrl+'"'+taggingAttrForBuy+
							buyNowtoLinkTaggingAttr+'>' + frontModel.ctaLocalText + '</a>';
					}
				} else if(isNotNull(originPrice)){
					 if(!isNonshop){
						if(ctaTypeUpperCase === "WHERETOBUY" || ctaTypeUpperCase === "BACKORDER" || ctaTypeUpperCase === "BACKORDERED" || ctaTypeUpperCase === "INSTOCK"){
							//bespoke CTA
							if(isBespokeCta){
								productCardTemplate +=
									'<a class="cta cta--contained cta--black" href="'+ frontModel.bespokeCtaLink +'" ' + dataShopSkuAttr + ' link_info="'+ frontModel.bespokeCtaLink+'" config_info=""'+
									bespokeCtaTaggingAttr + '>' + Granite.I18n.get("Customize yours") + '</a>';
							}else if(isSTDPD){
								productCardTemplate +=
									'<a class="cta cta--contained cta--black js-buy-now" href="javascript:;" data-cart="true" ' + dataShopSkuAttr + ' link_info="' + storeDomain + cartUrl + '" config_info=""'+taggingAttrForBuy+
									addToCartTaggingAttr + '>' + Granite.I18n.get("Add to cart") + '</a>';
							} else {
								productCardTemplate +=
									'<a class="cta cta--contained cta--black js-buy-now" href="'+buyingPDUrl+'" link_info="'+buyingPDUrl+'" config_info=""'+taggingAttrForBuy+
									buyNowtoLinkTaggingAttr+'>' + Granite.I18n.get("Buy now") + '</a>';
							}
						} else if (ctaTypeUpperCase === "PREORDER"){
							if(isSTDPD){
								productCardTemplate +=
									'<a class="cta cta--contained cta--black js-buy-now" href="javascript:;" data-cart="true" ' + dataShopSkuAttr + ' link_info="' + storeDomain + cartUrl + '" config_info=""'+taggingAttrForBuy+
									preOrderToCartTaggingAttr+'>' + Granite.I18n.get("pre order") + '</a>';
							}else {
								productCardTemplate +=
									'<a class="cta cta--contained cta--black js-buy-now" href="'+buyingPDUrl+'" link_info="' + buyingPDUrl + '" config_info=""'+taggingAttrForBuy+
									preOrderToLinkTaggingAttr+'>' + Granite.I18n.get("pre order") + '</a>';
							}
						} else if (ctaTypeUpperCase === "OUTOFSTOCK"){
							productCardTemplate +=
								'<a class="cta cta--contained cta--black js-cta-stock" href="javascript:;"'+dataModelCodeAttr + dataModelNameAttr + dataShopSkuAttr +
								' an-tr="pd03_product finder:stock alert-product finder-cta-button" an-ca="buy cta" an-ac="stock alert" an-la="stock alert">' 
								+ Granite.I18n.get("Get stock alert") + '</a>';
						}
					}
				}
				*/
				productCardTemplate += '</div>';
			}

			$(document).on("click", ".pd07-ratingList.anchor", function () {
				let tabAnchorId = $(this).attr("href").split("\'")[1];
				$(tabAnchorId).trigger("click");
			});
			
		return productCardTemplate;
			
		};

		function buildFinancing(frontModel, emiPrice) {
			let tempProductCardTemplate = "";
			// financing
			var financingDesc = [];
			if(frontModel.financingFormattedDesc != null && frontModel.financingFormattedDesc.length > 0){
				financingDesc = frontModel.financingFormattedDesc;
			} else {
				financingDesc = frontModel.financingDesc;
			}
			if(pageTrack === "offer main"){
				tempProductCardTemplate +=
				'<div class="offers-product-card-grid__cta-calculate">';
				if(isNotNull(financingDesc) && financingDesc.length > 0 && siteCode !== "us"){
					let calculatorAnTr = 'pd07_offers product card list-'+pageTrack;
					let calculatorAnCa = 'option click';
					if(pageTrackEppHome){
						calculatorAnTr += '-calculator-home_content_click';
						calculatorAnCa = 'home content click';
					} else {
						calculatorAnTr += '-text-link';
					}
						if( isNotNull(emiPrice)){
							if((siteCode === "in" || siteCode === "uk" || siteCode === "id" || siteCode === "ee" || siteCode === "lv" || siteCode === "lt" || siteCode === "pl" ) && isNotNull(emiUrl) && frontModel.financing == "Y"){					//new-hybris
								tempProductCardTemplate +=
									'<a href="javascript:;" data-link_info="' + emiUrl + '/?sku=' + frontModel.shopSkuCode + '&price=' + emiPrice + '&page=pf" '+
										'an-tr="'+calculatorAnTr+'" '+
										'an-ca="'+calculatorAnCa+'" an-ac="offer product card" an-la="calculator" data-modelcode="'+frontModel.shopSkuCode+'" '+
										'class="cta cta--label cta--black cta--icon cta--icon-leading js-calculate-popup-open" data-type="install" role="button" aria-label="'+Granite.I18n.get("Calculate Finance") +' '+Granite.I18n.get("Estimate your installment plan") +'">' + Granite.I18n.get("Calculate Finance") + 
										'<svg class="icon" focusable="false" aria-hidden="true">'+
											'<use xlink:href="#calculator-bold" href="#calculator-bold"></use>'+
										'</svg>'+
									'</a>';
							} else if((siteCode === "ro" || siteCode === "bg" ) && isNotNull(emiUrl) && frontModel.financing == "Y") {
								tempProductCardTemplate = "";
								tempProductCardTemplate +=
								'<div class="offers-product-card-grid__cta-calculate offers-product-card-grid__cta-calculate--serom">' +
									'<button data-link_info="' + emiUrl + '/?sku=' + frontModel.shopSkuCode + '&price=' + emiPrice + '&page=pf" '+
										'an-tr="'+calculatorAnTr+'" '+
										'an-ca="'+calculatorAnCa+'" an-ac="offer product card" an-la="calculator"';
										if(isNewHybris){
											tempProductCardTemplate +=
											'data-modelcode="'+frontModel.shopSkuCode+'" ';
										}
										tempProductCardTemplate +=
										'class="offers-product-card-grid__cta-calculate-text js-calculate-popup-open" tabindex="0" data-type="install" aria-label="'+Granite.I18n.get("Calculate Finance") +' '+Granite.I18n.get("Estimate your installment plan") +'">' + frontModel.financingDesc + 
									'</button>';
							} else if(siteCode !== "in" && siteCode !== "uk" && isNotNull(financingUrl)){
								var financeLayerUrl = financingUrl;
								if(siteCode !== "de"){
									financeLayerUrl +='/?total='+ emiPrice +'&page=pf';
									if(siteCode==="pl"){
										financeLayerUrl += "&sku="+frontModel.shopSkuCode;
									}
								}
								tempProductCardTemplate +=
									'<a href="javascript:;" data-link_info="'+financeLayerUrl+'" '+
										'an-tr="'+calculatorAnTr+'" '+
										'an-ca="'+calculatorAnCa+'" an-ac="offer product card" an-la="calculator" ';
										if(isNewHybris){								//new-hybris
											tempProductCardTemplate +=
											'data-modelcode="'+frontModel.shopSkuCode+'" ';
										}
										tempProductCardTemplate +=
										'class="cta cta--label cta--black cta--icon cta--icon-leading js-calculate-popup-open" data-type="install" role="button" aria-label="'+Granite.I18n.get("Calculate Finance") +' '+Granite.I18n.get("Estimate your installment plan") +'">' + Granite.I18n.get("Calculate Finance") + 
										'<svg class="icon" focusable="false" aria-hidden="true">'+
											'<use xlink:href="#calculator-bold" href="#calculator-bold"></use>'+
										'</svg>'+
									'</a>';
							}
						}
				}
				tempProductCardTemplate +=
					'</div>';
			}
			return tempProductCardTemplate;
		}

		function buildRating(frontModel) {
			let tempProductCardTemplate = "";
			if(useUserRatingContainer === "true"){
				tempProductCardTemplate += '<div class="offers-product-card-grid__rating">';

				// 태깅용 attr
				var dataModelCodeAttr =
					' data-modelcode="'+frontModel.modelCode+'"';
				var dataModelNameAttr =
					' data-modelname="'+frontModel.modelName+'"';
				var productPageTaggingAttr =
					' an-tr="pd07_offers product card list:'+pageTrack+'-image-review" an-ca="review" an-ac="offer product card" an-la="read review"';

				if(ratingTabAnchorId){
					tempProductCardTemplate +=
						`<a href="javascript:window.sg.components.reviewTap.activeTab('#${ratingTabAnchorId}');"
						class="pd07-ratingList anchor"
						${dataModelCodeAttr}
						${dataModelNameAttr}
						${productPageTaggingAttr}>`;
				} else {
					tempProductCardTemplate +=
						`<a class="pd07-ratingList"
						${dataModelCodeAttr}
						${dataModelNameAttr}
						${productPageTaggingAttr}>`;
				}

				let ratingHtml = "";
				let item = "";
				let ratings = frontModel.ratings;

				if(fnIsNull(ratings)){
					ratings = 0;
					frontModel.ratings = 0;
				}

				// rating 반올림 처리
				let tmpCount = Math.pow(10,1);
				ratings = Math.round(ratings*tmpCount)/tmpCount;

				let ratingValue = parseFloat(ratings).toFixed(1);
				let fullStarCnt = parseInt(ratings);
				let cutStarWidthStyleNum = 0;
				cutStarWidthStyleNum = parseInt((ratingValue-fullStarCnt)*100);

				if(ratingValue !== "0.0"){
					frontModel.ratings = ratingValue;
				}

				for(let j=0; j<fullStarCnt;j++){
					item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 100%;"></span></span>';
				}
				if(fullStarCnt < 5 && fullStarCnt > 0){
					item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: ' + cutStarWidthStyleNum + '%;"></span></span>';
					for(let k=4;k>fullStarCnt;k--){
						item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
					}
				} else if (fullStarCnt === 0){
					for(let empty_idx=0;empty_idx<5;empty_idx++){
						item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
					}
				}

				if(frontModel.ratings!=null && frontModel.ratings!=''){
					let ratingEmptyCls = "";
					if(frontModel.ratings == '0'){
						ratingEmptyCls = ' rating--empty';
					}
					ratingHtml +=
						`<span class="rating${ratingEmptyCls}">
							<span class="hidden">${RATING_I18n}</span>
								<span class="rating__inner">
									<span class="rating__star-list">
										${item}
									</span>
									<strong class="rating__point"><span class="hidden">${RATING_PRODUCT_I18n} : </span><span>${frontModel.ratings}</span></strong>
									<em class="rating__review-count">(<span class="hidden">${NUMBER_RATING_I18n} :</span><span>${frontModel.reviewCount}</span>)</em>
								</span>
							</span>`;
				}

				tempProductCardTemplate += ratingHtml;

				tempProductCardTemplate += "</a>";

				tempProductCardTemplate += '</div>';
			}
			return tempProductCardTemplate;
		}

		
		/**
		 * viewOptionObj : 현재 그리고 있는 Product 의 전체 옵션정보
		 * optionChip 선택 시 화면에 표시해 줄 sku의 index 를 반환함
		 * selectOptionMoIdx : 현재 선택한 옵션의 moidx 값 
		 * otherSelectedOptionMoIdxList : 현재 선택한 타입을 제외한 타입중 선택된 나머지 옵션 리스트
		 * isColorType : 현재 타입이 color 인지에 대한 여부
		 * optionTypeList : 현재 그리고있는 Product 의  optionTypeList 
		 */
		var getSelectedModelIdx = function(viewOptionObj, selectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, optionTypeList){
			var modelIdx = 0;
			
			var modelIdxList = selectOptionMoIdx.split(',');
			var firstIdx = modelIdxList[0];
			
			var memoryIdx = optionTypeList.indexOf("MEMORY");
			//new-hybris
			if(!isGPv2 && !isNewHybris && isColorType && memoryIdx > 0){
				// [global, hybrisIntg] 상위 옵션이 color 이고, 하위에 같이 바뀌는 옵션이 memory 일 때 가장 큰값으로 선택처리
				
				var memoryOptionList = viewOptionObj["MEMORY"].optionList;
				var selectedModelIdx = 0;
				var highestOption = 0;
				for(var moi in memoryOptionList){
					var temp_mi = memoryOptionList[moi].modelIdx.split(',');
					for(var tmi in temp_mi){
						// 선택한 옵션칩의 modelIdx 리스트에 해당하는 model idx 가 있으면  비교 
						if(arrayContains(modelIdxList, temp_mi[tmi])){
							var this_memory_num = memoryOptionList[moi].optionCode.replace("TB","000").replace(/[^0-9]/g,"");
							if(highestOption < this_memory_num){
								highestOption = this_memory_num;
								selectedModelIdx = temp_mi[tmi];
							}
							break;
						}
					}
				}
				modelIdx = selectedModelIdx;
				
			} else {
				var selectModelIdxList = [];
				var tempMappingModelIdx = [];
				
				for(var omi in otherSelectedOptionMoIdxList){
					var otherMoIdx = otherSelectedOptionMoIdxList[omi];
					if(isNotNull(otherMoIdx)){
						var otherMoIdxArr = otherMoIdx.split(',');

						tempMappingModelIdx = [];
						for(var mli in modelIdxList){
							if(otherMoIdxArr.indexOf(String(modelIdxList[mli]))>-1) {
								tempMappingModelIdx.push(modelIdxList[mli]);
							}
						}
						if(tempMappingModelIdx.length > 0){
							modelIdxList = tempMappingModelIdx;
						}
					}
					
				}
				if(modelIdxList.length > 0){
					modelIdx = modelIdxList[0];
				} else {
					modelIdx = firstIdx;
				}
			}
			
			return modelIdx;
		};
		
		var setWishlistAriaLabel = function(){
			$('.pd-wishlist-cta').each(function(){
				const thisAriaLabel = $(this).attr("data-arialabeltext");
				if($(this).hasClass('pd-wishlist-cta--on')){
					$(this).removeAttr('aria-label').attr('aria-label', Granite.I18n.get("Remove wishlist")+' '+ thisAriaLabel + ' '+Granite.I18n.get("Selected"));
				} else {
					$(this).removeAttr('aria-label').attr('aria-label', Granite.I18n.get("Add to wishlist")+' '+thisAriaLabel);
				}

			});
		};

		/**
		 * (GPv2) 로그인 한 경우 이미 추가된 wishlist 영역 셋팅
		 * 
		 * */
		var changeAddedWishlist = function($el, modelCode){

			var changeBtn = function($btnEl){
				let btnAriaLabel = Granite.I18n.get("Remove wishlist")+' '+ $btnEl.attr("data-arialabeltext") +' '+Granite.I18n.get("Selected");
				$btnEl.addClass('pd-wishlist-cta--on js-delete-wishlist-btn');
				$btnEl.removeAttr('data-add-text').attr('data-added-text', Granite.I18n.get("Remove wishlist"));
				$btnEl.removeAttr('an-la').attr('an-la', 'remove from wishlist');
				$btnEl.removeAttr('aria-label').attr('aria-label', btnAriaLabel);
			};
			
			if(addedWishList.length > 0){
				for(var idx = 0; idx < addedWishList.length; idx++){
					var addedWishlistInfo = addedWishList[idx];
					if(addedWishlistInfo.deleted === false ){
						if(isNotNull(modelCode) && addedWishlistInfo.sku === modelCode){
							var $addedWishlistBtn = $el.find('.pd-wishlist-cta');
							changeBtn($addedWishlistBtn);
							break;
						} else {
							var $addedWishlistBtn = $('.pd-wishlist-cta[data-modelcode="'+addedWishlistInfo.sku+'"]');
							changeBtn($addedWishlistBtn);
						}
					}
				}
			}
		};
		
		/**
		 * Product Data를 이용하여 Product Card 영역 구성
		 * 
		 * @param product
		 */
		var buildProductCard = function($panelEl, product){
			var frontModel = product.modelList[product.frontModelIdx];

			var compIdx = $panelEl.closest('.js-offers-product-list').data("compidx");
			var tabIdx = $panelEl.data("tabidx");
			var emiPrice = "";
			
			var upperStock = "";
			if(isNotNull(frontModel.ctaType)){
				upperStock = frontModel.ctaType.toUpperCase();
				product.modelList[product.frontModelIdx].ctaTypeUpperCase = upperStock;
			}

			/* WishList 영역 :: S */
			var wishListClass = "";
			
			var isAddedClass = "";
			var wishlistBtnText = Granite.I18n.get("Add to wishlist");
			var wishlistEngText = "add to wishlist";
			const wishlistAriaLabelText = escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "));
			
			var wishlistAttr = "";
			
			// 태깅용 attr
			var dataModelCodeAttr = 
				' data-modelcode="'+frontModel.modelCode+'"';
			var dataModelNameAttr = 
				' data-modelname="'+frontModel.modelName+'"';
			var productPageTaggingAttr = 
				' an-tr="pd07_offers product card list-'+pageTrack+(pageTrackEppHome ? '-link to pd-home_content_click1' : '-cta-product')+'" an-ca="'+(pageTrackEppHome ? 'home content click' : 'product click')+'" an-ac="offer product card" an-la="product click"';
			//new-hybris
			if(isGPv2 || isNewHybris){
				var shopSkuCode = "";
				if(isNotNull(frontModel.shopSKU)){
					shopSkuCode = frontModel.shopSKU;
				}else{
					shopSkuCode = frontModel.modelCode;
				}
				product.modelList[product.frontModelIdx].shopSkuCode = shopSkuCode;
				/* Added Wishlist Check :: S*/
				
				var wishlistPrice = "";
				if(isNotNull(product.modelList[product.frontModelIdx].promotionPriceDisplay) && isNotNull(product.modelList[product.frontModelIdx].promotionPrice)){
					wishlistPrice = product.modelList[product.frontModelIdx].promotionPrice;
				} else {
					wishlistPrice = product.modelList[product.frontModelIdx].price;
				}
				wishlistAttr = ' data-modelcode="'+shopSkuCode+'"';
				wishlistAttr += dataModelNameAttr;
				wishlistAttr += ' data-stock="'+frontModel.ctaType+'"';
				if(isNotNull(wishlistPrice) && wishlistPrice !== "null"){
					wishlistAttr += ' data-modelprice="'+wishlistPrice+'"';
				}
				/* Added Wishlist Check :: E*/
			} else if ( isHybrisIntg ){
				wishlistAttr = dataModelCodeAttr;
				wishlistAttr += dataModelNameAttr;
			}
			wishlistAttr += ' data-pagetrack="'+pageTrack+'"';

			//Wishlist area-label 셋팅 데이터
			wishlistAttr += ' data-add-text="'+wishlistBtnText+'"';

			wishlistAttr += ' data-arialabeltext="'+wishlistAriaLabelText+'"';
 
			
			if(upperStock === "NOORDER" || upperStock === "LEARNMORE"){
				wishListClass = " js-learnmore";
			}
			
			var nonShopClass = "";
			if(isGlobal){
				nonShopClass = ' offers-product-card-grid__item--non-shop';
			}
			var productCardTemplate =
			'<div class="offers-product-card-grid__item'+nonShopClass+'">';
			if(frontModel.fmyIconYN === "Y"){
				 productCardTemplate +=
				'<div class="offers-product-card-grid__label">'+
					'<span class="badge-icon  badge-icon--label'+frontModel.iconInfoObj.iconClass+'">'+ 
					frontModel.iconInfoObj.iconText+	
					'</span>'+
				'</div>';
			}
			//new-hybris
			if(isGPv2 || isHybrisIntg || isNewHybris && (pageTrack === "offer main")){
				productCardTemplate +=
				'<a class="pd-wishlist-cta js-layer-open'+isAddedClass+wishListClass+'" href="javascript:void(0)" data-div-id="#wishlist-popup" role="button"'+wishlistAttr+
				' an-tr="pd07_offers product card list-'+pageTrack+'-image-button" an-ca="account" an-ac="wishlist" an-la="'+wishlistEngText+'" data-component="PD07">'+
					'<span class="hidden">'+wishlistBtnText+'</span>'+
					'<svg class="icon unselect" focusable="false" aria-hidden="true">'+
						'<use xlink:href="#wishlist-unselect-regular" href="#wishlist-unselect-regular"></use>'+
					'</svg>'+
					'<svg class="icon select" focusable="false" aria-hidden="true">'+
						'<use xlink:href="#wishlist-select-bold" href="#wishlist-select-bold"></use>'+
					'</svg>'+
				'</a>';
			}
			/* Product 이름 영역 :: S */
			productCardTemplate +=
			'<a class="offers-product-card-grid__name" href="'+frontModel.pdpUrl+'" title=""'+dataModelCodeAttr + dataModelNameAttr +productPageTaggingAttr+'>'+
				frontModel.displayName+
			'</a>';
			/* Product 이름 영역 :: E */

			/* Image 영역 :: S */
			productCardTemplate +=
			'<a class="offers-product-card-grid__image" href="'+frontModel.pdpUrl+'" title=""'+dataModelCodeAttr + dataModelNameAttr +productPageTaggingAttr+'>';
			productCardTemplate +=
				'<div class="image">';
				if(isNotNull(frontModel.thumbUrl)){
					productCardTemplate +=
					'<img class="image__preview lazy-load" data-src="'+frontModel.thumbUrlForLazy+'" alt="'+escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "))+'">'+
					'<img class="image__main lazy-load" data-src="'+frontModel.thumbUrl+'" alt="'+escapeHtml(frontModel.displayName.replace(/<br>/ig," ").replace(/<sup>/ig," "))+'">';
				}
			productCardTemplate +=
				'</div>'+
			'</a>';
			/* Image 영역 :: E */
				
			if(isNotNull(frontModel.fmyChipList) && (frontModel.fmyChipList).length > 0){
				var chipTypeFlag = false;
				for(var cnt = 0; cnt < frontModel.fmyChipList.length; cnt++){
					var chipType = frontModel.fmyChipList[cnt].fmyChipType;
					
					if(chipType === "COLOR"){
						chipTypeFlag = true;
						break;
					}
				}
				
				if(chipTypeFlag === true){
					productCardTemplate +=
						'<div class="offers-product-card-grid__contents">'+
							'<div class="option-selector option-selector__color-text">';
				}else{
					productCardTemplate +=
						'<div class="offers-product-card-grid__contents">'+
							'<div class="option-selector">';
				}
			}else{
				productCardTemplate +=
					'<div class="offers-product-card-grid__contents unbind-option">'+
						'<div class="option-selector">';
			}
			
			var hasColorChip = false;
			if(isNotNull(product.viewOptionObj) && Object.keys(product.viewOptionObj).length > 0){
				// 상위 선택된 옵션칩의 model idx : disable 처리 할때 사용 ( idx에 해당되지않으면 disabled )
				var parentOptionModelIdx = "";
				var viewOptionIdx = 0;
				
				var curViewOptionObj = product.viewOptionObj;
				var curOptionTypeList = product.optionTypeList;
				
				for(var type in product.viewOptionObj){
					
					var optionDataType = "";
					optionDataType = type.toLowerCase().replace(/ /g, "-");
					
					var optionObj = product.viewOptionObj[type].optionList;
					
					var isSelected = false;
					var currentOption = {};
					var disabledClass = '';
					
					var chipId = '';
					
					var selectorWrapperStyle = "";
					if(isNotNull(product.viewOptionObj[type].styleAttr)){
						selectorWrapperStyle = product.viewOptionObj[type].styleAttr;
					}
					
					var selectedColor = "";
					for(var option in optionObj){
						currentOption = optionObj[option];
						
						var modelIdxList = currentOption.modelIdx.split(',');
						if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
							selectedColor = currentOption.optionLocalName;
						}
					}
					
					var lowerType = type.toLowerCase();
					
					if(type === "COLOR"){
						hasColorChip = true;
						productCardTemplate +=
							'<div class="option-selector__color-name">' + Granite.I18n.get("Color") + ': <span class="option-selector__color-name-text">'+
									'<strong class="option-selector__color-name-text-in">'+selectedColor+'</strong>'+
								'</span>'+
								'<div class="option-selector__color-tooltip" aria-hidden="true">' + Granite.I18n.get("Color") + ' : <strong class="option-selector__color-tooltip-text">'+selectedColor+'</strong>'+
									'<a href="javascript:void(0)" class="option-selector__color-tooltip-close" role="button">'+
										'<span class="hidden">Close</span>'+
										'<svg class="icon icon-close" focusable="false" aria-hidden="true">'+
											'<use xlink:href="#delete-bold" href="#delete-bold"></use>'+
										'</svg>'+
									'</a>'+
								'</div>'+
							'</div>'+
							'<div class="option-selector__wrap option-selector__wrap--color-chip" data-desktop-view="5" data-mobile-view="5">'+
								'<div class="option-selector__swiper">'+
									'<div class="option-selector__swiper-container">'+
										'<div class="option-selector__swiper-wrapper" style="'+selectorWrapperStyle+'" role="list">';
									var curSelecteModelIdx = '';
									for(var option in optionObj){
										/* 선택되어있는(대표모델) 옵션 flag값 셋팅 */
										currentOption = optionObj[option];
	
										isSelected = false;
										var modelIdxList = currentOption.modelIdx.split(',');
										
										if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
											isSelected = true;
											curSelecteModelIdx = currentOption.modelIdx;
											disabledClass = '';
										} else {
											disabledClass = ' js-fmyChip-is-disabled';
											if(viewOptionIdx === 0){
												disabledClass = '';
											} else {
												var parentModelIdxList = parentOptionModelIdx.split(',');
												for(var mli in modelIdxList){
													//상위 선택된 옵션칩 의 model idx 에 일치하는 model idx 가 있는 경우 활성화
													if(arrayContains(parentModelIdxList, modelIdxList[mli])){
														disabledClass = '';
														break;
													}
												}
											}
										}
										
										// 각 옵션칩의 model 정보 셋팅 ( 태깅 )
										var modelCodeAttrForTagging = '';
										var modelNameAttrForTagging = '';
	
										var modelIdx;
										
										if(disabledClass == ''){
											var curSelectOptionMoIdx = currentOption.modelIdx;
											var otherSelectedOptionMoIdxList = [];
											var isColorType = true;
											
											for(var ooi in curViewOptionObj){
												if(ooi != type){
													var tmp_optionList = curViewOptionObj[ooi].optionList;
													for(var toi in tmp_optionList){
														var tmp_option = tmp_optionList[toi];
														var tmp_optionMoIdx = tmp_option.modelIdx;
														var tmp_optionMoIdxArr = tmp_optionMoIdx.split(',');
														
														// 현재 선택되어있는 option 색출
														if(tmp_optionMoIdxArr.indexOf(String(product.frontModelIdx))>-1){
															otherSelectedOptionMoIdxList.push(tmp_optionMoIdx);
														}
													}
													
												}
											}
	
											modelIdx = getSelectedModelIdx(curViewOptionObj, curSelectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, curOptionTypeList);
											if(product.modelList.length > modelIdx && isNotNull(product.modelList[modelIdx])){
	
												modelCodeAttrForTagging = ' data-modelcode="'+product.modelList[modelIdx].modelCode+'"';
												modelNameAttrForTagging = ' data-modelname="'+product.modelList[modelIdx].modelName+'"';
											}
										}
										
										chipId = 'offer-'+optionDataType+'-'+option+'-'+frontModel.modelCode+'-'+tabIdx+'-'+compIdx;
										var chipName = 'product-'+optionDataType+'-'+frontModel.modelCode+'-'+tabIdx+'-'+compIdx;
	
										productCardTemplate +=
										'<span class="option-selector__swiper-slide" role="listitem">'+
											'<span class="option-selector__color js-opl-product-fmychip'+disabledClass+'">'+
												'<input type="radio" id="'+chipId+'" name="'+chipName+'"'+(isSelected?' checked':'')+' data-modeli="'+modelIdx+'" data-chiptype="color"'+
													modelCodeAttrForTagging + modelNameAttrForTagging +
													' an-tr="pd07_offers product card list-'+pageTrack+(pageTrackEppHome?'-option-home_content_click1':'-image-link')+'" an-ca="'+(pageTrackEppHome?'home content click':'option click')+'" an-ac="offer product card" an-la="'+lowerType+':'+currentOption.optionName+'">'+
												'<label for="'+chipId+'">';
													// multiColor 인 경우
													if(isNotNull(currentOption.multiColorYN) && currentOption.multiColorYN === "Y"){
														var multiColorList = currentOption.multiColorList;
														var optionColorType = multiColorList.optionColorType;
														var optionCodeList = multiColorList.optionCodeList;
														
														productCardTemplate +=
															'<span class="option-selector__color-code">'+
																'<svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 36 36">';
														
														switch(optionColorType){
															case "CP":	//Color가 Prism인 경우(6 Color)
																productCardTemplate += `
																			<g transform="translate(-17.999 9)">
																				<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
																				<g transform="translate(48.004 -9)">
																					<path d="M1.333,15.8A18.1,18.1,0,0,1,.01,9.628c0-.027,0-.055,0-.082s0-.06,0-.089A18.086,18.086,0,0,1,1.91.935L1.938.88l.053-.1L2.074.614l0-.007Q2.239.3,2.413,0L18,9,2.413,18A18.157,18.157,0,0,1,1.333,15.8Z" transform="translate(-30.005 8.994)" fill="#f3c29a" />
																					<path d="M0,9A17.9,17.9,0,0,1,6.584,2.41,18.351,18.351,0,0,1,9.257,1.145a18.061,18.061,0,0,1,3.667-.95l.132-.019.019,0A18.137,18.137,0,0,1,15.582,0V18Z" transform="translate(-27.587 0)" fill="#fff" />
																					<path d="M0,18V0A18.223,18.223,0,0,1,2.05.115,18.011,18.011,0,0,1,7.021,1.427l.068.026a.028.028,0,0,0,.015.008,17.506,17.506,0,0,1,1.89.949,18.328,18.328,0,0,1,2.047,1.376l.046.035.052.041A18.106,18.106,0,0,1,15.585,9Z" transform="translate(-12.003 0)" fill="#d4b9d1" />
																					<path d="M0,9,15.583,0a18.31,18.31,0,0,1,.9,1.785l.045.1v0A18.087,18.087,0,0,1,18,8.808c0,.023,0,.048,0,.072s0,.064,0,.1a18.082,18.082,0,0,1-1.621,7.483l-.033.073-.027.058q-.332.71-.731,1.4Z" transform="translate(-12.004 8.997)" fill="#000" />
																					<path d="M0,0,15.585,9a18.082,18.082,0,0,1-2.041,2.858l-.014.016-.078.089a18.166,18.166,0,0,1-2.672,2.457l-.027.02-.1.075A18.057,18.057,0,0,1,.86,17.979L.7,17.986H.688C.46,18,.23,18,0,18Z" transform="translate(-12.005 17.994)" fill="#f0bdb3" />
																					<path d="M14.717,17.98a18.082,18.082,0,0,1-9.094-2.987l-.054-.036-.062-.042A18.087,18.087,0,0,1,1.3,10.942h0l-.1-.127A18.134,18.134,0,0,1,0,9L15.589,0V18C15.3,18,15.006,17.994,14.717,17.98Z" transform="translate(-27.593 17.993)" fill="#98c3cc" />
																					<path d="M18,1A17,17,0,0,0,5.979,30.021,17,17,0,1,0,30.021,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(-30.004 0)" fill="rgba(29,29,27,0.5)" />
																				</g>
																			</g>
																		</svg>
																	</span>
																`;
																break;
															case "C2_A"://  Color가 2개 mix인 경우, Path의 Fill 속성에 color 값 추가 (left -> right 방향으로 color code 적용)
																productCardTemplate += `
																			<g transform="translate(-17.999 9)">
																				<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
																				<g>
																					<path d="M-3395,7250a18,18,0,0,1,18-18h0v36h0A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${optionCodeList[0]}" />
																					<path d="M-3377,7232a18,18,0,0,1,18,18,18,18,0,0,1-18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[1]}" />
																					<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
																				</g>
																			</g>
																		</svg>
																	</span>
																`;
																break;
															case "C2_B"://  Color가 2color + horizontal mix인 경우, Path의 Fill 속성에 color 값 추가 (top -> bottom 방향으로 color code 적용)
																productCardTemplate += `
																			<g transform="translate(-17.999 9)">
																				<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
																				<g>
																					<path d="M-3395,7250a18,18,0,0,1,18-18,18,18,0,0,1,18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[0]}" />
																					<path d="M-3395,7250h36a18,18,0,0,1-18,18A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${optionCodeList[1]}" />
																					<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
																				</g>
																			</g>
																		</svg>
																	</span>
																`;
																break;
															case "C3_A"://  Color가 triple color인 경우 , Path의 Fill 속성에 color 값 추가 (left -> right -> bottom 방향으로 color code 적용)
																productCardTemplate += `
																			<g transform="translate(27.001 -17.999) rotate(90)">
																				<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
																				<g transform="translate(18 -3.005) rotate(-90)">
																					<path d="M-1047.672,8501.792a18.1,18.1,0,0,1-1.321-6.168c0-.027,0-.056,0-.083s0-.06,0-.09a18.092,18.092,0,0,1,1.906-8.522c.009-.017.017-.036.028-.053.017-.036.034-.068.051-.1.028-.054.058-.109.085-.162,0,0,0,0,0-.007.109-.205.22-.405.337-.608l0,0a18.019,18.019,0,0,1,1.92-2.717,18.076,18.076,0,0,1,2.2-2.157,18.042,18.042,0,0,1,2.467-1.712,18.109,18.109,0,0,1,2.674-1.264,18.212,18.212,0,0,1,3.76-.967.18.18,0,0,0,.032,0,.045.045,0,0,0,.017,0A18.394,18.394,0,0,1-1031,8477v18h0l-15.583,9A18.227,18.227,0,0,1-1047.672,8501.792Z" transform="translate(1019 -8477.001)" fill="${optionCodeList[0]}" />
																					<path d="M-1049,8494.994h0v-18a18.692,18.692,0,0,1,2.051.115,18.089,18.089,0,0,1,4.971,1.313.644.644,0,0,0,.068.025.02.02,0,0,0,.015.009,17.41,17.41,0,0,1,1.889.95,18.359,18.359,0,0,1,2.047,1.374c.015.013.032.023.047.036s.034.028.051.041a18.122,18.122,0,0,1,4.446,5.135h0a18.843,18.843,0,0,1,.9,1.783l.045.1s0,0,0,0a18.093,18.093,0,0,1,1.462,6.915c0,.023,0,.047,0,.073v.1a18.107,18.107,0,0,1-1.622,7.482l-.032.073c-.009.019-.019.038-.028.058-.22.474-.463.94-.73,1.4Z" transform="translate(1037.001 -8477)" fill="${optionCodeList[1]}" />
																					<path d="M-1034.289,8494.979a18.08,18.08,0,0,1-9.093-2.986c-.017-.013-.036-.023-.053-.036a.663.663,0,0,1-.062-.043,18.052,18.052,0,0,1-4.213-3.972l-.1-.128a18.141,18.141,0,0,1-1.2-1.816l15.589-9,15.585,9a18.048,18.048,0,0,1-2.04,2.858.119.119,0,0,1-.015.016l-.077.089a18.1,18.1,0,0,1-2.673,2.456l-.026.02-.1.077a18.052,18.052,0,0,1-9.792,3.466c-.051,0-.1.007-.158.007a.029.029,0,0,1-.013,0c-.228.009-.458.013-.689.013C-1033.709,8495-1034,8495-1034.289,8494.979Z" transform="translate(1021.412 -8459.007)" fill="${optionCodeList[2]}" />
																					<path d="M18,1A17,17,0,0,0,5.979,30.021,17,17,0,1,0,30.021,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(-30.004 0)" fill="rgba(29,29,27,0.5)" />
																				</g>
																			</g>
																		</svg>
																	</span>
																`;
																break;
															case "C3_B":// Color가 3 Vertical color인 경우 추가, Path의 Fill 속성에 color 값 추가 (left -> center -> right 방향으로 color code 적용)
																productCardTemplate += `
																			<g transform="translate(-17.999 -4)">
																				<rect width="36" height="36" transform="translate(18 4)" fill="none" />
																				<g transform="translate(17.999 4.001)">
																					<path d="M0,18A18.006,18.006,0,0,1,12,1.024v33.95A18.006,18.006,0,0,1,0,18Z" transform="translate(0 0)" fill="${optionCodeList[0]}" />
																					<path d="M0,34.974V1.024a18.086,18.086,0,0,1,12,0v33.95a18.085,18.085,0,0,1-12,0Z" transform="translate(12 0)" fill="${optionCodeList[1]}" />
																					<path d="M0,16.975A18.007,18.007,0,0,0,12,33.95V0A18.007,18.007,0,0,0,0,16.975Z" transform="translate(36 34.975) rotate(180)" fill="${optionCodeList[2]}" />
																					<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(0,0,0,0.5)" />
																				</g>
																			</g>
																			</svg>
																		</span>
																`;
																break;
															case "C3_C":// Color가 3 Horizontal color인 경우, Path의 Fill 속성에 color 값 추가 (top -> middle -> bottom 방향으로 color code 적용)
																productCardTemplate += `
																			<g transform="translate(-18 -4)">
																				<rect width="36" height="36" transform="translate(18 4)" fill="none" />
																				<g transform="translate(53.999 4) rotate(90)">
																					<path d="M0,18A18.006,18.006,0,0,1,12,1.024v33.95A18.006,18.006,0,0,1,0,18Z" transform="translate(0 0)" fill="${optionCodeList[0]}" />
																					<path d="M0,34.974V1.024a18.086,18.086,0,0,1,12,0v33.95a18.085,18.085,0,0,1-12,0Z" transform="translate(12 0)" fill="${optionCodeList[1]}" />
																					<path d="M0,16.975A18.007,18.007,0,0,0,12,33.95V0A18.007,18.007,0,0,0,0,16.975Z" transform="translate(36 34.975) rotate(180)" fill="${optionCodeList[2]}" />
																					<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(0,0,0,0.5)" />
																				</g>
																			</g>
																			</svg>
																		</span>
																`;
																break;
															case "C4_A":// Color가 4 mix인 경우 추가, Path의 Fill 속성에 color 값 추가 (top-left -> top-right -> bottom-right -> bottom-left 방향으로 color code 적용)
																productCardTemplate += `
																			<g transform="translate(-17.999 9)">
																				<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
																				<g>
																					<path d="M-3395,7250a18,18,0,0,1,18-18v18Z" transform="translate(3413 -7241)" fill="${optionCodeList[0]}" />
																					<path d="M-3377,7250v-18a18,18,0,0,1,18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[1]}" />
																					<path d="M-3377,7250h18a18,18,0,0,1-18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[2]}" />
																					<path d="M-3395,7250h18v18h0A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${optionCodeList[3]}" />
																					<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
																				</g>
																			</g>
																			</svg>
																		</span>
																`;
																break;
														}
													}else{
														productCardTemplate +=
															'<span class="option-selector__color-code">'+
																'<svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 36 36">'+
																	'<g transform="translate(-18.001 9)">'+
																		'<rect width="36" height="35.999" transform="translate(18.001 -9)" fill="none" />'+
																		'<path d="M18,0A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="'+currentOption.optionCode+'" />'+
																		'<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="rgba(0,0,0,0.5)" />'+
																	'</g>'+
																'</svg>'+
															'</span>';
													}
													
												productCardTemplate +=
													'<span class="hidden">'+currentOption.optionLocalName+'</span>'+
													'</label>'+
												'</span>'+
											'</span>';
									}
									parentOptionModelIdx = curSelecteModelIdx;
									productCardTemplate +=
										'</div>'+
									'</div>'+
									'<button type="button" class="option-selector__button-prev" aria-label="'+Granite.I18n.get("Previous")+'" role="button" aria-disabled="true">'+
										'<span class="hidden">'+
										Granite.I18n.get("Previous")+
										'</span>'+
										'<svg class="icon" focusable="false" aria-hidden="true">'+
											'<use xlink:href="#previous-regular" href="#previous-regular"></use>'+
										'</svg>'+
									'</button>'+
									'<button type="button" class="option-selector__button-next" aria-label="'+Granite.I18n.get("Next")+'" role="button" aria-disabled="true">'+
										'<span class="hidden">'+
										Granite.I18n.get("Next")+
										'</span>'+
										'<svg class="icon" focusable="false" aria-hidden="true">'+
											'<use xlink:href="#next-regular" href="#next-regular"></use>'+
										'</svg>'+
									'</button>'+
								'</div>'+
							'</div>';
					} else {
						productCardTemplate +=
						'<div class="option-selector__wrap option-selector__wrap--capacity" data-desktop-view="3" data-mobile-view="3">'+
							'<div class="option-selector__swiper">'+
								'<div class="option-selector__swiper-container">'+
									'<div class="option-selector__swiper-wrapper" style="'+selectorWrapperStyle+'" role="list">';
									var curSelecteModelIdx = '';
									for(var oi=0; oi < optionObj.length; oi++){
										/* 선택되어있는(대표모델) 옵션 flag값 셋팅 */
										currentOption = optionObj[oi];
										
										isSelected = false;
										var modelIdxList = currentOption.modelIdx.split(',');
										
										if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
											isSelected = true;
											curSelecteModelIdx = currentOption.modelIdx;
											disabledClass = '';
										} else {
											disabledClass = ' js-fmyChip-is-disabled';
											if(viewOptionIdx === 0){
												disabledClass = '';
											} else {
												var parentModelIdxList = parentOptionModelIdx.split(',');
												
												for(var mli in modelIdxList){
													//상위 선택된 옵션칩 의 model idx 에 일치하는 model idx 가 있는 경우 활성화
													if(arrayContains(parentModelIdxList, modelIdxList[mli])){
														disabledClass = '';
														break;
													}
												}
											}
										}
										
										// 각 옵션칩의 model 정보 셋팅 ( 태깅 )
										var modelCodeAttrForTagging = '';
										var modelNameAttrForTagging = '';

										var modelIdx;
										
										if(disabledClass == ''){
											var curSelectOptionMoIdx = currentOption.modelIdx;
											var otherSelectedOptionMoIdxList = [];
											var isColorType = false;
											
											for(var ooi in curViewOptionObj){
												if(ooi != type){
													var tmp_optionList = curViewOptionObj[ooi].optionList;
													for(var toi in tmp_optionList){
														var tmp_option = tmp_optionList[toi];
														var tmp_optionMoIdx = tmp_option.modelIdx;
														var tmp_optionMoIdxArr = tmp_optionMoIdx.split(',');
														
														// 현재 선택되어있는 option 색출
														if(tmp_optionMoIdxArr.indexOf(String(product.frontModelIdx))>-1){
															otherSelectedOptionMoIdxList.push(tmp_optionMoIdx);
														}
													}
													
												}
											}
											
											modelIdx = getSelectedModelIdx(curViewOptionObj, curSelectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, curOptionTypeList);
											
											if(product.modelList.length > modelIdx && isNotNull(product.modelList[modelIdx])){
												modelCodeAttrForTagging = ' data-modelcode="'+product.modelList[modelIdx].modelCode+'"';
												modelNameAttrForTagging = ' data-modelname="'+product.modelList[modelIdx].modelName+'"';
											}
										}
			
										chipId = 'offer-'+optionDataType+'-'+oi+'-'+frontModel.modelCode+'-'+tabIdx+'-'+compIdx;

										var chipName = 'product-'+optionDataType+'-'+frontModel.modelCode+'-'+tabIdx+'-'+compIdx;
										
										productCardTemplate +=
										'<span class="option-selector__swiper-slide" role="listitem">'+
											'<span class="option-selector__size js-opl-product-fmychip'+disabledClass+'">'+
												'<input type="radio" id="'+chipId+'" name="'+chipName+'"'+(isSelected?' checked':'')+' data-modeli="'+modelIdx+'" data-chiptype="other"'+
													modelCodeAttrForTagging + modelNameAttrForTagging +
													' an-tr="pd07_offers product card list-'+pageTrack+(pageTrackEppHome?'-option-home_content_click1':'-image-link')+'" an-ca="'+(pageTrackEppHome?'home content click':'option click')+'" an-ac="offer product card" an-la="'+lowerType+':'+currentOption.optionName+'">'+
												'<label class="option-selector__size-label" for="'+chipId+'">'+
													'<span class="option-selector__size-label-text">'+currentOption.optionLocalName+'<span></span></span>'+
												'</label>'+
											'</span>'+
										'</span>';
									}
									parentOptionModelIdx = curSelecteModelIdx;
									productCardTemplate+=
										'<div class="option-selector__floating-bar" style="display: none;"></div>'+
									'</div>'+
								'</div>'+
								'<button type="button" class="option-selector__button-prev" aria-label="'+Granite.I18n.get("Previous")+'" role="button" aria-disabled="true">'+
									'<span class="hidden">'+
									Granite.I18n.get("Previous")+
									'</span>'+
									'<svg class="icon" focusable="false" aria-hidden="true">'+
										'<use xlink:href="#previous-regular" href="#previous-regular"></use>'+
									'</svg>'+
								'</button>'+
								'<button type="button" class="option-selector__button-next" aria-label="'+Granite.I18n.get("Next")+'" role="button" aria-disabled="true">'+
									'<span class="hidden">'+
									Granite.I18n.get("Next")+
									'</span>'+
									'<svg class="icon" focusable="false" aria-hidden="true">'+
										'<use xlink:href="#next-regular" href="#next-regular"></use>'+
									'</svg>'+
								'</button>'+
							'</div>'+
						'</div>';
					}

					viewOptionIdx++;
				}
			}
			if(!hasColorChip){
				productCardTemplate +=
					'<div class="option-selector__wrap option-selector__wrap--color-chip js-empty-colorchip" data-desktop-view="5" data-mobile-view="5">'+
						'<div class="option-selector__swiper">'+
							'<div class="option-selector__swiper-container">'+
								'<div class="option-selector__swiper-wrapper" role="list">'+
								'</div>'+
							'</div>'+
							'<button type="button" class="option-selector__button-prev" aria-label="'+Granite.I18n.get("Previous")+'" role="button" aria-disabled="true">'+
								'<span class="hidden">'+
								Granite.I18n.get("Previous")+
								'</span>'+
								'<svg class="icon" focusable="false" aria-hidden="true">'+
									'<use xlink:href="#previous-regular" href="#previous-regular"></use>'+
								'</svg>'+
							'</button>'+
							'<button type="button" class="option-selector__button-next" aria-label="'+Granite.I18n.get("Next")+'" role="button" aria-disabled="true">'+
								'<span class="hidden">'+
								Granite.I18n.get("Next")+
								'</span>'+
								'<svg class="icon" focusable="false" aria-hidden="true">'+
									'<use xlink:href="#next-regular" href="#next-regular"></use>'+
								'</svg>'+
							'</button>'+
						'</div>'+ //option-selector__swiper
					'</div>';//option-selector__wrap
			}
			productCardTemplate +=
				'</div>';//option-selector

		
			/* offer fiche */
			var taggingAttr = ' an-tr="pd07_offers product card list-'+pageTrack+(pageTrackEppHome?'-product fiche-home_content_click':'-image-link')+'" an-ca="'+(pageTrackEppHome?'home content click':'option click')+'" an-ac="'+(pageTrackEppHome?'offer product card':'product compare landing')+'" an-la="product fiche"';
			productCardTemplate += 
				'<div class="offers-product-card-grid__fiche">';
				if(useEnergyLabel === "true"){
					if(frontModel.newEnergyLabel!=null && frontModel.newEnergyLabel!="" &&  frontModel.newEnergyLabel!="Y"){
						productCardTemplate +=
							'<div class="fiche-badge">';
						if(isNotNull(frontModel.ficheFileUrl)){
							productCardTemplate +=
								'<a href="' + frontModel.ficheFileUrl + '" target="_blank" aria-label="' + Granite.I18n.get("Open in a new window") + '" class="cta-text"' + taggingAttr + '>' +
									Granite.I18n.get("Product Fiche")+
								'</a>';
						}
						productCardTemplate +=
							'<a class="badge ' + frontModel.energyLabelClass2 + '" href="'+frontModel.energyFileUrl + '" title="' + frontModel.energyLabelGrade + '" target="_blank" aria-label="' + Granite.I18n.get("Open in a new window")+'"' + taggingAttr + '>' +
								'<span class="badge__grade--with-text '+frontModel.energyLabelClass1+'">'+
									'<span class="hidden">'+frontModel.energyLabelGrade+'</span>'+
								'</span>'+
							'</a>';

						productCardTemplate +=
						'</div>';
					}else if(frontModel.newEnergyLabel=="Y"){
						productCardTemplate +=
							'<div class="badge-energy-label">';
						if(isNotNull(frontModel.ficheFileUrl)){
							var energyLabelClass = "";
						
								if(isNotNull(frontModel.ficheFileUrl)){
									const ficheFileName = frontModel.ficheFileUrl.split('/')[frontModel.ficheFileUrl.split('/').length-1];
									productCardTemplate +=
										'<a class="badge-energy-label__text" href="' + frontModel.ficheFileUrl + '" aria-label="'+Granite.I18n.get("PRODUCT INFORMATION SHEET")+' '+ficheFileName+' : ' + Granite.I18n.get("Open in a new window") + '" target="_blank"' + taggingAttr + '>' +
										Granite.I18n.get("PRODUCT INFORMATION SHEET")+
										'</a>';
								}
								if(frontModel.energyLabelClass){ //energyLabelClass 있으면
									energyLabelClass = frontModel.energyLabelClass;
								}else{ //energyLabelClass 없으면
									energyLabelClass = frontModel.energyLabelClass1;
								}
								const energeFileName = frontModel.energyFileUrl.split('/')[frontModel.energyFileUrl.split('/').length-1];
								productCardTemplate +=
								'<a class="badge-energy-label__badge ' + energyLabelClass + '" href="' + frontModel.energyFileUrl + '" target="_blank" aria-label="'+frontModel.energyLabelGrade+' '+energeFileName+' : '+Granite.I18n.get("Open in a new window")+'"' + taggingAttr + '>' +
									frontModel.energyLabelGrade+
								'</a>';
						}
						productCardTemplate +=
							'</div>';
					}
				}
				/* REPAIRBILITY */
				if(useRepairbility === "true"){
					if(isNotNull(frontModel.repairabilityIndex)){
						var repairabilityIndex = Number(frontModel.repairabilityIndex);
						var repairabilityAlt = Granite.I18n.get("Repairability Index : {0} / 10", [repairabilityIndex] );
		
						if(siteCode=="fr"){
							productCardTemplate += 
									'<a href="/fr/support/indice-de-reparabilite/" class="offers-product-card-grid__repairability" target="_blank">'+
										'<img class="offers-product-card-grid__repairability-image" src="//images.samsung.com/is/image/samsung/'+ siteCode +'/icon/consumer/repairability_index_'+ repairabilityIndex +'.png" alt="'+repairabilityAlt+'">'+
									'</a>';
						}else{
							productCardTemplate +=
								'<img class="offers-product-card-grid__repairability-image" src="//images.samsung.com/is/image/samsung/'+ siteCode +'/icon/consumer/repairability_index_'+ repairabilityIndex +'.png" alt="'+repairabilityAlt+'">';
						}
					}
				}
			productCardTemplate += '</div>';

			/* product 가격 영역 :: S */
			productCardTemplate +=
				buildPriceArea(product, upperStock);
			productCardTemplate +=
			'</div>'+//offers-product-card-grid__contents
		'</div>';//offers-product-card-grid__item
			
			return productCardTemplate;
		};

		
		/**
		 * Product 데이터를 가공하여 반환한다. 
		 */
		var getProductInfo = function(product){
			var tempProduct = product;

			/*
			 * viewOptionObj : 전체 옵션칩 리스트 
			 * optionTypeList : 옵션 타입만 담고 있는 리스트 ( 옵션타입의 index 값을 구하기 위해 생성함 )
			 */
			
			var tmpOptionListInModel = {};
			for(var mi in tempProduct.modelList){
				var tmpModel = tempProduct.modelList[mi];
				var tmpFmyChipList = tmpModel.fmyChipList;
				
				for(var fci in tmpFmyChipList){
					//fmyChipCode에 " 제거 
					var thisOptionKey = tmpFmyChipList[fci].fmyChipType + '+'+
					 					tmpFmyChipList[fci].fmyChipCode.replace("\"", "").replace("&quot;", "")+'+'+
					 					tmpFmyChipList[fci].fmyChipLocalName.replace("\"", "").replace("&quot;", "");
					
					if(tmpOptionListInModel[thisOptionKey] == undefined){
						tmpOptionListInModel[thisOptionKey] = mi;
					} else {
						tmpOptionListInModel[thisOptionKey] += ","+mi;
					}
				}
				
				// 2023.02.02 => SEPOL 국가만 적용
				// 기존 price가 이미 노출되는 경우에 이를 lowestWasPrice 가 노출되도록 변경하는 작업
				// lowestwasprice 가 price 보다 낮거나 같고, promotion price보다 높을 때만 적용
				// [EPP] epp meta 체크 추가
				// saveText 계산시에도 적용
				if(((siteCode === "pl" && !isEppSite))
					&& isNotNull(tmpModel.lowestWasPrice)
					&& isNotNull(tmpModel.promotionPrice) 
					&& (tmpModel.lowestWasPrice <= tmpModel.price && tmpModel.promotionPrice < tmpModel.lowestWasPrice)
				){
					tmpModel.price = tmpModel.lowestWasPrice;
					tmpModel.priceDisplay = currencyComma(tmpModel.lowestWasPrice, priceCurrency);
					tmpModel.saveText = tmpModel.lowestWasPrice - tmpModel.promotionPrice;
				}
			}
			
			var optionTypeList = [];
			var viewOptionObj = {};
			if(isNotNull(tempProduct.chipOptions)){
				for(var a=0; a<tempProduct.chipOptions.length; a++){
					var optionData = tempProduct.chipOptions[a];
					var optionTypeTmp = optionData.fmyChipType;

					var optionListInType = optionData.optionList;
					for(var opl in optionListInType){
						var thisOptionKey = optionData.fmyChipType + '+'+
											optionListInType[opl].optionCode.replace("\"", "").replace("&quot;", "")+'+'+
											optionListInType[opl].optionLocalName.replace("\"", "").replace("&quot;", "");
						if(tmpOptionListInModel[thisOptionKey] != undefined){
							optionListInType[opl].modelIdx = tmpOptionListInModel[thisOptionKey];
						}
						
					}
					viewOptionObj[optionTypeTmp] = {};
					viewOptionObj[optionTypeTmp]['optionList'] = optionListInType;
					
					optionTypeList.push(optionTypeTmp);
				}
			}
			
			tempProduct["viewOptionObj"] = viewOptionObj;
			tempProduct["optionTypeList"] = optionTypeList;
			
			return tempProduct;
		};
		
		/**
		 * Product 에 model 데이터를 가공하여 반환한다.
		 * 
		 * @param product
		 * @param frontModelIdx Product 의 model리스트 중 노출할 model의 index
		 * @return product
		 */
		var getProductModelInfo = function(product, frontModelIdx){
			var tempProduct = product;

			if(isNotNull(frontModelIdx) && isNotNull(tempProduct.modelList) && isNotNull(tempProduct.modelList[frontModelIdx])){
				
				var tempModel = tempProduct.modelList[frontModelIdx];
				
				/* Fmy Icon 셋팅 :: S*/
				var iconUseFlag = "N";
				var iconInfoObj = {};
				
				if(isNotNull(tempModel.topFlags) && isNotNull(tempModel.topFlags.iconTypeCd)){
					if(tempModel.topFlags.iconTypeCd === "N"){
						iconInfoObj["iconText"] = Granite.I18n.get("new");
						iconInfoObj["iconClass"] = " badge-icon--bg-color-blue";
						iconUseFlag = "Y";
					} else if(tempModel.topFlags.iconTypeCd === "H"){
						iconInfoObj["iconText"] = Granite.I18n.get("hot");
						iconInfoObj["iconClass"] = " badge-icon--bg-color-red";
						iconUseFlag = "Y";
					} else if(tempModel.topFlags.iconTypeCd === "B"){
						iconInfoObj["iconText"] = Granite.I18n.get("best seller");
						iconInfoObj["iconClass"] = " badge-icon--bg-color-orange";
						iconUseFlag = "Y";
					} else if(tempModel.topFlags.iconTypeCd === "U"){
						iconInfoObj["iconText"] = tempModel.topFlags.iconTitle;
						iconInfoObj["iconClass"] = " badge-icon--bg-color-teal";
						iconUseFlag = "Y";
					}
				}
				
				tempProduct.modelList[frontModelIdx].fmyIconYN = iconUseFlag;
				tempProduct.modelList[frontModelIdx].iconInfoObj = iconInfoObj;
				/* Fmy Icon 셋팅 :: E */

				/* Product Name SKU 단위로 조정  :: S */
				if(fnIsNull(tempModel.displayName)){
					tempProduct.modelList[frontModelIdx].displayName = "";
				}
				/* Product Name SKU 단위로 조정  :: E */

				/* Thumbnail Image URL 정보 셋팅 :: S */
				if(isNotNull(tempModel.thumbUrl)){
					tempProduct.modelList[frontModelIdx].thumbUrlForLazy = oplImgDomain(tempModel.thumbUrl, "lazy");
					tempProduct.modelList[frontModelIdx].thumbUrl = oplImgDomain(tempModel.thumbUrl, "");
				}
				/* Thumbnail Image URL 정보 셋팅 :: E */
				
			}
			return tempProduct;
		};
		
		var buildProductGrid = function($panelEl, jsonData, buildType){
			var productGridTemplate = "";
			var $productListUL = $panelEl.find(".offers-product-card-grid__list");
			
			var $compEl = $panelEl.closest(".js-offers-product-list");
			var $viewmoreEl = $panelEl.find('.offers-product-card-grid__cta-more');
			var $oplNoResultEl = $panelEl.find(".offers-product-card-grid__no-results");
			
			var compIdx = $compEl.data("compidx");
			var tabIdx = $panelEl.data('tabidx');

			var currentRec = parseInt($panelEl.attr("data-currentrec"));
			var itemsPerPage = parseInt($compEl.attr("data-items"));
			
			var offerGridClass = " is-show is-fade";
			if(fnIsNull(productListData[compIdx]) ){
				productListData[compIdx] = [];
			}
			if(isNotNull(jsonData)){
			if(buildType === "new build"){
				productListData[compIdx][tabIdx] = jsonData.productList;
			} else if(buildType === "view more") {
				var tempProductData = productListData[compIdx][tabIdx];
				productListData[compIdx][tabIdx] = tempProductData.concat(jsonData.productList);
				offerGridClass = "";
			} else if (buildType === "sku new build"){
				// sku 타입일 때  view more 처리를 위해서 common 데이터 생성
				jsonData.common = {};
				jsonData.common.totalRecord = jsonData.productList.length;
				jsonData.common.toRecord = itemsPerPage;

				productListData[compIdx][tabIdx] = jsonData.productList;
			} else if ( buildType ==="sku view more"){
				offerGridClass = "";
			}
			
			if(isNotNull(jsonData.productList)){
				var forProductEndIndex = jsonData.productList.length;
				if(buildType === "sku new build" && itemsPerPage < jsonData.productList.length){
					forProductEndIndex = itemsPerPage;
				}
				
				// 20200524 energylabel, repairability, usebutton value setting 
				var productType = $panelEl.data("producttype");
				var arrEnergyLabel = new Array("false");
				var arrRepairability = new Array("false");
				var arrUseButton = new Array("false");
				var arrUseUserRatingContainer = new Array("false");
				var arrRatingTabAnchorId = new Array("");
				var arrSkuList = "";
				if ( productType === "category" ){
					if ( isNotNull($panelEl.data('usebutton')) ){
						arrUseButton = new Array($panelEl.data("usebutton").toString());
					}
					if ( isNotNull($panelEl.data('useenergylabel')) ){
						arrEnergyLabel = new Array($panelEl.data("useenergylabel").toString());
					}
					if ( isNotNull($panelEl.data('userepairability')) ){
						arrRepairability =  new Array($panelEl.data("userepairability").toString());
					}
				} else {
					arrSkuList = (($panelEl.data("skulist")).toString()).split(',');
					if ( isNotNull($panelEl.data('usebuttonlist')) ){
						arrUseButton = ($panelEl.data('usebuttonlist').toString()).split(',');
					}
					if ( isNotNull($panelEl.data('enerylabellist')) ){
						arrEnergyLabel = ($panelEl.data('enerylabellist').toString()).split(',');
					}
					if ( isNotNull($panelEl.data('repairabilitylist')) ){
						arrRepairability = ($panelEl.data('repairabilitylist').toString()).split(',');
					}
					if ( isNotNull($panelEl.data('useuserratingcontainerlist')) ){
						arrUseUserRatingContainer = ($panelEl.data('useuserratingcontainerlist').toString()).split(',');
					}
					if ( isNotNull($panelEl.data('ratingtabanchoridlist')) ){
						arrRatingTabAnchorId = ($panelEl.data('ratingtabanchoridlist').toString()).split(',');
					}
				}
				// 20200524 energylabel, repairability, usebutton value setting 
				
				for(var pr=0; pr<forProductEndIndex; pr++){
					
					var tempProduct = jsonData.productList[pr];
					
					var selectedIndex = 0;	// selected Y값이 여러개 올경우 마지막 모델의 index
					var familyRecord = Number(tempProduct.familyRecord);
					var productIndex = familyRecord - 1;

					if(isNotNull(tempProduct.modelList) && tempProduct.modelList.length > 0){
						/* selected가 Y인 모델의 마지막 index가 변수에 저장됨.*/
						for(var cnt=0; cnt<tempProduct.modelList.length; cnt++){
							var tempModel = tempProduct.modelList[cnt];
							if(tempModel.selected !== undefined && tempModel.selected === "Y"){
								selectedIndex = cnt;
							}
						}
					}
					tempProduct.frontModelIdx = selectedIndex;
					
					tempProduct = getProductInfo(tempProduct);
					//product까지 가공된 데이터를 productListData 에 저장해줌
					productListData[compIdx][tabIdx][productIndex] = tempProduct;

					var refinedProduct = getProductModelInfo(tempProduct, selectedIndex);
					// 20200524 energylabel, repairability, usebutton value setting 
					if ( productType === "category" ){
						useCTAButton = arrUseButton[0];
						useEnergyLabel = arrEnergyLabel[0];
						useRepairbility	= arrRepairability[0];
					} else {
						var skuIdx = -1;
						if ( productType === "sku" ){
							for(var prdIdx = 0; prdIdx < refinedProduct.modelList.length; prdIdx++) {
								if ( arrSkuList.indexOf(refinedProduct.modelList[prdIdx].modelCode) !== -1 ) {
									skuIdx = arrSkuList.indexOf(refinedProduct.modelList[prdIdx].modelCode);
									break;
								}
							}
						}else{
							for(var sidx = 0 ; sidx < arrSkuList.length; sidx++){
								for(var prdIdx = 0; prdIdx < refinedProduct.modelList.length; prdIdx++) {
									if ( refinedProduct.modelList[prdIdx].modelCode === arrSkuList[sidx] ) {
										skuIdx = sidx;
										break;
									}
								}
							}
						}

						if ( skuIdx >= 0 ) {
							useCTAButton = arrUseButton[skuIdx];
							useEnergyLabel = arrEnergyLabel[skuIdx];
							useRepairbility	= arrRepairability[skuIdx];
							useUserRatingContainer = arrUseUserRatingContainer[skuIdx];
							ratingTabAnchorId = arrRatingTabAnchorId[skuIdx];
						} else {
							useCTAButton = arrUseButton[pr];
							useEnergyLabel = arrEnergyLabel[pr];
							useRepairbility	= arrRepairability[pr];
							useUserRatingContainer = arrUseUserRatingContainer[pr];
							ratingTabAnchorId = arrRatingTabAnchorId[pr];
						}
					}
					// 20200524 energylabel, repairability, usebutton value setting 
					
					productGridTemplate += 
						'<li class="offers-product-card-grid__item-wrap js-opl-product-card'+offerGridClass+'" data-productidx="'+productIndex+'">'+
							buildProductCard($panelEl,refinedProduct)+
						'</li>';

				}

				if(isNotNull(jsonData.common)){
					//category type
					$panelEl.attr("data-currentrec", jsonData.common.toRecord);
					if(parseInt(jsonData.common.totalRecord) > parseInt(jsonData.common.toRecord)){
						$viewmoreEl.show();
					} else {
						$viewmoreEl.hide();
					}
				}
				if(jsonData.productList.length > 0){
					if(buildType === "new build" || buildType ==="sku new build"){
						$productListUL.html(productGridTemplate);
					} else if(buildType === "view more" || buildType ==="sku view more") {
						$productListUL.append(productGridTemplate);
					}
				} else {
					if(buildType === "new build" || buildType ==="sku new build"){
						$oplNoResultEl.show();
						$viewmoreEl.hide();
					}
				}
				
			} else {
				if(buildType === "new build" || buildType ==="sku new build"){
					$oplNoResultEl.show();
					$viewmoreEl.hide();
				}
			}
			if(buildType === "view more" || buildType ==="sku view more" ){
				window.sg.components.offersProductCardGrid.reInit($compEl[0]);
				//EPP lazyLoad가 정상 작동하지 않는 경우 있음
				if(checkEppSite()){
					window.sg.common.lazyLoad.reInit();
				}
			}else{
				window.sg.components.offersProductCardGrid.init();
			}
			} else {
				$oplNoResultEl.show();
				$viewmoreEl.hide();
			}
		};
		
		

		/**
		 * 'filter' / 'sort' / 'view more' event listener
		 */
		var filteringClickListener = function(){
			/* filter click event :: S */			
			var $categoryViewMoreBtn = $('.js-category-view-more > a');
			$categoryViewMoreBtn.off("click.finder");
			$categoryViewMoreBtn.on("click.finder", function(e){
				buildOfferProductList($(this).closest(".js-offers-product_tab-panel"), "view more");
				changeAddedWishlist();
			});
			
			var $skuViewMoreBtn = $('.js-sku-view-more > a');
			$skuViewMoreBtn.off("click.finder");
			$skuViewMoreBtn.on("click.finder", function(e){
				// sku type 일 경우 view more 클릭시 저장했던 제품 리스트를 불러와서 화면에 표시함
				var $thisPanelEl = $(this).closest(".js-offers-product_tab-panel");
				var $thisCompEl = $thisPanelEl.closest(".js-offers-product-list");
				
				var compIdx = $thisCompEl.data("compidx");
				var tabIdx = $thisPanelEl.data('tabidx');

				var startIdx = parseInt($thisPanelEl.attr("data-currentrec"));
				var itemsPerPage = parseInt($thisCompEl.attr("data-items"));
				var endIdx = startIdx + itemsPerPage - 1;
				
				var resultData = {};
				var productList = productListData[compIdx][tabIdx];
				
				if(productList.length -1 > endIdx){
					productList = productList.slice(startIdx, endIdx + 1);
				} else {
					productList = productList.slice(startIdx);
				}
				
				resultData.productList = productList;
				
				resultData.common = {};
				resultData.common.totalRecord = productListData[compIdx][tabIdx].length;
				resultData.common.toRecord = startIdx + productList.length;
				
				buildProductGrid($thisPanelEl, resultData, "sku view more");

				var $viewmoreEl = $thisPanelEl.find('.offers-product-card-grid__cta-more');
				window.sg.components.offersProductCardGrid.activeView($viewmoreEl[0]);
				productCardEventListener();
				changeAddedWishlist();
				
				setWishlistAriaLabel();
				
				offerTemplateShowHide($thisPanelEl);
				
				//productCardEventListener($panelEl);
				//window.sg.components.offersProductCardGrid.activeView();
			});
		};
		

		var productCardEventListener = function(){
//			//Wtb Reinit
//			window.smg.wtb.common.reInit();
			//Wishlist icon Reinit
			window.sg.components.wishlistIcon.reInit();

			$('.js-fmyChip-is-disabled').parent().addClass('is-disabled');
			$('.js-fmyChip-is-disabled').removeClass('js-fmyChip-is-disabled').find('input').prop('disabled', true);
			
			/* fmychip click event :: S */
			var $tmpChipInputEl = $('.js-opl-product-fmychip> input').not("[disabled]");
			var $fmyChipEl = $tmpChipInputEl.closest('.js-opl-product-fmychip');
			
			$fmyChipEl.off("click.finder");
			$fmyChipEl.on("click.finder", function(e){
				var $panelEl = $(this).closest(".js-offers-product_tab-panel");
				var compIdx = $panelEl.closest(".js-offers-product-list").data("compidx");
				var tabIdx = $panelEl.data("tabidx");
				var productType = $panelEl.data("producttype");
				var $optionInputEl = $(this).find('input');
				var $targetContentEl = $optionInputEl.closest('.js-opl-product-card');
				var productIdx = $targetContentEl.data("productidx");
				var modelIdx =  $optionInputEl.data("modeli");
				const chipType = $optionInputEl.data("chiptype");

				var productIndex = "";
				setTimeout(function(){
					if(isNotNull(modelIdx)){
						productListData[compIdx][tabIdx][productIdx].frontModelIdx = modelIdx;
						var proObj = getProductModelInfo(productListData[compIdx][tabIdx][productIdx], modelIdx);
						var tmpChipTypeIdx = 0;
						var familyCode = "";

						if(productType == "category"){
							useCTAButton = $panelEl.data("usebutton").toString();
							useEnergyLabel = $panelEl.data("useenergylabel").toString();
						}else{
							var tabProductList = $panelEl.data("skulist") ? ($panelEl.data("skulist").toString()).split(",") : "";
							var useButtonList = $panelEl.data("usebuttonlist") ? ($panelEl.data("usebuttonlist").toString()).split(",") : "";
							var eneryLabelList = $panelEl.data("enerylabellist") ? ($panelEl.data("enerylabellist").toString()).split(",") : "";
							var useUserRatingContainerList = $panelEl.data("useuserratingcontainerlist") ? ($panelEl.data("useuserratingcontainerlist").toString()).split(",") : "";
							var ratingTabAnchorIdList = $panelEl.data("ratingtabanchoridlist") ? ($panelEl.data("ratingtabanchoridlist").toString()).split(",") : "";

							if ( productType === "sku" ){
								for(let idx = 0; idx < proObj.modelList.length; idx++){
									if( $optionInputEl.data("modelcode") === proObj.modelList[idx].modelCode ){
										productIndex = tabProductList.indexOf(proObj.modelList[idx].modelCode);
										break;
									}
								}
							}else{
								for(let i = 0; i < proObj.modelList.length; i++){
									if(tabProductList.includes(proObj.modelList[i].modelCode)){
										productIndex = tabProductList.indexOf(proObj.modelList[i].modelCode);
										break;
									}
								}
							}

							useCTAButton = useButtonList[productIndex];
							useEnergyLabel = eneryLabelList[productIndex];
							useUserRatingContainer = useUserRatingContainerList[productIndex];
							ratingTabAnchorId = ratingTabAnchorIdList[productIndex];
						}

						$targetContentEl.find('.option-selector__wrap').each(function(){
							if(!$(this).hasClass('js-empty-colorchip')){
								var tmpType = productListData[compIdx][tabIdx][productIdx].optionTypeList[tmpChipTypeIdx];
								var styleAttr = $(this).find('.option-selector__swiper-wrapper').attr("style");
								
								productListData[compIdx][tabIdx][productIdx].viewOptionObj[tmpType].styleAttr = styleAttr;
								tmpChipTypeIdx++;
							}
						});

						$targetContentEl.html(buildProductCard($panelEl, proObj));
	
						productCardEventListener();

						var modelCode = productListData[compIdx][tabIdx][productIdx].modelList[modelIdx].modelCode;
						changeAddedWishlist($targetContentEl, modelCode);
						
						// product card 를 새로 그려줬으므로 이벤트 새로 지정
						var reInitProductCardEl = $targetContentEl.find(".offers-product-card-grid__item")[0];
						window.sg.components.offersProductCardGrid.reInitItem(reInitProductCardEl);
						
						setWishlistAriaLabel();
						// 20220701 웹접근성 관련 focus처리 추가
						$targetContentEl.find("input").each(function(){
							var type = $(this).data("chiptype");
							var code = $(this).data("modelcode");

							if(chipType === type && modelCode === code){
								$(this).focus();
							}
						});
						
					}
				},300);
			});
			/* fmychip click event :: E */
			
			/* CTA click event :: S */
			var isBuyNowClicked = false;
			var $ctaBtn = $('.js-buy-now');
			$ctaBtn.off("click.finder");
			$ctaBtn.on("click.finder", function(e){
				var $targetBtn = $(this);
				var modelCode = "";
				var configInfo = "";
				var configuratorURL = "";
				if(isGPv2){
					configInfo = $targetBtn.attr("data-config_info");
					modelCode = $targetBtn.attr("data-modelcode");
					var addToCartFlag = $targetBtn.attr("data-cart");
					var shopSkuCode = $targetBtn.attr("data-sku-code");

					if(addToCartFlag === "true"){
						var addToCartUrl = cartUrl + "?addItem[]=" + shopSkuCode + ",1";
						window.location.href = addToCartUrl;
					}else{
						if(configInfo !== ""){
							if(configInfo.indexOf("?modelCode") < 0){
								configuratorURL = configInfo + "?modelCode=" + modelCode;
							} else {
								configuratorURL = configInfo;
							}
							window.location.href = configuratorURL;
						}
					}
				} else {
					if(isBuyNowClicked === true){
						return;
					}

					configInfo = $(this).attr("data-config_info");
					modelCode = $(this).attr("data-modelcode");
					var addToCartFlag = $targetBtn.attr("data-cart");
					var linkInfo = $(this).attr("data-link_info");

					var addCartTimeout = 10000;
					if(siteCode === "vn"){
						addCartTimeout = 20000;
					}
					
					if(configInfo !== ""){
						if(configInfo.indexOf("?modelCode") < 0){
							configuratorURL = configInfo + "?modelCode=" + modelCode;
						} else {
							configuratorURL = configInfo;
						}
						window.location.href = configuratorURL;
					}else if(addToCartFlag === "true"){
						if(hybrisApiJson==="Y"){
							let siteCodeWithEpp = isEppSite ? eppCompanyCode : siteCode;
							$.ajax({
								url: storeDomain + "/" + siteCodeWithEpp + "/ng/p4v1/addCart",
								type: "GET",
								data: {"productCode" : modelCode, "quantity" : 1},
								contentType : "application/x-www-form-urlencoded",
								dataType : "json",
								xhrFields: { withCredentials: true },
								crossDomain : true,
								timeout : addCartTimeout,
								success: function (data) {
									if(data){
										if(data.resultCode === "0000"){
											isBuyNowClicked = true;
											window.location.href = linkInfo;
										}else{
											confirmPopup(data.resultMessage,"error");
										}
									}else{
										confirmPopup("","error");
									}
								},error : function(e){
									var errorText = "";
									if (e.responseJSON != null) {
											if (isNotNull(e.responseJSON.message)) {
												errorText = e.responseJSON.message;
											}
									}
									confirmPopup(errorText,"error");
								}
							});
						}else if(((siteCode==="co" || siteCode==="pe") && !isEppSite) || siteCode==="ar" || siteCode==="br"){
							
							var storeurl= storeDomain + "/" + siteCode + "/getServicesProduct?productCode="+modelCode;
							window.location.href = storeurl;
							
						}else if( siteCode==="py" || ((siteCode==="mx" || siteCode==="cl") && !isEppSite)){
							var storeurl;
							if(siteCode == "cl"){
								storeurl= storeDomain.replace("/api/io","") + "/getServicesProduct?productCode="+modelCode;
							} else {
								storeurl= storeDomain + "/getServicesProduct?productCode="+modelCode;
							}

							window.location.href = storeurl;
							
						}else{
							var realSiteCode = siteCode;
							if(isNotNull(shopSiteCd)){
								realSiteCode = shopSiteCd;
							}
							if(isEppSite){
								realSiteCode = eppCompanyCode;
							}

							$.ajax({
								url : storeDomain + "/" + realSiteCode + "/ng/p4v1/addCart",
								type : "GET",
								data : {"productCode" : modelCode, "quantity" : 1},
								dataType : "jsonp",
								jsonp : "callback",
								timeout : 10000,
								success : function (data) {
									if(data){
										if(data.resultCode === "0000"){
											isBuyNowClicked = true;
											window.location.href = linkInfo;
										}else{
											confirmPopup(data.resultMessage,"error");
										}
									}else{
										confirmPopup("","error");
									}
								},error : function(e){
									var errorText = "";
									if (e.responseJSON != null) {
										if (isNotNull(e.responseJSON.message)) {
											errorText = e.responseJSON.message;
										}
									}
									confirmPopup(errorText,"error");
								}
							});
						}
					}
				}
				
			});
			
			// uk financing calculator click event  
			var emiPopupCta = $('.js-calculate-popup-open');
			emiPopupCta.off("click.finder");
			emiPopupCta.on("click.finder", function(e){
				var targetCta = $(this);
				var calType = targetCta.data("type");
				var targetHref = targetCta.attr("data-link_info");
				if(isNewHybris){
					//NOTICE : 마크업 js가 변경으로 호출함수 수정. EMI 팝업띄울때 모델코드를 세팅된것으로 임시 변경 해야 한다면 여기서 변경 하고 그에 따라서 세팅해야 함.
					window.sg.components.financePopup.showEmiPopup( targetCta.attr("data-modelcode"), targetCta.get(0) );
				} else if(targetCta.hasClass('eip-ee-cal')){
					installmentPlansData.getPaymentData( $(this).attr("data-price"), $(this)[0], $(this).attr("data-modelcode"));
				} else if(isNotNull($emiPopupEl)){
					var $iframeEl = $emiPopupEl.find('iframe');
					var $emiPopupTitleEl = $emiPopupEl.find('.layer-popup__title');
					
					var popupTitle = "";
					if(calType==="emi"){
						popupTitle = Granite.I18n.get("EMIs (Pay in Easy Monthly installments)");
					}else if(calType==="install"){
						popupTitle = Granite.I18n.get("Installment Calculate");
					}
					$emiPopupTitleEl.html(popupTitle);
					
					$iframeEl.attr("src", targetHref);
					
					window.sg.components.eipPopup.showPopup();
				}
			});
			
		};

		var callApiForType = function($panelEl, param, buildType){
			$.ajax({
				url: oplSearchApiUrlForType,
				type: 'GET',
				data : param,
				dataType : 'json',
				cache : true,
				timeout : 20000,
				success: function(data){
					if(data.response.statusCode === 200){
						buildProductGrid($panelEl, data.response.resultData, buildType);
						if(buildType === "new build" || buildType ==="sku new build"){
							/* 탭 클릭시에 아이템 가져오도록 수정 */
							//tabBuildCount++;
							//if(tabNum === tabBuildCount){
								if(commonLoginCheck()){
									commonGetWishlist(changeAddedWishlist);
								}
								var $compEl = $panelEl.closest(".js-offers-product-list");
								
								window.sg.components.offersProductCardGrid.init();
								window.sg.components.offersProductCardGrid.reInit($compEl[0]);
								productCardEventListener();
								setTimeout(function() {
									filteringClickListener();
								}, 400);
							//}
						} else if(buildType === "view more" || buildType ==="sku view more") {
							var $viewmoreEl = $panelEl.find('.offers-product-card-grid__cta-more');
							window.sg.components.offersProductCardGrid.activeView($viewmoreEl[0]);
							productCardEventListener();
						}
						setWishlistAriaLabel();
					} else {
						if(isEppSite){
							buildProductGrid($panelEl, null, buildType);
						}
					}
				},
				error: function(){
					if(isEppSite){
						buildProductGrid($panelEl, null, buildType);
					}
				}
			});
		};
		var callApiForSKU = function($panelEl, param, buildType){
			$.ajax({
				url: oplSearchApiUrlForSKU,
				type: 'GET',
				data : param,
				dataType : 'json',
				cache : true,
				timeout : 20000,
				success: function(data){
					if(data.response.statusCode === 200){
						buildProductGrid($panelEl, data.response.resultData, buildType);
						if(buildType === "new build" || buildType ==="sku new build"){
							/* 탭 클릭시에 아이템 가져오도록 수정 */
							//tabBuildCount++;
							//if(tabNum === tabBuildCount){
								if(commonLoginCheck()){
									commonGetWishlist(changeAddedWishlist);
								}
								var $compEl = $panelEl.closest(".js-offers-product-list");
								
								window.sg.components.offersProductCardGrid.init();
								window.sg.components.offersProductCardGrid.reInit($compEl[0]);
								productCardEventListener();
								setTimeout(function() {
									filteringClickListener();
								}, 400);
								
							//}
						} else if(buildType === "view more" || buildType ==="sku view more") {
							var $viewmoreEl = $panelEl.find('.offers-product-card-grid__cta-more');
							window.sg.components.offersProductCardGrid.activeView($viewmoreEl[0]);
							productCardEventListener();
						}
						setWishlistAriaLabel();
					} else {
						if(isEppSite){
							buildProductGrid($panelEl, null, buildType);
						}
					}
				},
				error: function(){
					if(isEppSite){
						buildProductGrid($panelEl, null, buildType);
					}
				}
			});
		};
		

		var buildOfferProductList = function($panelEl, buildType){

			var $compEl = $panelEl.closest(".js-offers-product-list");

			var itemsPerPage = parseInt($compEl.attr("data-items"));
			var productsOrder = $compEl.find('[name="opl_productsOrder"]').val();
			
			var productType = $panelEl.data("producttype");
			if(productType === "category"){
				var typeCode = isNotNull($panelEl.data("typecode")) && $panelEl.data("typecode")!=='none'? $panelEl.data("typecode") : $panelEl.data("groupcode");
				var validToDate = isNotNull($panelEl.data("validtodate")) ? parseInt($panelEl.data("validtodate")) : 3;
				var currentRec = parseInt($panelEl.attr("data-currentrec"));
				
				let oplSearchApiParamForType=
				{
					"type":typeCode,
					"siteCode":siteCode,
					"start":currentRec+1,
					"num":itemsPerPage,
					"sort":productsOrder,
					"validToDate":validToDate,
					"keySummaryYN":"N"
				};
				if(isNonshop){
					oplSearchApiParamForType['saleSkuYN'] = "N";
				}
				if(isNotNull(shopSiteCd)){
					oplSearchApiParamForType['shopSiteCode'] = shopSiteCd;
				}
				if(isEppSite){
					oplSearchApiParamForType['companyCode'] = eppCompanyCode;
					if(eppIsUserGroupPricing){
						oplSearchApiParamForType['groupName'] = eppUserGroupName;
					}
				}
				if(siteCode === "ca" || siteCode === "ca_fr"){
					if( !(isNotNull(country_region)) ){
						// country_region 쿠키값이 없거나 null인 경우 default 값으로 CA-ON 적용
						country_region = "CA-ON";
					}
					oplSearchApiParamForType['regionCode'] = country_region;
				}
				
				callApiForType($panelEl, oplSearchApiParamForType, buildType);
			
			} else {
				var skuParam = $panelEl.data("skulist");
				var onlyRequestSkuYN = "";
				
				if(productType === "sku"){
					onlyRequestSkuYN = "Y";
				}else{
					onlyRequestSkuYN = "N";
				}
				
				let oplSearchApiParamForSKU= 
				{
					"siteCode":siteCode,
					"modelList":skuParam,
					"commonCodeYN":"N",
					"saleSkuYN":"N",
					"onlyRequestSkuYN":onlyRequestSkuYN,
					"keySummaryYN":"N"
				};
				if(isNonshop){
					oplSearchApiParamForSKU.saleSkuYN = "N";
				}
				if(isNotNull(shopSiteCd)){
					oplSearchApiParamForSKU['shopSiteCode'] = shopSiteCd;
				}
				if(isEppSite){
					oplSearchApiParamForSKU['companyCode'] = eppCompanyCode;
					if(eppIsUserGroupPricing){
						oplSearchApiParamForSKU['groupName'] = eppUserGroupName;
					}
					//[24.02.27][EPP][CN][O2O] : o2oId 파라미터 추가
					if(window.sg.epp.common.userStoreId != ""){
						oplSearchApiParamForSKU['o2oId'] = window.sg.epp.common.userStoreId;
					}					
				}
				if(siteCode === "ca" || siteCode === "ca_fr"){
					if( !(isNotNull(country_region)) ){
						// country_region 쿠키값이 없거나 null인 경우 default 값으로 CA-ON 적용
						country_region = "CA-ON";
					}
					oplSearchApiParamForSKU['regionCode'] = country_region;
				}
				if(buildType === "new build"){
					buildType = "sku new build";
				}

				callApiForSKU($panelEl, oplSearchApiParamForSKU, buildType);
			}
			
			offerTemplateShowHide($panelEl);
		};
		
		var offerTemplateShowHide = function($panelEl){
			// 230119 PD07 의 wishlist 와 calculate finance 옵션이 M01_Offer template 에만 노출되고 다른 template 에는 비노출 되도록 분기처리
			setTimeout(function(){
				var $wishlistEl = $panelEl.find(".pd-wishlist-cta");
				var $calculateEl = $panelEl.find(".offers-product-card-grid__cta-calculate");
				
				if(pageTrack !== "offer main"){
					$wishlistEl.hide();
					$calculateEl.hide();
				}
			},500);
		};
		
		var loadOfferProductList = function(){
			var compIdx = 0;
			tabNum = $(".js-offers-product_tab-panel").length;
			const hashId = location.hash;
			$oplComponent.each(function(){
				var _this = $(this);

				_this.attr("data-compidx", compIdx);
				compIdx++;
				
				/* 탭 클릭시에 아이템 가져오도록 수정 */
				//var $tabPanelEl = _this.find(".js-offers-product_tab-panel");
				var $tabPanelEl = _this.find(".js-offers-product_tab-panel").eq(0);

				if(isNotNull(hashId)){
					if(_this.find(hashId).length > 0){
						$tabPanelEl = _this.find(hashId).eq(0);
					}
				}
				
				$tabPanelEl.each(function(){
					buildOfferProductList($(this), "new build");
				});
			});
		};

		/* 탭 클릭시에 아이템 가져오도록 수정 */
		// $(document).on("click", ".offers-product-card-grid .tab__list li", function(){
		// 	var $oplComponent = $(this).closest(".js-offers-product-list");
		// 	var $tabPanelEl = $oplComponent.find(".js-offers-product_tab-panel").eq($(this).index());
		// 	var noResult = $tabPanelEl.find(".offers-product-card-grid__no-results").attr("style") === "";
		// 	var isItem = $tabPanelEl.find(".offers-product-card-grid__list li").length > 0;

		// 	if(!noResult && !isItem) {
		// 		buildOfferProductList($tabPanelEl, "new build");
		// 	}
		// });
		$('.offers-product-card-grid__swiper').on('slideChange',(event) => {
			
			var $oplComponent = $(event.detail.activeEl).closest(".js-offers-product-list");
			var $tabPanelEl = $oplComponent.find(".js-offers-product_tab-panel").eq(event.detail.activeIndex);
			var noResult = $tabPanelEl.find(".offers-product-card-grid__no-results").attr("style") === "";
			var isItem = $tabPanelEl.find(".offers-product-card-grid__list li").length > 0;

			if(!noResult && !isItem) {
				buildOfferProductList($tabPanelEl, "new build");
			}
		});

		loadOfferProductList();
	};

	$(function() {
		offerProductCardListFn();
	});
}(window, $));
(() => {
	if($("#siteCode").val() === "id" &&($("#tempTitle").val() === "page-standard-pd" || $("#tempTitle").val() === "page-feature-pd")){
		return;
	}
	
  const $q = window.sg.common.$q;
  const utils = window.sg.common.utils;
  const lazyLoad = window.sg.common.lazyLoad;
  const scrollbar = window.sg.common.scrollbar;
  const BREAKPOINTS = window.sg.common.constants.BREAKPOINTS;
  const optionSelector = window.sg.common.OptionSelector;

  const selector = {
    component: '.recently-viewed',
    cardComponent: '.recently-viewed__item',
  };

  const el = {
    window: null,
    component: null,
  };

  class RecentlyViewed {
    constructor(component) {
      this.selector = {
        component: '.recently-viewed',
        optionWrap: '.option-selector',
        cardFiche: '.recently-viewed__fiche',
        cardFicheCtaWrap: '.recently-viewed__fiche__cta-wrap',
        badgeRepairability: '.badge-repairability',
        rating: '.recently-viewed__rating',
      };
    
      this.el = {
        component: $q(component),
      };

      this.handler = {
        setHeight: this.setHeight.bind(this),
      };

      RecentlyViewed.instances.set(component, this);

      this.init();
    }

    setElement() {
      this.el.optionWrap = this.el.component.find(this.selector.optionWrap);
      this.el.cardSlide = this.el.component.find(selector.cardComponent);
      this.el.cardFiche = this.el.component.find(this.selector.cardFiche);
      this.el.cardFicheCtaWrap = this.el.component.find(this.selector.cardFicheCtaWrap);
      this.el.rating = this.el.component.find(this.selector.rating);
    }

    init() {
      this.setElement();

      this.setCardInstances();

      this.setHeight();

      this.bindEvents();
    }

    reInit() {
      this.init();
    }

    setDefault() {
      const defaultList = [this.el.optionWrap, this.el.rating, this.el.cardFicheCtaWrap, this.el.cardFiche, this.el.cardSlide];

      defaultList.forEach((item) => {
        item.css({
          'height': '',
        });
      });
    }

    setHeight() {
      const resizeList = [this.el.optionWrap, this.el.rating, this.el.cardFicheCtaWrap, this.el.cardFiche, this.el.cardSlide];
      
      this.setDefault();

      resizeList.forEach((element) => {
        const cardArr = [];

        element.target.forEach((item) => {
          const $item = $q(item);
  
          if ($item.css('display') !== 'none') {
            cardArr.push($item.target[0].getBoundingClientRect().height);
          }

          if ($item.target[0].classList.contains('recently-viewed__fiche__cta-wrap')) {
            if ($item.target[0].childElementCount === 0) {
              $item.target[0].classList.add('no-energy-label');
            }
          }

          if ($item.target[0].classList.contains('recently-viewed__fiche')) {
            if ($item.target[0].querySelector('.badge-repairability')) {
              $item.target[0].classList.add('with-repairability');
            }
          }
        });
  
        const maxHeight = Math.max.apply(null, cardArr);
  
        element.target.forEach((item) => {
          const $item = $q(item);
  
          if ($item.css('display') !== 'none') {
            $item.css({
              'height': `${maxHeight}px`,
            });
          }
        });
      });

      setTimeout(() => {
        this.el.component.find('.scrollbar').target.forEach((element) => {
          scrollbar.resize(element);
        });
      }, 30);
    }

    setCardInstances() {
      this.el.cardSlide.target.forEach((cardEl) => {
        if (!ViewProductCard.instances.has(cardEl)) {
          new ViewProductCard(cardEl);
        } else {
          const instances = ViewProductCard.instances.get(cardEl);
          instances.reInit();
        }
      });
    }

    bindEvents() {
      $q(window).off('resize', this.handler.setHeight).on('resize', this.handler.setHeight);
    }
  }

  class ViewProductCard {
    constructor(component) {
      this.selector = {
        cardComponent: '.recently-viewed__item',
        optionSelector: '.option-selector__wrap',
        mobileOptionWrap: '.recently-viewed__option-selector',
        mobileOptionColor: '.recently-viewed__color-chip',
        mobileOptionCapacity: '.recently-viewed__capacity',
      };

      this.el = {
        component: $q(component),
      };

      this.handler = {
        resize: this.resize.bind(this),
      };

      ViewProductCard.instances.set(component, this);

      this.init();
    }

    setElement() {
      this.el.optionSelector = this.el.component.find(this.selector.optionSelector);
      this.el.mobileOptionWrap = this.el.component.find(this.selector.mobileOptionWrap);

      this.desktopFlag = false;
      this.mobileFlag = false;
      this.resizeFlag = false;
    }

    init() {
      this.setElement();

      this.resize();

      this.bindEvents();
    }

    reInit() {
      this.init();
    }

    setMobileOption() {
      this.el.mobileOptionWrap.target.forEach((item) => {
        const $item = $q(item);
        const $optionColor = $item.find(this.selector.mobileOptionColor);
        const $optionCapacity = $item.find(this.selector.mobileOptionCapacity);

        if ($optionColor.target.length) {
          if ($optionColor.find('.recently-viewed__color').target.length > 5) {
            $optionColor.addClass('recently-viewed__color-chip--over');
          } else {
            $optionColor.removeClass('recently-viewed__color-chip--over');
          }
        }

        if ($optionCapacity.target.length) {
          if ($optionCapacity.width() > $item.width()) {
            $optionCapacity.addClass('recently-viewed__capacity--over');
          } else {
            $optionCapacity.removeClass('recently-viewed__capacity--over');
          }
        }
      });
    }

    resize() {
      if (BREAKPOINTS.MOBILE < utils.getViewPort().width) {
        if (this.desktopFlag === false) {
          this.desktopFlag = true;
          this.mobileFlag = false;
        }
      } else {
        if (this.mobileFlag === false) {
          this.desktopFlag = false;
          this.mobileFlag = true;

          if (this.resizeFlag === false) {
            this.setMobileOption();

            this.resizeFlag = true;
          }
        }
      } 
    }

    bindEvents() {
      $q(window).off('resize', this.handler.resize).on('resize', this.handler.resize);
    }
  }

  const init = () => {
    el.window = $q(window);
    el.component = $q(selector.component);

    if (!el.component.target.length) {
      return;
    }

    $q(selector.component).target.forEach((element) => {
      if (!RecentlyViewed.instances.has(element)) {
        new RecentlyViewed(element);
      }
    });
  };

  const reInit = () => {
    lazyLoad.setLazyLoad();

    $q(selector.component).target.forEach((element) => {
      $q(element).find('.scrollbar').target.forEach((scroll) => {
        scrollbar.reInit(scroll);
        scrollbar.resize(scroll);
      });

      $q(element).find('.option-selector').target.forEach((os) => {
        optionSelector.reInit($q(os));
      });

      if (!RecentlyViewed.instances.has(element)) {
        new RecentlyViewed(element);
      } else {
        const instances = RecentlyViewed.instances.get(element);
        instances.reInit();
      }
    });
  };

  const reInitItem = (item) => {
    lazyLoad.setLazyLoad();

    $q(item).target.forEach((element) => {
      $q(element).find('.option-selector').target.forEach((os) => {
        optionSelector.reInit($q(os));
      });
      
      if (!ViewProductCard.instances.has(element)) {
        new ViewProductCard(element);
      } else {
        const instances = ViewProductCard.instances.get(element);
        instances.reInit();
      }
    });
  };

  RecentlyViewed.instances = new WeakMap();
  ViewProductCard.instances = new WeakMap();

  $q.ready(init);

  window.sg.components.recentlyViewed = {
    init,
    reInit,
    reInitItem,
  };
})();

;(function (win, $) {
    'use strict';
    
    if($("#siteCode").val() === "id" &&($("#tempTitle").val() === "page-standard-pd" || $("#tempTitle").val() === "page-feature-pd")){
    	$("#recently-viewed").remove();
		console.log(" ##### No Recently viewed #### ");
		return;
	}
    
    window.sg.components.dynamic = window.sg.components.dynamic || {};
	const dynamic = window.sg.components.dynamic;
	const recentlyEditMode = $('#recentlyEditMode').val();
	
	var rencentlyViewGrid = function() {
		var searchDomain = $('#searchDomain').val(),
			shopIntegrationFlag = $('#shopIntegrationFlag').val(),
			cookieNm = 'recent_list',
			cookieVal = '',
			shopMultiCookieVal = '',
			siteCode = $('#siteCode').val(),
			apiStageInfo = $('#apiStageInfo').val(),
			priceCurrency = $('#recentPriceCurrency').val(),
			oldProductYn = $('#oldProductYn').val(),
			reviewUseYN = $('#reviewUseYN').val(),
			reevooUseYN = $('#reevooUseYN').val();
		
		var lowestWasPriceSiteCode = ['pl','it','si','gr','fi','se','no','dk','fr']; //lowestWasPrice 사용 국가
		
		//[S] 23.07.06 &EPPONLY omnipricing 적용
		if($('#isEppPage').val() === 'true'){
			if(lowestWasPriceSiteCode.includes(siteCode)){
				if ( eppOmniPricingUseYn !== "Y" ){
					let eppLowestWasPriceSiteCode = [];
					eppLowestWasPriceSiteCode = lowestWasPriceSiteCode.filter(function (lwstSite) {
					    return lwstSite !== siteCode;
					});
					lowestWasPriceSiteCode = eppLowestWasPriceSiteCode;
				}
			}
		}
		//[E] 23.07.06 &EPPONLY omnipricing 적용
		
		var islogin = false;
		const isGPv2 = (shopIntegrationFlag === 'GPv2')?true:false;
		const isHybrisNew = (shopIntegrationFlag === 'Hybris-new')?true:false;					//new-hybris
		const isHybrisIntg = (shopIntegrationFlag === 'Hybris-intg')?true:false;
		const isB2bhybris = (shopIntegrationFlag === "true")?true:false;
		const isB2b = ($("#b2bFlag").val() === "Y")?true:false;
		const pageTrack = digitalData.page.pageInfo.pageTrack;
		const scene7domain = $('#scene7domain').val();
		
		const recImagePresetDesktop = "?$240_240_PNG$";
		const recImagePresetMobile = "?$480_480_PNG$";
		const recImageLazyloadPreset = "LazyLoad_Home";
		
		/* b2b smb user 로직 필요한 변수 셋팅 :: S */
		const isTieredPriceSite = $('#tieredPriceUseYn').val()=="Y"? true:false;
		
		const useTaxExPriceYN =  $.cookies.get('useTaxExPriceYN', {domain : ".samsung.com"});
		let useTaxExPrice = false;
		if(useTaxExPriceYN === "Y"){
			useTaxExPrice = true;
		}
		
		let isSMBUser = false;
		let isLogedin = false;
		
		if(isB2bhybris){
			isLogedin = commonLoginCheck();
			if(isLogedin && isB2bhybris){
				const isSMBRegisteredUserYN = $.cookies.get("isSMBRegisteredUserYN", {domain : ".samsung.com"});
				if(isSMBRegisteredUserYN === "Y"){
					isSMBUser = true;
				}
			}
		}
		/* b2b smb user 로직 필요한 변수 셋팅 :: E */
		
		//제품 전체 데이터
		var productListData = [];
		var productListIndex = 0;
		
		Granite.I18n.setLocale($("#language").val());
		
		if(isB2b){
			cookieNm = "recent_list_b2b";
		}else{
			cookieNm = "recent_list";
		}
		cookieVal = cookies.getCookie(cookieNm);
		
		var isNotNull = function(_str){
			return !fnIsNull(_str);
		};
		
		function _trimToNull(str) {
			let s = $.trim(str);
			return s.length > 0 ? s : null;
		}
		
		var productPreset = function(presetStr, imgUrl){
	    	var preset = "?$"+presetStr;
	    	var tempImgUrl = imgUrl.toLowerCase();
	
	        if (tempImgUrl.indexOf(".jpg") > -1) {
	        	preset += "_JPG$";
	        } else if (tempImgUrl.indexOf(".jpeg") > -1) {
	        	preset += "_JPG$";
	        } else if (tempImgUrl.indexOf(".png") > -1) {
	        	preset += "_PNG$";
	        } else if (tempImgUrl.indexOf(".gif") > -1) {
	        	preset += "_GIF$";
	        } else {
	        	preset += "_PNG$";
	        }
	    	 
	        return preset;
	    	
	    };
		
		var recImgDomain = function(imgUrl, presetType, iconFl) {
			var newUrl = "";
			var useScene7domain = scene7domain;
			if(fnIsNull(imgUrl) || imgUrl.indexOf("http:") > -1 || imgUrl === "" || imgUrl.indexOf("//image-us.samsung.com/") > -1 || 
					imgUrl.indexOf("//stg-images.samsung.com.cn/") > -1 || imgUrl.indexOf("//images.samsung.com.cn/") > -1 || imgUrl.indexOf("image.samsung.com.cn/") > -1 ||
					imgUrl.indexOf("//stg-images.samsung.com/") > -1 || imgUrl.indexOf("//images.samsung.com/") > -1 || imgUrl.indexOf("image.samsung.com/") > -1){
				newUrl = imgUrl;
			}else{
				if(iconFl){
					useScene7domain = useScene7domain.replace("/image/","/content/");
				}
				newUrl = useScene7domain + imgUrl;
			}
			
			if(newUrl.indexOf("?$") < 0 && isNotNull(imgUrl)){
				if(presetType === "lazy"){
					newUrl += productPreset(recImageLazyloadPreset, newUrl);
				} else if( presetType === "product-desktop"){
					newUrl += recImagePresetDesktop;
				} else if( presetType === "product-mobile"){
					newUrl += recImagePresetMobile;
				}
			}
			return newUrl;
		};
		
		var arrayContains = function(array, element){
			for (var i=0; i<array.length; i++) {
				if (array[i] === element) {
					return true;
				}
			}
			return false;
		};
		
		/**
		 * Product 데이터를 가공하여 반환한다. 
		 */
		var getProductInfo = function(product){
			var tempProduct = product;
	
			/* 각 모델 별로 가지고 있는 chip정보를 리스트로 만들어 product 에 저장한다 ( 이때 index 는 모델 index 와 동일 함 ) 
			 * ( 옵션칩 클릭 이벤트시 대조 하여 모델 index를 색출할 데이터 )
			 * modelChipInfoList = [
			 * 		"type1ChipCode+type2ChipCode-...",
			 * 		"type1ChipCode+type2ChipCode-...",
			 * 		...
			 *  ]
			 * */
			var tmpOptionListInModel = {};
			for(var mi in tempProduct.modelList){
				var tmpModel = tempProduct.modelList[mi];
				var tmpFmyChipList = tmpModel.fmyChipList;
				
				for(var fci in tmpFmyChipList){
					//fmyChipCode에 " 제거 
					var thisOptionKey = tmpFmyChipList[fci].fmyChipType + '+'+
					 					tmpFmyChipList[fci].fmyChipCode.replace("\"", "").replace("&quot;", "")+'+'+
					 					tmpFmyChipList[fci].fmyChipLocalName.replace("\"", "").replace("&quot;", "");
					
					if(tmpOptionListInModel[thisOptionKey] === undefined){
						tmpOptionListInModel[thisOptionKey] = mi;
					} else {
						tmpOptionListInModel[thisOptionKey] += ","+mi;
					}
				}
			}
			
			var optionTypeList = [];
			var viewOptionObj = {};
			if(isNotNull(tempProduct.chipOptions)){
				for(var a=0; a<tempProduct.chipOptions.length; a++){
					var optionData = tempProduct.chipOptions[a];
					var optionTypeTmp = optionData.fmyChipType;

					var optionListInType = optionData.optionList;
					for(var opl in optionListInType){
						var modelOptionKey = optionData.fmyChipType + '+'+
											optionListInType[opl].optionCode.replace("\"", "").replace("&quot;", "")+'+'+
											optionListInType[opl].optionLocalName.replace("\"", "").replace("&quot;", "");
						if(tmpOptionListInModel[modelOptionKey] !== undefined){
							optionListInType[opl].modelIdx = tmpOptionListInModel[modelOptionKey];
						}
						
					}
					viewOptionObj[optionTypeTmp] = {};
					viewOptionObj[optionTypeTmp]['optionList'] = optionListInType;
					
					optionTypeList.push(optionTypeTmp);
				}
			}
			
			
			tempProduct["viewOptionObj"] = viewOptionObj;
			tempProduct["optionTypeList"] = optionTypeList;
			
			return tempProduct;
		};
		
		/**
		 * Product 에 model 데이터를 가공하여 반환한다.
		 * 
		 * @param product
		 * @param frontModelIdx Product 의 model리스트 중 노출할 model의 index
		 * @return product
		 */
		var getProductModelInfo = function(product, frontModelIdx){
			var tempProduct = product;
	
			if(isNotNull(frontModelIdx) && isNotNull(tempProduct.modelList) && isNotNull(tempProduct.modelList[frontModelIdx])){
				
				var tempModel = tempProduct.modelList[frontModelIdx];
				
				/* B2B Search Api Data :: S */
				if(isB2b){
					let shopInfoObj = {};
					if(isB2bhybris){
						shopInfoObj = tempModel.b2bHybrisShopInfo;
					} else {
						shopInfoObj = tempModel.globalShopInfo;
					}
					for(let si in shopInfoObj){
						tempProduct.modelList[frontModelIdx][si] = shopInfoObj[si];
					}
				}
				/* B2B Search Api Data :: E */
	
				/* Product Name SKU 단위로 조정  :: S */
				if(fnIsNull(tempModel.displayName)){
					tempProduct.modelList[frontModelIdx].displayName = "";
				}
				/* Product Name SKU 단위로 조정  :: E */
	
				/* thumbUrl Image Preset 정보 셋팅 :: S */
				if(isNotNull(tempModel.thumbUrl)){
	
					var thumbObj = {};
	
					if(isNotNull(tempModel.thumbUrl)){
						thumbObj = {};
						thumbObj['imageUrlDesktop'] = recImgDomain(tempModel.thumbUrl, 'product-desktop');
						thumbObj['imageUrlMobile'] = recImgDomain(tempModel.thumbUrl, 'product-mobile');
						thumbObj['lazyImageUrl'] = recImgDomain(tempModel.thumbUrl, 'lazy');
					}
	
					tempProduct.modelList[frontModelIdx].thumbInfo = thumbObj;
				}
				
				/* 별점 정보 & review Count :: S */
				if(reviewUseYN ==="Y" || reevooUseYN === "Y"){
					var item = "";
					var ratings = tempModel.ratings;
					if(fnIsNull(ratings)){ 
						ratings = 0; 
						tempProduct.modelList[frontModelIdx].ratings = 0;
					}
					
					// rating 반올림 처리
					var tmpCount = Math.pow(10,1);
					ratings = Math.round(ratings*tmpCount)/tmpCount;
	
					var ratingValue = parseFloat(ratings).toFixed(1),
					fullStarCnt = parseInt(ratings),
					cutStarWidthStyleNum = 0;
					cutStarWidthStyleNum = parseInt((ratingValue-fullStarCnt)*100);
					
					var ratingEmptyText = '';
					
					if(ratingValue !== "0.0"){
						tempProduct.modelList[frontModelIdx].ratings = ratingValue;
					}else{
						ratingEmptyText = 'rating--empty';
					}
					tempProduct.modelList[frontModelIdx].ratingEmptyText = ratingEmptyText;
					
					for(var j=0; j<fullStarCnt;j++){
						item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 100%;"></span></span>';
					}
					if(fullStarCnt < 5 && fullStarCnt > 0){
						item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: ' + cutStarWidthStyleNum + '%;"></span></span>';
						for(var k=4;k>fullStarCnt;k--){
							item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
						}
					} else if ( fullStarCnt === 0 && isNotNull(tempProduct.modelList[frontModelIdx].reviewUrl)){
						for(var empty_idx=0;empty_idx<5;empty_idx++){
							item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
						}
					}
					tempProduct.modelList[frontModelIdx].ratingHtml = item;
	
					if(fnIsNull(tempModel.reviewCount)){
						tempProduct.modelList[frontModelIdx].reviewCount = "0";
					}
					tempProduct.modelList[frontModelIdx].ratingsText = Granite.I18n.get("{0} out of {1} Stars",["<span>"+tempModel.ratings+"</span>","5"],siteCode);
	
				}
				/* 별점 정보 & review Count :: E */
				
				/* Energy Label Data :: S */
				if(fnIsNull(tempModel.energyLabelGrade) || tempModel.energyLabelGrade === "N/A"){
					tempProduct.modelList[frontModelIdx].energyLabelGrade = "";
				}
				if(fnIsNull(tempModel.ficheFileUrl)){
					tempProduct.modelList[frontModelIdx].ficheFileUrl = "";
				}
				/* Energy Label Data :: E */
				
			}
			return tempProduct;
		};
		
		/**
		 * product card Name 영역
		 */
		var productCardNameBuild = function(frontModel){
	
			var pdpUrl = "javascript:void(0)"; 
			if(isNotNull(frontModel.pdpUrl)){
				pdpUrl = frontModel.pdpUrl;
			}
			var productCardTemplate =
				'<div class="recently-viewed__product-name">';
			if(isNotNull(frontModel.displayName)){
				productCardTemplate +=
					'<a href="'+pdpUrl+'" an-tr="pd09_recently viewed-'+pageTrack+'-product-link" an-ca="product click" an-ac="recently viewed" an-la="product click" data-modelcode="'+frontModel.modelCode+'" data-modelname="'+frontModel.modelName+'">'+
						'<span>'+frontModel.displayName+'</span>'+
					'</a>';
			}
			productCardTemplate +=
				'</div>';
		
			return productCardTemplate;
		}
		
		/**
		 * product card image 영역
		 */
		var productCardImageBuild = function(frontModel, product){
			
			var productCardTemplate =
				'<div class="recently-viewed__image">';
				// epp recently feature URL 변경 적용
				if($('#isEppPage').val() === 'true'){
					const pdType = product.simplePdYN === 'N' ? "pd" : "feature";
					if(frontModel.pdpUrl.indexOf('/pd.') > -1){
						frontModel.pdpUrl  = frontModel.pdpUrl .replace(/\/pd./ig,`/${pdType}.`);
					} else if(frontModel.pdpUrl.indexOf('/feature.') > -1){
						frontModel.pdpUrl  = frontModel.pdpUrl .replace(/\/feature./ig,`/${pdType}.`);
					}
				}
				
				if(isNotNull(frontModel.pdpUrl) && isNotNull(frontModel.thumbUrl)){
					productCardTemplate +=
					"<a href='"+frontModel.pdpUrl+"' aria-label='"+frontModel.displayName+"' an-tr='pd09_recently viewed-"+pageTrack+"-product-link' an-ca='product click' an-ac='recently viewed' an-la='product click' data-modelcode='"+frontModel.modelCode+"' data-modelname='"+frontModel.modelName+"'>"+
						'<div class="image">' +
				        	'<img class="image__preview lazy-load responsive-img" data-desktop-src="'+ frontModel.thumbInfo.lazyImageUrl +'" data-mobile-src="'+ frontModel.thumbInfo.lazyImageUrl +'" alt="">' +
				        	'<img class="image__main lazy-load responsive-img" data-desktop-src="'+ frontModel.thumbInfo.imageUrlDesktop +'" data-mobile-src="'+ frontModel.thumbInfo.imageUrlMobile +'" alt="">' +
			        	'</div>'+
					'</a>';
				}
			productCardTemplate +=
				'</div>';
			return productCardTemplate;
		};
		
		/**
		 * viewOptionObj : 현재 그리고 있는 Product 의 전체 옵션정보
		 * optionChip 선택 시 화면에 표시해 줄 sku의 index 를 반환함
		 * selectOptionMoIdx : 현재 선택한 옵션의 moidx 값 
		 * otherSelectedOptionMoIdxList : 현재 선택한 타입을 제외한 타입중 선택된 나머지 옵션 리스트
		 * isColorType : 현재 타입이 color 인지에 대한 여부
		 * optionTypeList : 현재 그리고있는 Product 의  optionTypeList 
		 */
		var getSelectedModelIdx = function(viewOptionObj, selectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, optionTypeList){
			var modelIdx = 0;
			
			var modelIdxList = selectOptionMoIdx.split(',');
			var firstIdx = modelIdxList[0];
			
			var memoryIdx = optionTypeList.indexOf("MEMORY");
			
			if(!isGPv2 && !isHybrisNew && isColorType && memoryIdx > 0){
				// [global, hybrisIntg] 상위 옵션이 color 이고, 하위에 같이 바뀌는 옵션이 memory 일 때 가장 큰값으로 선택처리
				
				var memoryOptionList = viewOptionObj["MEMORY"].optionList;
				var selectedModelIdx = 0;
				var highestOption = 0;
				for(var moi in memoryOptionList){
					var temp_mi = memoryOptionList[moi].modelIdx.split(',');
					for(var tmi in temp_mi){
						// 선택한 옵션칩의 modelIdx 리스트에 해당하는 model idx 가 있으면  비교 
						if(arrayContains(modelIdxList, temp_mi[tmi])){
							var this_memory_num = memoryOptionList[moi].optionCode.replace("TB","000").replace(/[^0-9]/g,"");
							if(highestOption < this_memory_num){
								highestOption = this_memory_num;
								selectedModelIdx = temp_mi[tmi];
							}
							break;
						}
					}
				}
				modelIdx = selectedModelIdx;
				
			} else {
				var selectModelIdxList = [];
				var tempMappingModelIdx = [];
				
				for(var omi in otherSelectedOptionMoIdxList){
					var otherMoIdx = otherSelectedOptionMoIdxList[omi];
					if(isNotNull(otherMoIdx)){
						var otherMoIdxArr = otherMoIdx.split(',');

						tempMappingModelIdx = [];
						for(var mli in modelIdxList){
							if(otherMoIdxArr.indexOf(String(modelIdxList[mli]))>-1) {
								tempMappingModelIdx.push(modelIdxList[mli]);
							}
						}
						if(tempMappingModelIdx.length > 0){
							modelIdxList = tempMappingModelIdx;
						}
					}
					
				}
				if(modelIdxList.length > 0){
					modelIdx = modelIdxList[0];
				} else {
					modelIdx = firstIdx;
				}
			}
			
			return modelIdx;
		};
		/**
		 * product card OptionChip 영역
		 */
		var productCardFmyOptionBuild = function(product){
			var productCardTemplate = "";
			var optionChipMobile = "";
			var frontModel = product.modelList[product.frontModelIdx];
			/* option 없을 경우 영역 전체 삭제 */ 
			if(isNotNull(product.viewOptionObj)){
				productCardTemplate += 
					'<div class="option-selector option-selector__color-text">';
				optionChipMobile +=
					'<div class="recently-viewed__option-selector">';
				if(isNotNull(product.viewOptionObj) && Object.keys(product.viewOptionObj).length > 0){
					
					var parentOptionModelIdx = "";
					var viewOptionIdx = 0;
					
					var curViewOptionObj = product.viewOptionObj;
					var curOptionTypeList = product.optionTypeList;
					
					for(var type in product.viewOptionObj){
						var optionDataType = "";
						optionDataType = type.toLowerCase().replace(/ /g, "-");
						
						var optionObj = product.viewOptionObj[type].optionList;
						
						var isSelected = false;
						var currentOption = {};
						var disabledClass = '';
						var modelIdxList = '';
						var curSelecteModelIdx = '';
						
						var parentModelIdxList = '';
						
						var curSelectOptionMoIdx = '';
						var otherSelectedOptionMoIdxList = '';
						var isColorType = '';
						
						var tmp_optionList = '';
						var tmp_option = '';
						var tmp_optionMoIdx = '';
						var tmp_optionMoIdxArr = '';
						
						var modelCodeAttrForTagging = '';
						var modelNameAttrForTagging = '';
						
						var modelIdx = '';
						
						var chipId = '';
						var chipName = '';
						
						var selectorWrapperStyle = "";
						if(isNotNull(product.viewOptionObj[type].styleAttr)){
							selectorWrapperStyle = product.viewOptionObj[type].styleAttr;
						}
						
						//.color-name-text에 들어갈 값 세팅
						var colorNameText = '';
						for(var option in optionObj){
							currentOption = optionObj[option];
							modelIdxList = currentOption.modelIdx.split(',');
							if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
								colorNameText = currentOption.optionLocalName;
								var multiColorNameText = currentOption.optionLocalName;
							}
						}
						
						if(type === "COLOR"){
							productCardTemplate +=
								'<div class="option-selector__color-name">'+Granite.I18n.get("Color")+' : '+
									'<button type="button" class="option-selector__color-name-text" disabled>'+
										"<strong class='hidden' data-global-text='"+'{"Expand" : "Click to Expand", "Collapse" : "Click to Collapse"}'+"' aria-hidden='true'>Click to Expand</strong>"+
										'<strong class="option-selector__color-name-text-in">'+multiColorNameText+'</strong>'+
									'</button>'+
									'<div class="option-selector__color-tooltip" aria-hidden="true">'+
										Granite.I18n.get("Color")+' : <strong class="option-selector__color-tooltip-text">'+multiColorNameText+'</strong>'+
										'<a href="javascript:void(0)" class="option-selector__color-tooltip-close" role="button">'+
					                        '<span class="hidden">Close</span>'+
					                        '<svg class="icon icon-close" focusable="false" aria-hidden="true">'+
												'<use xlink:href="#delete-bold" href="#delete-bold"></use>'+
											'</svg>'+
										'</a>'+
									'</div>'+
								'</div>'+
								'<div class="option-selector__wrap option-selector__wrap--color-chip" data-desktop-view="5" data-mobile-view="4">'+
									'<div class="option-selector__swiper">'+
									'<div class="option-selector__swiper-container">'+
										'<div class="option-selector__swiper-wrapper" role="list">';
							
							
							optionChipMobile +=
								'<div class="recently-viewed__color-chip">';
							for(var option in optionObj){
								/* 선택되어있는(대표모델) 옵션 flag값 셋팅 */
								currentOption = optionObj[option];

								isSelected = false;
								modelIdxList = currentOption.modelIdx.split(',');

								if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
									isSelected = true;
									curSelecteModelIdx = currentOption.modelIdx;
									disabledClass = '';
								} else {
									disabledClass = ' js-fmyChip-is-disabled-recent';
									if(viewOptionIdx === 0){
										disabledClass = '';
									} else {
										parentModelIdxList = parentOptionModelIdx.split(',');
										for(var mli in modelIdxList){
											//상위 선택된 옵션칩 의 model idx 에 일치하는 model idx 가 있는 경우 활성화
											if(arrayContains(parentModelIdxList, modelIdxList[mli])){
												disabledClass = '';
												break;
											}
										}
									}
								}
								
								if(disabledClass === ''){
									curSelectOptionMoIdx = currentOption.modelIdx;
									otherSelectedOptionMoIdxList = [];
									isColorType = true;
									
									for(var ooi in curViewOptionObj){
										if(ooi !== type){
											tmp_optionList = curViewOptionObj[ooi].optionList;
											for(var toi in tmp_optionList){
												tmp_option = tmp_optionList[toi];
												tmp_optionMoIdx = tmp_option.modelIdx;
												tmp_optionMoIdxArr = tmp_optionMoIdx.split(',');
												
												// 현재 선택되어있는 option 색출
												if(tmp_optionMoIdxArr.indexOf(String(product.frontModelIdx))>-1){
													otherSelectedOptionMoIdxList.push(tmp_optionMoIdx);
												}
											}
											
										}
									}
									
									modelIdx = getSelectedModelIdx(curViewOptionObj, curSelectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, curOptionTypeList);
									if(product.modelList.length > modelIdx && isNotNull(product.modelList[modelIdx])){
										modelCodeAttrForTagging = ' data-modelcode="'+product.modelList[modelIdx].modelCode+'"';
										modelNameAttrForTagging = ' data-modelname="'+product.modelList[modelIdx].modelName+'"';
									}
								}
	        					
	        					chipId = 'product-'+optionDataType+'-'+option+'-'+frontModel.modelCode;
	                            chipName = 'product-'+optionDataType+'-'+frontModel.modelCode;
	        					
	                            //멀티 컬러 사용하는 경우
	                            if(currentOption.multiColorYN == "Y"){
	                            	var optionCodeList = currentOption.multiColorList.optionCodeList;
									var optionColorType = currentOption.multiColorList.optionColorType;
	                            	var colorChipStyle = "";
	                            	
	                            	if(optionColorType == "C2_A"){
										colorChipStyle = 
											`<span class="option-selector__color-code">
												<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
													<g transform="translate(-17.999 9)">
														<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
														<g>
															<path d="M-3395,7250a18,18,0,0,1,18-18h0v36h0A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${optionCodeList[0]}" />
															<path d="M-3377,7232a18,18,0,0,1,18,18,18,18,0,0,1-18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[1]}" />
															<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
														</g>
													</g>
												</svg>
											</span>
											<span class="hidden">${multiColorNameText}</span>`;
									}else if(optionColorType == "C2_B"){
										colorChipStyle = 
											`<span class="option-selector__color-code">
												<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
													<g transform="translate(-17.999 9)">
													<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
														<g>
															<path d="M-3395,7250a18,18,0,0,1,18-18,18,18,0,0,1,18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[0]}" />
															<path d="M-3395,7250h36a18,18,0,0,1-18,18A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${optionCodeList[1]}" />
															<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
														</g>
													</g>
												</svg>
											</span>
											<span class="hidden">${multiColorNameText}</span>`;
									}else if(optionColorType == "C3_A"){
										colorChipStyle = 
											`<span class="option-selector__color-code">
												<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36.001" viewBox="0 0 36.001 36.001">
													<g transform="translate(27.001 -17.999) rotate(90)">
														<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
														<g transform="translate(18 -3.005) rotate(-90)">
															<path d="M-1047.672,8501.792a18.1,18.1,0,0,1-1.321-6.168c0-.027,0-.056,0-.083s0-.06,0-.09a18.092,18.092,0,0,1,1.906-8.522c.009-.017.017-.036.028-.053.017-.036.034-.068.051-.1.028-.054.058-.109.085-.162,0,0,0,0,0-.007.109-.205.22-.405.337-.608l0,0a18.019,18.019,0,0,1,1.92-2.717,18.076,18.076,0,0,1,2.2-2.157,18.042,18.042,0,0,1,2.467-1.712,18.109,18.109,0,0,1,2.674-1.264,18.212,18.212,0,0,1,3.76-.967.18.18,0,0,0,.032,0,.045.045,0,0,0,.017,0A18.394,18.394,0,0,1-1031,8477v18h0l-15.583,9A18.227,18.227,0,0,1-1047.672,8501.792Z" transform="translate(1019 -8477.001)" fill="${optionCodeList[0]}" />
															<path d="M-1049,8494.994h0v-18a18.692,18.692,0,0,1,2.051.115,18.089,18.089,0,0,1,4.971,1.313.644.644,0,0,0,.068.025.02.02,0,0,0,.015.009,17.41,17.41,0,0,1,1.889.95,18.359,18.359,0,0,1,2.047,1.374c.015.013.032.023.047.036s.034.028.051.041a18.122,18.122,0,0,1,4.446,5.135h0a18.843,18.843,0,0,1,.9,1.783l.045.1s0,0,0,0a18.093,18.093,0,0,1,1.462,6.915c0,.023,0,.047,0,.073v.1a18.107,18.107,0,0,1-1.622,7.482l-.032.073c-.009.019-.019.038-.028.058-.22.474-.463.94-.73,1.4Z" transform="translate(1037.001 -8477)" fill="${optionCodeList[1]}" />
															<path d="M-1034.289,8494.979a18.08,18.08,0,0,1-9.093-2.986c-.017-.013-.036-.023-.053-.036a.663.663,0,0,1-.062-.043,18.052,18.052,0,0,1-4.213-3.972l-.1-.128a18.141,18.141,0,0,1-1.2-1.816l15.589-9,15.585,9a18.048,18.048,0,0,1-2.04,2.858.119.119,0,0,1-.015.016l-.077.089a18.1,18.1,0,0,1-2.673,2.456l-.026.02-.1.077a18.052,18.052,0,0,1-9.792,3.466c-.051,0-.1.007-.158.007a.029.029,0,0,1-.013,0c-.228.009-.458.013-.689.013C-1033.709,8495-1034,8495-1034.289,8494.979Z" transform="translate(1021.412 -8459.007)" fill="${optionCodeList[2]}" />
															<path d="M18,1A17,17,0,0,0,5.979,30.021,17,17,0,1,0,30.021,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(-30.004 0)" fill="rgba(29,29,27,0.5)" />
														</g>
													</g>
												</svg>
											</span>
											<span class="hidden">${multiColorNameText}</span>`;
									}else if(optionColorType == "C3_B"){
										colorChipStyle = `<span class="option-selector__color-code">
															<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
																<g transform="translate(-17.999 -4)">
																	<rect width="36" height="36" transform="translate(18 4)" fill="none" />
																	<g transform="translate(17.999 4.001)">
																		<path d="M0,18A18.006,18.006,0,0,1,12,1.024v33.95A18.006,18.006,0,0,1,0,18Z" transform="translate(0 0)" fill="${optionCodeList[0]}" />
																		<path d="M0,34.974V1.024a18.086,18.086,0,0,1,12,0v33.95a18.085,18.085,0,0,1-12,0Z" transform="translate(12 0)" fill="${optionCodeList[1]}" />
																		<path d="M0,16.975A18.007,18.007,0,0,0,12,33.95V0A18.007,18.007,0,0,0,0,16.975Z" transform="translate(36 34.975) rotate(180)" fill="${optionCodeList[2]}" />
																		<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(0,0,0,0.5)" />
																	</g>
																</g>
															</svg>
														</span>
														<span class="hidden">${multiColorNameText}</span>`;
									}else if(optionColorType == "C3_C"){
										colorChipStyle = `<span class="option-selector__color-code">
															<svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 36 36">
																<g transform="translate(-18 -4)">
																	<rect width="36" height="36" transform="translate(18 4)" fill="none" />
																	<g transform="translate(53.999 4) rotate(90)">
																		<path d="M0,18A18.006,18.006,0,0,1,12,1.024v33.95A18.006,18.006,0,0,1,0,18Z" transform="translate(0 0)" fill="${optionCodeList[0]}" />
																		<path d="M0,34.974V1.024a18.086,18.086,0,0,1,12,0v33.95a18.085,18.085,0,0,1-12,0Z" transform="translate(12 0)" fill="${optionCodeList[1]}" />
																		<path d="M0,16.975A18.007,18.007,0,0,0,12,33.95V0A18.007,18.007,0,0,0,0,16.975Z" transform="translate(36 34.975) rotate(180)" fill="${optionCodeList[2]}" />
																		<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(0,0,0,0.5)" />
																	</g>
																</g>
															</svg>
														</span>
														<span class="hidden">${multiColorNameText}</span>`;
									}else if(optionColorType == "C4_A"){
										colorChipStyle = `<span class="option-selector__color-code">
															<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
																<g transform="translate(-17.999 9)">
																<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
																	<g>
																		<path d="M-3395,7250a18,18,0,0,1,18-18v18Z" transform="translate(3413 -7241)" fill="${optionCodeList[0]}" />
																		<path d="M-3377,7250v-18a18,18,0,0,1,18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[1]}" />
																		<path d="M-3377,7250h18a18,18,0,0,1-18,18Z" transform="translate(3413 -7241)" fill="${optionCodeList[2]}" />
																		<path d="M-3395,7250h18v18h0A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${optionCodeList[3]}" />
																		<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
																	</g>
																</g>
															</svg>
														</span>
														<span class="hidden">${multiColorNameText}</span>`;
									}else if(optionColorType == "CP"){
										colorChipStyle = `<span class="option-selector__color-code">
							                                  <svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
							                                    <g transform="translate(-17.999 9)">
							                                      <rect width="36" height="36" transform="translate(18 -9)" fill="none" />
							                                      <g transform="translate(48.004 -9)">
							                                        <path d="M1.333,15.8A18.1,18.1,0,0,1,.01,9.628c0-.027,0-.055,0-.082s0-.06,0-.089A18.086,18.086,0,0,1,1.91.935L1.938.88l.053-.1L2.074.614l0-.007Q2.239.3,2.413,0L18,9,2.413,18A18.157,18.157,0,0,1,1.333,15.8Z" transform="translate(-30.005 8.994)" fill="#68aeff" />
							                                        <path d="M0,9A17.9,17.9,0,0,1,6.584,2.41,18.351,18.351,0,0,1,9.257,1.145a18.061,18.061,0,0,1,3.667-.95l.132-.019.019,0A18.137,18.137,0,0,1,15.582,0V18Z" transform="translate(-27.587 0)" fill="#00838f" />
							                                        <path d="M0,18V0A18.223,18.223,0,0,1,2.05.115,18.011,18.011,0,0,1,7.021,1.427l.068.026a.028.028,0,0,0,.015.008,17.506,17.506,0,0,1,1.89.949,18.328,18.328,0,0,1,2.047,1.376l.046.035.052.041A18.106,18.106,0,0,1,15.585,9Z" transform="translate(-12.003 0)" fill="#f36e6e" />
							                                        <path d="M0,9,15.583,0a18.31,18.31,0,0,1,.9,1.785l.045.1v0A18.087,18.087,0,0,1,18,8.808c0,.023,0,.048,0,.072s0,.064,0,.1a18.082,18.082,0,0,1-1.621,7.483l-.033.073-.027.058q-.332.71-.731,1.4Z" transform="translate(-12.004 8.997)" fill="#fff" />
							                                        <path d="M0,0,15.585,9a18.082,18.082,0,0,1-2.041,2.858l-.014.016-.078.089a18.166,18.166,0,0,1-2.672,2.457l-.027.02-.1.075A18.057,18.057,0,0,1,.86,17.979L.7,17.986H.688C.46,18,.23,18,0,18Z" transform="translate(-12.005 17.994)" fill="pink" />
							                                        <path d="M14.717,17.98a18.082,18.082,0,0,1-9.094-2.987l-.054-.036-.062-.042A18.087,18.087,0,0,1,1.3,10.942h0l-.1-.127A18.134,18.134,0,0,1,0,9L15.589,0V18C15.3,18,15.006,17.994,14.717,17.98Z" transform="translate(-27.593 17.993)" fill="#ff8c00" />
							                                        <path d="M18,1A17,17,0,0,0,5.979,30.021,17,17,0,1,0,30.021,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(-30.004 0)" fill="rgba(29,29,27,0.5)" />
							                                      </g>
							                                    </g>
							                                  </svg>
							                                </span>
							                                <span class="hidden">${multiColorNameText}</span>`;
									}
	                            	
								productCardTemplate +=
												'<span class="option-selector__swiper-slide'+(isSelected?' swiper-slide-active':'')+'">'+
													'<span class="option-selector__color js-recent-product-fmychip'+disabledClass+'">'+
														'<input type="radio" id="'+chipId+'" data-optionName="'+currentOption.optionLocalName+'" name="'+chipName+'" data-modeli="'+modelIdx+'"'+
															' data-code="'+currentOption.optionCode+'"'+(isSelected?' checked':'')+''+
													' data-typeidx="'+viewOptionIdx+'" data-moidx="'+currentOption.modelIdx+'" >'+
												'<label for="'+chipId+'">'+colorChipStyle+'</label>'+
											'</span>'+
										'</span>'
																			
	                            }else{
	                            	//기존 로직
								productCardTemplate +=
												'<span class="option-selector__swiper-slide'+(isSelected?' swiper-slide-active':'')+'">'+
													'<span class="option-selector__color js-recent-product-fmychip'+disabledClass+'">'+
														'<input type="radio" id="'+chipId+'" data-optionName="'+currentOption.optionLocalName+'" name="'+chipName+'" data-modeli="'+modelIdx+'"'+
															' data-code="'+currentOption.optionCode+'"'+(isSelected?' checked':'')+''+
															' an-tr="pd09_recently viewed-'+pageTrack+'-text-option" an-ca="option click" an-ac="recently viewed" an-la="'+type.toLowerCase()+':'+currentOption.optionName.replace("\"","&quot;").toLowerCase()+'"'+
															modelCodeAttrForTagging+modelNameAttrForTagging+
															' data-typeidx="'+viewOptionIdx+'" data-moidx="'+currentOption.modelIdx+'" >'+
														'<label for="'+chipId+'">'+
															'<span class="option-selector__color-code" style="background-color: '+currentOption.optionCode+'">'+currentOption.optionLocalName+'</span>'+
															'<span class="hidden">'+currentOption.optionLocalName+'</span>'+
														'</label>'+
													'</span>'+
												'</span>';
	                            }
								optionChipMobile +=
										'<span class="recently-viewed__color'+disabledClass+'">'+
											'<span class="recently-viewed__color-code" style="background-color: '+currentOption.optionCode+'">'+
												'<span class="recently-viewed__color-name"><i>'+currentOption.optionLocalName+'</i></span>' +
											'</span>' +
										'</span>';
							}
							parentOptionModelIdx = curSelecteModelIdx;
							//기존 로직
							productCardTemplate +=
											'</div>'+//option-selector__swiper-wrapper
										'</div>'+//option-selector__swiper-container
										'<button type="button" class="option-selector__button-prev" aria-label="'+Granite.I18n.get("Previous")+'" role="button" aria-disabled="true"'+
										' an-tr="pd09_recently viewed|optionArrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:left">'+
											'<span class="hidden">'+Granite.I18n.get("Previous")+'</span>'+
											'<svg class="icon" focusable="false">'+
												'<use xlink:href="#previous-regular" href="#previous-regular"></use>'+
											'</svg>'+
										'</button>'+
										'<button type="button" class="option-selector__button-next" aria-label="'+Granite.I18n.get("Next")+'" role="button" aria-disabled="true"'+
										' an-tr="pd09_recently viewed|optionArrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:right">'+
											'<span class="hidden">'+Granite.I18n.get("Next")+'</span>'+
											'<svg class="icon" focusable="false">'+
												'<use xlink:href="#next-regular" href="#next-regular"></use>'+
											'</svg>'+
										'</button>'+
									'</div>'+//option-selector__swiper
								'</div>';//option-selector__wrap
							optionChipMobile +=
										'<div class="recently-viewed__over-view">' +
											'<span></span>'+
											'<span></span>'+
											'<span></span>'+
										'</div>'+
									'</div>'; // recently-viewed__color-chip
						} else {
							productCardTemplate +=
								'<div class="option-selector__wrap option-selector__wrap--capacity">'+
									'<div class="option-selector__swiper">'+
										'<div class="option-selector__swiper-container" aria-live="polite">'+
											'<div class="option-selector__swiper-wrapper" style="'+selectorWrapperStyle+'">';
							optionChipMobile +=
								'<div class="recently-viewed__capacity">';
							for(var oi=0; oi < optionObj.length; oi++){
								/* 선택되어있는(대표모델) 옵션 flag값 셋팅 */

								currentOption = optionObj[oi];
								
								isSelected = false;

								modelIdxList = currentOption.modelIdx.split(',');
								if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
									isSelected = true;
									curSelecteModelIdx = currentOption.modelIdx;
									disabledClass = '';
								} else {
									disabledClass = ' js-fmyChip-is-disabled-recent';
									if(viewOptionIdx === 0){
										disabledClass = '';
									} else {
										parentModelIdxList = parentOptionModelIdx.split(',');
										
										for(var mlic in modelIdxList){
											//상위 선택된 옵션칩 의 model idx 에 일치하는 model idx 가 있는 경우 활성화
											if(arrayContains(parentModelIdxList, modelIdxList[mlic])){
												disabledClass = '';
												break;
											}
										}
									}
								}
								
								if(disabledClass === ''){
									curSelectOptionMoIdx = currentOption.modelIdx;
									otherSelectedOptionMoIdxList = [];
									isColorType = false;
									
									for(var ooic in curViewOptionObj){
										if(ooic !== type){
											tmp_optionList = curViewOptionObj[ooic].optionList;
											for(var toic in tmp_optionList){
												tmp_option = tmp_optionList[toic];
												tmp_optionMoIdx = tmp_option.modelIdx;
												tmp_optionMoIdxArr = tmp_optionMoIdx.split(',');
												
												// 현재 선택되어있는 option 색출
												if(tmp_optionMoIdxArr.indexOf(String(product.frontModelIdx))>-1){
													otherSelectedOptionMoIdxList.push(tmp_optionMoIdx);
												}
											}
											
										}
									}
									
									modelIdx = getSelectedModelIdx(curViewOptionObj, curSelectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, curOptionTypeList);
									
									if(product.modelList.length > modelIdx && isNotNull(product.modelList[modelIdx])){
										modelCodeAttrForTagging = ' data-modelcode="'+product.modelList[modelIdx].modelCode+'"';
										modelNameAttrForTagging = ' data-modelname="'+product.modelList[modelIdx].modelName+'"';
									}
								}
								chipId = 'product-'+optionDataType+'-'+oi+'-'+frontModel.modelCode;
                                chipName = 'product-'+optionDataType+'-'+frontModel.modelCode;
	
								productCardTemplate +=
												'<span class="option-selector__swiper-slide'+(isSelected?' swiper-slide-active':'')+'">'+
													'<span class="option-selector__size js-recent-product-fmychip'+disabledClass+'">'+
														'<input type="radio" id="'+chipId+'" data-optionName="'+currentOption.optionLocalName+'" name="'+chipName+'" data-modeli="'+modelIdx+'"'+
															' an-tr="pd09_recently viewed-'+pageTrack+'-text-option" an-ca="option click" an-ac="recently viewed" an-la="'+type.toLowerCase()+':'+currentOption.optionName.replace("\"","&quot;").toLowerCase()+'"'+
															modelCodeAttrForTagging+modelNameAttrForTagging+
															' data-typeidx="'+viewOptionIdx+'" data-code="'+currentOption.optionCode+'"'+(isSelected?' checked':'')+' data-moidx="'+currentOption.modelIdx+'">'+
														'<label class="option-selector__size-label" for="'+chipId+'">'+
															'<span class="option-selector__size-label-text">'+currentOption.optionLocalName+'</span>'+
														'</label>'+
													'</span>'+
												'</span>';
								optionChipMobile +=
									'<span class="recently-viewed__size '+disabledClass+'">'+
										'<span class="recently-viewed__size-label-text">'+currentOption.optionLocalName+'</span>'+
									'</span>';
							}
							parentOptionModelIdx = curSelecteModelIdx;
							productCardTemplate +=
												'<div class="option-selector__floating-bar" style="display: none;"></div>'+
											'</div>'+//option-selector__swiper-wrapper
										'</div>'+//option-selector__swiprer-container
										'<button type="button" class="option-selector__button-prev" aria-label="'+Granite.I18n.get("Previous")+'" role="button" aria-disabled="true"'+
										' an-tr="pd09_recently viewed|optionArrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:left">'+
											'<span class="hidden">'+Granite.I18n.get("Previous")+'</span>'+
											'<svg class="icon" focusable="false">'+
												'<use xlink:href="#previous-regular" href="#previous-regular"></use>'+
											'</svg>'+
										'</button>'+
										'<button type="button" class="option-selector__button-next" aria-label="'+Granite.I18n.get("Next")+'" role="button" aria-disabled="true"'+
										' an-tr="pd09_recently viewed|optionArrow" an-ca="indication" an-ac="carousel" an-la="carousel:arrow:right">'+
											'<span class="hidden">'+Granite.I18n.get("Next")+'</span>'+
											'<svg class="icon" focusable="false">'+
												'<use xlink:href="#next-regular" href="#next-regular"></use>'+
											'</svg>'+
										'</button>'+
									'</div>'+//option-selector__swipe
								'</div>';//option-selector__wrap
							optionChipMobile +=
								'<div class="recently-viewed__over-view">' +
									'<span></span>'+
									'<span></span>'+
									'<span></span>'+
								'</div>'+
							'</div>'; // recently-viewed__capacity
						}
						
						viewOptionIdx++;
					}
				}
	
				productCardTemplate +=
						'</div>';//option-selector
				optionChipMobile +=
					'</div>'; //recently-viewed__option-selector
			}
			return productCardTemplate + optionChipMobile;
		};
		
		var productCardReviewBuild = function(frontModel,subTypeCode){
			var productCardTemplate = "";
			var reviewUrl = '/'+siteCode+'/common/review/'+frontModel.modelCode+'/';
			if(isNotNull(frontModel.reviewUrl)){
				reviewUrl = frontModel.reviewUrl;
			}
			
			var siteCode = $("#siteCode").val();
			if((reviewUseYN ==="Y" || reevooUseYN === "Y") && isNotNull(frontModel.ratingHtml) && siteCode !== 'cn' /* && !(subTypeCode === '01' && siteCode === 'br') */ ){
				productCardTemplate +=
					'<div class="recently-viewed__rating">'+
						"<a href='"+reviewUrl+"' data-modelcode='"+frontModel.modelCode+"' data-modelname='"+frontModel.modelName+"' aria-label='"+frontModel.ratings+" ("+frontModel.reviewCount+") product rating, "+frontModel.displayName+" "+Granite.I18n.get("Review")+"'"+
						' an-tr="pd09_recently viewed-'+pageTrack+'-image-review" an-ca="review" an-ac="recently viewed" an-la="read review">'+
							'<span class="rating '+frontModel.ratingEmptyText+'">'+
								'<span class="hidden">'+Granite.I18n.get("Rating")+'</span>'+
								'<span class="rating__inner">'+
									'<span class="rating__star-list">'+
										frontModel.ratingHtml+
									'</span>'+
									'<strong class="rating__point"><span class="hidden">'+Granite.I18n.get("Product Ratings")+' : </span><span>'+frontModel.ratings+'</span></strong>'+
									'<em class="rating__review-count">(<span class="hidden">'+Granite.I18n.get("Number of Ratings")+' :</span><span>'+frontModel.reviewCount+'</span>)</em>'+
								'</span>'+
							'</span>'+
						'<a>' +
					'</div>';
			}
			
			return productCardTemplate;
		}

		/**
		 * product card EnergeLabel 영역
		 */
		var productCardEnergeLabelBuild = function(frontModel){
			var productCardTemplate = "";
				var repairabilityIndex = frontModel.repairabilityIndex;
				if(isNotNull(frontModel.energyLabelGrade)||isNotNull(frontModel.ficheFileUrl)||isNotNull(repairabilityIndex)){
					productCardTemplate +=
						'<div class="recently-viewed__fiche">';
					if(isNotNull(frontModel.energyLabelGrade)){
						productCardTemplate += 
							'<div class="recently-viewed__fiche__cta-wrap">';
						if(frontModel.newEnergyLabel == "Y"){ // 신 에너지 라벨
							var energyLabelClass = "";
							
							productCardTemplate += 
								'<div class="badge-energy-label">';
							
							if(isNotNull(frontModel.ficheFileUrl)){
								productCardTemplate +=
									'<a class="badge-energy-label__text" href="'+frontModel.ficheFileUrl+'" target="_blank" aria-label="'+Granite.I18n.get("Open in a new window")+'"'+
									' an-tr="pd09_recently viewed-'+pageTrack+'-product fiche-link" an-ca="option click" an-ac="recently viewed" an-la="product fiche">'+
										Granite.I18n.get("PRODUCT INFORMATION SHEET")+
									'</a>';
							}
							
							if(frontModel.energyLabelClass){ // energyLabelClass 있으면
								energyLabelClass = frontModel.energyLabelClass;
			                }else{ // energyLabelClass 없으면
			                	energyLabelClass = frontModel.energyLabelClass1;
			                }
							productCardTemplate +=
									'<a class="badge-energy-label__badge '+energyLabelClass+'" href="'+frontModel.energyFileUrl+'" target="_blank" aria-label="'+frontModel.energyLabelGrade+'"'+
									' an-tr="pd09_recently viewed-'+pageTrack+'-product fiche-link" an-ca="option click" an-ac="recently viewed" an-la="product fiche">'+
										frontModel.energyLabelGrade+
									'</a>'+
			                    '</div>'+
		                    '</div>';
						}else{	// 기존 에너지라벨
							if(isNotNull(frontModel.ficheFileUrl)){
								productCardTemplate +=
									'<a class=badge-energy-label__text" href="'+frontModel.ficheFileUrl+'" target="_blank" aria-label="'+Granite.I18n.get("Open in a new window")+'" '+
									' an-tr="pd09_recently viewed-'+pageTrack+'-product fiche-link" an-ca="option click" an-ac="recently viewed" an-la="product fiche">'+
										Granite.I18n.get("Product Fiche")+
									'</a>';
							}
							productCardTemplate +=
									'<a class="badge '+frontModel.energyLabelClass2+'" href="'+frontModel.energyFileUrl+'" target="_blank" aria-label="'+frontModel.energyLabelGrade+'"'+
									' an-tr="pd09_recently viewed-'+pageTrack+'-product fiche-link" an-ca="option click" an-ac="recently viewed" an-la="product fiche">'+
										'<span class="badge__grade--with-text '+frontModel.energyLabelClass1+'">'+
											'<span class="hidden">'+frontModel.energyLabelGrade+'</span>'+
										'</span>'+
									'</a>'+
								'</div>';
						}
					}
					if(siteCode=="fr" || siteCode=="test"){
						if(isNotNull(frontModel.repairabilityIndex)){
							var repairabilityAlt = Granite.I18n.get("Repairability Index : {0} / 10", [repairabilityIndex] );
							var repairabilitySrc;
							var repairabilityHref = "https://www.samsung.com/fr/indice-reparabilite/"
							var repairabilityFileName = "";
							
							if(repairabilityIndex.length == 1){
								repairabilitySrc = repairabilityIndex + '0';
							}else{
								repairabilitySrc = repairabilityIndex.replace(".","");
							}
							
							if(frontModel.repairabilityIndexPdfUrl != null && frontModel.repairabilityIndexPdfUrl != ""){
								repairabilityHref = frontModel.repairabilityIndexPdfUrl;
								repairabilityFileName = ":";
							}
							//태깅 fileName
							if(repairabilityHref.lastIndexOf("/") > -1){
								repairabilityFileName += repairabilityHref.slice(repairabilityHref.lastIndexOf("/")+1);
							}
							productCardTemplate +=
								'<span class="badge-repairability">'+
									'<a href="'+repairabilityHref+'" an-tr="pd09_recently viewed-'+pageTrack+'-repairability index-option_click4" an-ca="option click" an-ac="recently viewed" an-la="repairabililty index'+repairabilityFileName+'">' +
										'<img class="badge-repairability__image" src="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/badge-repairability-'+repairabilitySrc+'.jpg" alt="'+repairabilityAlt+'">'+
									'</a>'+
								'</span>';
						}
					}
				productCardTemplate +=
					'</div>';
				}
			return productCardTemplate;
		};
		
		
		function getPriceData( frontModel, upperStock ){
			var usePriceArea = true;
			var orignalPrice = '';
			var orignalPriceFormatted = '';
			var salePrice = '';
			var salePriceFormatted = '';
			var savePriceFormatted = '';
			var listPrice = '';
			var listPriceFormatted = '';
			var lowestWasPrice = '';
			var lowestWasPriceDisplay = '';
			var useLowestWasPrice = false;
			
			if( oldProductYn === 'Y'|| (siteCode === "pl" && upperStock === "OUTOFSTOCK") ){
				usePriceArea = false;
			} else if( upperStock === "NOORDER" || upperStock === "LEARNMORE" ){
				if( siteCode === "nl" || siteCode === "be" || siteCode === "be_fr" ){
					usePriceArea = true;
				} else {
					usePriceArea = false;
				}
			}
			
			if( frontModel.price ){
				orignalPrice = frontModel.price;
			}
			
			if( frontModel.listPrice ){
				listPrice = frontModel.listPrice;
			}
			
			if( frontModel.listPriceDisplay ){
				listPriceFormatted = frontModel.listPriceDisplay;
			} else if( frontModel.listPrice ) {
				listPriceFormatted = currencyComma(frontModel.listPrice, priceCurrency);
			}
	
			if( frontModel.priceDisplay ){
				orignalPriceFormatted = frontModel.priceDisplay;
			} else if( frontModel.price ) {
				orignalPriceFormatted = currencyComma(frontModel.price, priceCurrency);
			}
	
			if( frontModel.promotionPrice ){
				salePrice = frontModel.promotionPrice;
			} else {
				salePrice = frontModel.price;
			}
			
			// lowestWasPrice 관련
			if( frontModel.lowestWasPrice ){
				lowestWasPrice = frontModel.lowestWasPrice;
			}
			if( frontModel.lowestWasPriceDisplay ){
				lowestWasPriceDisplay = frontModel.lowestWasPriceDisplay;
			}
			if( parseFloat(lowestWasPrice) <= parseFloat(orignalPrice) && parseFloat(lowestWasPrice) > parseFloat(salePrice) ){
				useLowestWasPrice = true;
			}else{
				useLowestWasPrice = false;
			}
			
			if(siteCode =='uk'){
				if( frontModel.promotionPriceDisplay && frontModel.promotionPrice > 0 ){
					salePriceFormatted = frontModel.promotionPriceDisplay;
				} else if( frontModel.promotionPrice && frontModel.promotionPrice > 0) {
					salePriceFormatted = currencyComma( frontModel.promotionPrice , priceCurrency);
				} else {
					salePriceFormatted = orignalPriceFormatted;
				}		
			}else{ 
				if( frontModel.promotionPriceDisplay ){
					salePriceFormatted = frontModel.promotionPriceDisplay;
				} else if( frontModel.promotionPrice ) {
					salePriceFormatted = currencyComma( frontModel.promotionPrice , priceCurrency);
				} else {
					salePriceFormatted = orignalPriceFormatted;
				}
			}
			
			if(isB2b && isLogedin && isSMBUser){
				/**
				 * [B2B] 가격 표시 
				 * SMB User - VAT OFF : taxExTieredPrice > smbPromotionPrice > taxExPrice
				 * SMB USer - VAT ON  : tieredPrice > smbPromotionPrice > promotionPrice 
				 * */ 
				
				if( _trimToNull(frontModel.tieredPrice) && isTieredPriceSite && frontModel.tieredPriceDisplayYN === "Y"){
					salePrice = frontModel.tieredPrice
					salePriceFormatted = frontModel.tieredPriceDisplay 
				} else if(_trimToNull(frontModel.smbPromotionPrice)){
					salePrice = frontModel.smbPromotionPrice;
					salePriceFormatted = frontModel.smbPromotionPriceDisplay;
				}

				if(useTaxExPrice){
					if(isTieredPriceSite && _trimToNull(frontModel.taxExTieredPrice)){
						salePriceFormatted = frontModel.taxExTieredPriceDisplay 
					} else {
						salePriceFormatted = frontModel.taxExPriceDisplay || frontModel.promotionPriceDisplay;
					}
				}
			}
			
			if( frontModel.formattedPriceSave ) {
				savePriceFormatted = frontModel.formattedPriceSave;
			}else if( orignalPrice && salePrice && orignalPrice !== salePrice ){
				savePriceFormatted = currencyComma(  parseFloat(orignalPrice) - parseFloat(salePrice), priceCurrency ) ;
			} else if( frontModel.saveText && parseFloat(frontModel.saveText) > 0 ) {
				savePriceFormatted = frontModel.saveText;
			}
			
			// lowestWasPrice 관련
			if(lowestWasPriceSiteCode.includes(siteCode)){
				if(lowestWasPrice){
					if(useLowestWasPrice){
						savePriceFormatted = currencyComma(  parseFloat(lowestWasPrice) - parseFloat(salePrice), priceCurrency );
					}
				}
			}
			
			// tradeInPriceText 존재 시 우선순위 해당 최우선 노출 
			if( frontModel.tradeInPriceText && $("#shopIntegrationFlag").val().indexOf('Hybris-intg') > -1 ){
				salePriceFormatted = frontModel.tradeInPriceText;
			}
			
			if(siteCode === "be" || siteCode === "be_fr" || siteCode === "nl"){
				orignalPriceFormatted = deleteCurrency(orignalPriceFormatted, priceCurrency);
				salePriceFormatted = deleteCurrency(salePriceFormatted, priceCurrency);
				savePriceFormatted = deleteCurrency(savePriceFormatted, priceCurrency);
				listPriceFormatted = deleteCurrency(listPriceFormatted, priceCurrency);
			}
			
			var proudctPriceInfo = {
				'hasPrice' : usePriceArea,
				'orignalPrice' : orignalPrice,
				'salePrice' : salePrice,
				'listPrice' : listPrice,
				'listPriceFormatted' : listPriceFormatted,
				'orignalPriceFormatted' : orignalPriceFormatted,
				'salePriceFormatted' : salePriceFormatted,
				'savePriceFormatted' : savePriceFormatted,
				'lowestWasPrice' : lowestWasPrice,
				'lowestWasPriceDisplay' : lowestWasPriceDisplay,
				'useLowestWasPrice' : useLowestWasPrice
			}
			
			return proudctPriceInfo;
		}
		
		/**
		 * Price 영역
		 * 
		 * Global - monthlyPriceInfo, priceDisplay, formattedPriceSave
		 * Hybris-Intg - monthlyPriceInfo, priceDisplay, promotionPriceDisplay, price, promotionPrice
		 * GPv2 - leasingInfo, priceDisplay, promotionPriceDisplay, listPriceDisplay, price. promotionPrice, listPrice
		 * b2bHybris - priceDisplay, promotionPriceDisplay, listPriceDisplay, price. promotionPrice, listPrice
			<promotionPrice 에 표시하는 우선순위>
			SMB User (VAT OFF): taxExTieredPrice > smbPromotionPrice > taxExPrice
			SMB USer (VAT ON) : tieredPrice > smbPromotionPrice > promotionPrice
			Guest User : promotionPrice
		 */
		var buildPriceArea = function(frontModel, upperStock , subTypeCode){
			var proudctPriceInfo =  getPriceData( frontModel, upperStock );
			var productCardTemplate = "";
			//var priceDisplay = proudctPriceInfo.orignalPriceFormatted;
			
			var priceTextForCompare = "";
			
			var usePriceArea = proudctPriceInfo.hasPrice;
			var useVatFreePrice = (siteCode == "co" && frontModel.vatEligible == "true");
			if(useVatFreePrice){
				productCardTemplate +=
					'<div class="recently-viewed__price recently-viewed__price--samcol">'
			}else if(siteCode == "it" && proudctPriceInfo.useLowestWasPrice){
				productCardTemplate +=
					'<div class="recently-viewed__price recently-viewed__price--sei">';
			}else{
				productCardTemplate +=
					'<div class="recently-viewed__price">';
			}
			
			if(usePriceArea){
				var promotionDisplay = proudctPriceInfo.salePriceFormatted;
				var currentDisplay = proudctPriceInfo.orignalPriceFormatted;
				var saveText = proudctPriceInfo.savePriceFormatted;
				var listPrice = proudctPriceInfo.listPrice;
				var listPriceDisplay = proudctPriceInfo.listPriceFormatted;
				var lowestWasPrice = proudctPriceInfo.lowestWasPrice;
				var lowestWasPriceDisplay = proudctPriceInfo.lowestWasPriceDisplay;
				var useLowestWasPrice = proudctPriceInfo.useLowestWasPrice;
				
				if(frontModel.listPrice != null){
					listPrice = parseFloat(frontModel.listPrice) - parseFloat(frontModel.price);
				}
				
				var monthlyPrice = "";
				var tenureVal = "";
				var leasingInterest = "";
				
				var downPaymentFormatted = "";
				var tenureUnit = "";
				var monthlyRate = "";
				
				var saveHtml = "";
				
				var useMonthlyPrice = false;
				var useLeasingInfo = false;
				//new-hybris
				if(isGPv2 || isHybrisNew){
					if(isNotNull(frontModel.leasingInfo) && siteCode === "nl"){
						// nl 사이트만 leasingInfo 사용
						var leasingInfo = frontModel.leasingInfo;
						monthlyRate = deleteCurrency(leasingInfo.monthlyRate, priceCurrency);
						tenureVal = leasingInfo.tenureVal;
						downPaymentFormatted = deleteCurrency(leasingInfo.downPaymentFormatted, priceCurrency);
						tenureUnit = leasingInfo.tenureUnit;
						
						useLeasingInfo = true;
					}else{
						if( isNotNull(frontModel.monthlyPriceInfo) && isNotNull(frontModel.monthlyPriceInfo.leasingMonthly) 
								&& isNotNull(frontModel.monthlyPriceInfo.leasingMonths) && isNotNull(frontModel.monthlyPriceInfo.interest)){
							monthlyPrice = frontModel.monthlyPriceInfo.leasingMonthly;
							if(siteCode !=="be" && siteCode !=="be_fr"){
								monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
							}
							tenureVal = frontModel.monthlyPriceInfo.leasingMonths;
							leasingInterest = frontModel.monthlyPriceInfo.interest;

							useMonthlyPrice = true;
						}
					}
				} else {
					if( isNotNull(frontModel.monthlyPriceInfo) && 
							isNotNull(frontModel.monthlyPriceInfo.leasingMonthly) && isNotNull(frontModel.monthlyPriceInfo.leasingMonths) && 
							(siteCode === "au" || siteCode === "nz" || siteCode === "ae" || siteCode === "my" || siteCode === "sg" || siteCode === "ca" || siteCode === "ca_fr" || 
							siteCode === "it" || siteCode === "se" || siteCode === "dk" || siteCode === "fi" || siteCode === "no" || siteCode === "es" || siteCode === "pt" || 
							siteCode === "th" || siteCode === "tw" || siteCode === "ru" || siteCode === "ch" || siteCode === "ch_fr" || siteCode === "br")){
						var monthlyPriceInfo = frontModel.monthlyPriceInfo;
						monthlyPrice = monthlyPriceInfo.leasingMonthly;
						monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
						tenureVal = monthlyPriceInfo.leasingMonths;

						useMonthlyPrice = true;
					}
				}
				//new-hybris
				if(isGPv2 || isHybrisNew || isHybrisIntg || isB2bhybris){
					//COMP6FE-1599 [EPP] SEPOL MSRP Price 추가건 : && !($('#isEppPage').val() === 'true' && siteCode === "pl") 추가
					if( saveText && !($('#isEppPage').val() === 'true' && siteCode === "pl")){
						if( siteCode === "nl" || siteCode === "be" || siteCode === "be_fr" || siteCode === "de" ){
							currentDisplay = Granite.I18n.get("From {0}",['<del>'+currentDisplay+'</del>']);
//						}else if(siteCode === "de"){
//							currentDisplay = Granite.I18n.get("RRP {0}",currentDisplay); //"UVP " + currentDisplay; 
//						}else if(siteCode === "ro"){
//							currentDisplay = Granite.I18n.get("RRP {0}",currentDisplay); //"PR " + currentDisplay; 
						}else{
							currentDisplay = '<del>' + currentDisplay + '</del>';
						}
						saveHtml = 
							'<span class="recently-viewed__price-original">' +
								'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>' + 
								currentDisplay +
							'</span>';
						if(siteCode !== "nl" && siteCode !== "be" && siteCode !== "be_fr"){
							if(lowestWasPriceSiteCode.includes(siteCode)){
								if(lowestWasPrice && useLowestWasPrice){
									currentDisplay = '<del>' + lowestWasPriceDisplay + '</del>';
									saveHtml +=
										'<span class="recently-viewed__price-save">'+
											Granite.I18n.get("Save {0}", saveText)+
										'</span>';
								}else{
									currentDisplay = '';
								}
							}else{
//								if(siteCode !== "de" && siteCode !== "ro"){
//									saveHtml +=
//										'<span class="recently-viewed__price-save">'+
//											Granite.I18n.get("Save {0}", saveText)+
//										'</span>';
//								}
							}
						}
					} else if(listPrice > 0 && (siteCode === "nl" || siteCode === "be" || siteCode === "be_fr")){
						saveHtml += 
							'<span class="recently-viewed__price-original">'+
								'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'+
								'<span>'+Granite.I18n.get("Listprice")+ ' '+ listPriceDisplay+'</span>'+
							'</span>';
					}
				} else {
					//COMP6FE-1599 [EPP] SEPOL MSRP Price 추가건 : && !($('#isEppPage').val() === 'true' && siteCode === "pl") 추가
					if( saveText && ( siteCode !== "nl" && siteCode !== "be" && siteCode !== "be_fr" && !($('#isEppPage').val() === 'true' && siteCode === "pl") ) ){
						if(lowestWasPriceSiteCode.includes(siteCode)){
							if(lowestWasPrice && useLowestWasPrice){
								currentDisplay = '<del>' + lowestWasPriceDisplay + '</del>';
								if(siteCode === "it"){
									saveText = parseFloat(lowestWasPrice) - parseFloat(frontModel.promotionPrice);
									saveHtml +=
										'<span class="recently-viewed__price-original">'+
											'<span class="hidden">'+Granite.I18n.get("Original Price")+': </span>'
											+currentDisplay+
										'</span>';
									saveHtml +=
										'<span class="recently-viewed__price-save">'+
											Granite.I18n.get("Save the {0}%", [getDiscountRate(parseFloat(deleteCurrency(saveText)), parseFloat(lowestWasPrice))]) +
										'</span>';
								}else{
									saveHtml +=
										'<span class="recently-viewed__price-save">'+
											saveText+
										'</span>';
								}
							}else{
								currentDisplay = '';
							}
						}else{
							saveHtml +=
								'<span class="recently-viewed__price-save">'+
									saveText+
								'</span>';
						}
					}
				}

				if(useVatFreePrice){
					productCardTemplate +=
						'<p class="recently-viewed__samcol-price"><strong>'+Granite.I18n.get("Price without VAT")+': '+frontModel.vatFreePriceDisplay+'</strong></p>';
					if( frontModel.promotionPriceDisplay ){
						productCardTemplate +=
						'<p class="recently-viewed__samcol-special"><strong>'+Granite.I18n.get("Price with discount")+': '+promotionDisplay+'</strong></p>';
					}
					productCardTemplate +=
						'<p class="recently-viewed__samcol-rrp">'+Granite.I18n.get("Price before")+': <del>'+currentDisplay+'</del></p>';
				}else{
					if(siteCode == "it" && useLowestWasPrice){
						if(useMonthlyPrice){
							priceTextForCompare = Granite.I18n.get("From {0}/mo",[monthlyPrice])+' ';
							priceTextForCompare += Granite.I18n.get("for {0} mos",[tenureVal]);
							var descriptionHtml = '<div class="recently-viewed__price-description"><button type="button"><span>'+priceTextForCompare+'</span></button></div>';
						}
						
						productCardTemplate +=
							'<div class="recently-viewed__price-info">' +
								'<div class="recently-viewed__price-current" data-pricetext="'+promotionDisplay+'">'+
									'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
									promotionDisplay+
								'</div>' + 
							'</div>';
					}else{
						//기존 로직
						if(useMonthlyPrice){
							priceTextForCompare = Granite.I18n.get("From {0}/mo",[monthlyPrice])+' ';
							priceTextForCompare += Granite.I18n.get("for {0} mos",[tenureVal])+' ';
							priceTextForCompare += Granite.I18n.get("or")+promotionDisplay;
								
							productCardTemplate +=
								'<div class="recently-viewed__price-info">' +
									'<span class="recently-viewed__price-current" data-pricetext="'+priceTextForCompare+'">'+
										'<span class="hidden">'+Granite.I18n.get("Monthly Price")+': </span>'+
										'<span class="recently-viewed__price-current-text">'+
											Granite.I18n.get("From {0}/mo",[monthlyPrice])+
										'</span>'+
										' '+
										Granite.I18n.get("for {0} mos",[tenureVal])+
									'</span>'+
									'<span class="recently-viewed__price-monthly">'+
										'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
										'<span class="recently-viewed__price-monthly-text"> '+Granite.I18n.get("or")+' </span>'+
										promotionDisplay+
									'</span>'+
								'</div>';
						} else if(useLeasingInfo){
							// nl 국가 포맷 {원가} or {leasingInfo 정보}
							if(downPaymentFormatted !== "" && tenureUnit !== "" && tenureVal !== "" && monthlyRate !== ""){
			  					
			  					var leasingText = " " + downPaymentFormatted + " + " + 
			  					tenureVal + " x " +
			  					monthlyRate + "/" + 
			  					Granite.I18n.get(tenureUnit);
			  					
			  					priceTextForCompare = currentDisplay + ' '+Granite.I18n.get("or")+' ' + leasingText;
									
								var priceTextForCompareAttr = 
									' data-pricetext="'+priceTextForCompare+'"';
								
								productCardTemplate +=
									'<div class="recently-viewed__price-info">' +
										'<div class="product-card__price-current"'+priceTextForCompareAttr+'>'+
											'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
											'<span class="recently-viewed__price-current-text">'+
												promotionDisplay+
											'</span>'+
										'</div>'+
										'<div class="recently-viewed__price-monthly">'+
											'<span class="hidden">'+Granite.I18n.get("Monthly Price")+': </span>'+
											'<span class="product-card__price-monthly-text"> '+Granite.I18n.get("or")+' </span>'+
											leasingText+
										'</div>'+
									'</div>';
							}
							
						} else {
							productCardTemplate +=
								'<div class="recently-viewed__price-info">' +
									'<div class="recently-viewed__price-current" data-pricetext="'+promotionDisplay+'">'+
										'<span class="hidden">'+Granite.I18n.get("Current Price")+': </span>'+
										promotionDisplay+
									'</div>' + 
								'</div>';
						}
					}
					
					//Save Text 영역
					productCardTemplate +=
							'<div class="recently-viewed__price-detail">';
					if(isNotNull(saveHtml)){
						productCardTemplate += 
								saveHtml;
					}
					productCardTemplate += 
							'</div>';
					if(siteCode == "it" && useLowestWasPrice && useMonthlyPrice){
						productCardTemplate += descriptionHtml;
					}
				}
			}
	
			productCardTemplate +=
					'</div>';
			
			return productCardTemplate;
			
		};
		
		var getDiscountRate = function(savePrice, originPrice){
			let tempDecimalPoint = Math.pow(10, 2);
			let discountRateTemp = Number(savePrice) / Number(originPrice) * tempDecimalPoint;
			discountRateTemp = Number(discountRateTemp).toFixed(2);
			return discountRateTemp.replace('.', ',');
		}
		
		var buildProductCard = function(product) {
			var productCardTemplate = '';
			var upperStock = '';
			var frontModel = product.modelList[product.frontModelIdx];
			
			if(isNotNull(frontModel.ctaType)){
				upperStock = frontModel.ctaType.toUpperCase();
				product.modelList[product.frontModelIdx].ctaTypeUpperCase = upperStock;
			}
			var subTypeCode = '';
			if(isNotNull(product.categorySubTypeCode)){
				subTypeCode = product.categorySubTypeCode.substr(0,2);
			}
	
			productCardTemplate +=		productCardNameBuild(frontModel);
			productCardTemplate +=		productCardImageBuild(frontModel, product);
			productCardTemplate +=		'<div class="recently-viewed__text">';
	    	productCardTemplate +=			productCardFmyOptionBuild(product);
	    	productCardTemplate +=			productCardReviewBuild(frontModel, subTypeCode);
	    	productCardTemplate +=			productCardEnergeLabelBuild(frontModel);
	    	productCardTemplate +=			buildPriceArea(frontModel, upperStock, subTypeCode);
	    	productCardTemplate +=      '</div>';
	
			return productCardTemplate;
		};
		
		var productCardEventListener = function(){
			
			$('.js-fmyChip-is-disabled-recent').parent().addClass('is-disabled');
			$('.js-fmyChip-is-disabled-recent').removeClass('js-fmyChip-is-disabled-recent').find('input').prop('disabled', true);
			
			/* fmychip click event :: S */
			var $fmyChipEl = $('.js-recent-product-fmychip').find('input');
			$fmyChipEl.off("click.finder");
			$fmyChipEl.on("click.finder", function(e){
				var $optionInputEl = $(this);
				var $targetContentEl = $optionInputEl.closest('.js-recent-product-card');
				
				var productIdx = $targetContentEl.data("productidx");
				
				var modelIdx =  $optionInputEl.data("modeli");
				
				setTimeout(function(){
					if(isNotNull(modelIdx)){
						productListData[productIdx].frontModelIdx = modelIdx;
						
						var proObj = getProductModelInfo(productListData[productIdx], modelIdx);
						
						$targetContentEl.find('.option-selector__wrap').each(function(idx){
							var tmpType = productListData[productIdx].optionTypeList[idx];
							var styleAttr = $(this).find('.option-selector__swiper-wrapper').attr("style");
							productListData[productIdx].viewOptionObj[tmpType].styleAttr = styleAttr;
						});
						
						
						$targetContentEl.html(buildProductCard(proObj));

						productCardEventListener();
						
						// product card 를 새로 그려줬으므로 이벤트 새로 지정
						window.sg.components.recentlyViewed.reInitItem(document.querySelectorAll(".recently-viewed__item")[productIdx]);
					}
				}, 300);
			});
			/* fmychip click event :: E */
	
		};
		
		var getRecentResult = function(){
			var param = {};
			if(cookieVal){
				cookieVal = JSON.parse(cookieVal);
				var returnHtml = '';
				var apiUrl = '';
				
				if(isB2b){
					if(isB2bhybris){
						param.shopType = "b2bhybris";
					}
					apiUrl = '/b2b/product/card/detail';
				}else{
					//epp 분기 추가
					const isEPP = $('#isEppPage').val() === 'true';
					const businessType = isEPP ? 'epp/v2': 'b2c';
					
					if( isEPP ){
						param.companyCode  = $('#eppCompanyCode').val();
						param.shopSkuYN  = "N";
						
						const eppIsUserGroupPricing = window.sg.epp.common.isUserGroupPricing;
						if(eppIsUserGroupPricing){
							param['groupName'] = window.sg.epp.common.groupName;
						}
						
						//[EPP] in refurbished 제품 관련 selector 추가
						let offerId = location.pathname.match(/[0-9]{13}/g);
						if ( offerId != null && typeof offerId != 'undefined' && $.trim(offerId) != '' ){
							param['offerId'] = offerId[0];
						}
						//[24.02.27][EPP][CN][O2O] : o2oId 파라미터 추가
						if(window.sg.epp.common.userStoreId != ""){
							param['o2oId'] = window.sg.epp.common.userStoreId;
						}						
					}
					
					if(isGPv2){
						apiUrl = `/${businessType}/product/card/detail/gpv2`;
					}else if(isHybrisNew){						//new-hybris
						apiUrl = `/${businessType}/product/card/detail/newhybris`;
					}else if(isHybrisIntg){
						apiUrl = `/${businessType}/product/card/detail/hybris`;
					}else {
						apiUrl = `/${businessType}/product/card/detail/global`;
					}
				}
				
				var cookieValList = '';
				
				for(var j=cookieVal.length-1; 0 <= j; j--){ // cookieval modellist 여러개 컴마로 하나로 묶어서 던져주기
					var itemList = cookieVal[j];
					var cookieTellsomeYn = itemList.tellsomeYn;
					var modelCode = itemList.modelCode;
					
					if(cookieTellsomeYn === 'N'){
						if(j !== 0){
							modelCode = modelCode + ',';
						}
						cookieValList += modelCode;
					}
				}
				if(cookieValList){
					
					param.siteCode = siteCode;
					param.modelList = cookieValList;
	    			param.saleSkuYN  = "N";
					param.onlyRequestSkuYN = "N";
					param.keySummaryYN = "N";
					param.keySpecYN = "N";
					param.quicklookYN = "N";
					
					let dotcom_multistore = $.cookies.get("estoreSitecode") ? $.cookies.get("estoreSitecode").toString() : '';
					let dotcom_countryRegion = $.cookies.get("country_region") ? $.cookies.get("country_region").toString() : '';
					let regionCode = ''; // default CA-ON
					
					var shopSiteCd = '';
					if(siteCode === "ae" || siteCode ==="ae_ar"){
						if(isNotNull(dotcom_multistore)) {
							//NOTICE : dotcomMultistore 값이 존재 하는 경우 ae, ae_ar, kw, kw_ar, om, om_ar, bh, bh_ar,qa,qa_ar 인 경우만 세팅 
							if(dotcom_multistore === "ae" || dotcom_multistore === "ae_ar" || dotcom_multistore === "kw" || dotcom_multistore === "kw_ar" || dotcom_multistore === "om" || dotcom_multistore === "om_ar" || dotcom_multistore === "bh" || dotcom_multistore === "bh_ar" || dotcom_multistore === "qa" || dotcom_multistore === "qa_ar") {
								shopSiteCd = dotcom_multistore;
							} else {
								shopSiteCd = siteCode;
							}
						} else {
							shopSiteCd = siteCode;
						}
					} else if(siteCode === "levant"){
				    	shopSiteCd = "jo";
				    } else if(siteCode === "levant_ar"){
				    	shopSiteCd = "jo_ar";
				    } else if(siteCode === "n_africa"){
				    	shopSiteCd = "ma";
				    }
					
					if(siteCode === "ca" || siteCode ==="ca_fr"){
						if(isNotNull(dotcom_countryRegion)) {
							regionCode = dotcom_countryRegion;
						} else {
							regionCode = 'CA-ON'; // default CA-ON
						}
					}
					
					if(isNotNull(shopSiteCd) && !isB2b){
						param.shopSiteCode = shopSiteCd;
					}
					//new-hybris
	    			if(isGPv2 || isHybrisNew || isB2b) {
						param.commonCodeYN  = "N";
	    			}
					
	    			//only SECA 
	    			if(siteCode === "ca" || siteCode ==="ca_fr"){
	    				param.regionCode = regionCode;
	    			}
					
					$.ajax({
						url:  searchDomain + '/' + apiStageInfo + apiUrl,
						data: param,
						async:false,
						success: function (data) {
	
							if(data.response.statusCode === 200 && data.response.resultData.productList.length > 0){
								for(var pr=0; pr<data.response.resultData.productList.length; pr++){
									var tempProduct = data.response.resultData.productList[pr];
									
									var selectedIndex = 0;	
									
									// 쿠키의 모델코드 선택
									var cModelList = cookieValList.split(',');
									
									if(isNotNull(tempProduct.modelList) && tempProduct.modelList.length > 0){
										for(var cnt=0; cnt<tempProduct.modelList.length; cnt++){
											var tempModel = tempProduct.modelList[cnt];
											if(arrayContains(cModelList,tempModel.modelCode)){
												selectedIndex = cnt;
											}
										}
									}
									tempProduct.frontModelIdx = selectedIndex;
									
									tempProduct = getProductInfo(tempProduct);
									//product까지 가공된 데이터를 productListData 에 저장해줌
									productListData[productListIndex] = tempProduct;
									
									var refinedProduct = getProductModelInfo(tempProduct, selectedIndex);
									var createdHtml = buildProductCard(refinedProduct);
	                				returnHtml += '<div class="recently-viewed__item js-recent-product-card" data-productidx='+productListIndex+'>';
	        						returnHtml += createdHtml;
	                				returnHtml += '</div>';
	        						productListIndex ++;
								}
							}
						}
					});
				}
				if(returnHtml){
					$('section.recently-viewed').find('div.scrollbar__contents').html(returnHtml);
	                productCardEventListener();
	                $("section.recently-viewed").show();
	            }else{
	                $("section.recently-viewed").remove();
	            }
			}
		};
		// author screen
		if(recentlyEditMode !== 'Y'){
			getRecentResult();
			if(fnIsNull(cookieVal)){
				$("section.recently-viewed").remove();
			}
		}else{
			if(isNotNull(cookieVal)){
				getRecentResult();
			}
		}
	};
	
	$(function() {
		rencentlyViewGrid();
		window.sg.components.recentlyViewed.reInit();
    });
	
	dynamic.rencentlyViewGrid = rencentlyViewGrid;

})(window, window.jQuery);
(() => {
  const $q = window.sg.common.$q;
  const BREAKPOINTS = window.sg.common.constants.BREAKPOINTS;
  const utils = window.sg.common.utils;
  const lazyLoad = window.sg.common.lazyLoad;
  const swiperManager = window.sg.common.swiperManager;

  const selector = {
    section: '.my-recommended-product',
  };

  class MyRecommendedProduct {
    constructor(component) {
      this.ele = {
        window: $q(window),
        section: $q(component),
      };

      this.selector = {
        swiperContainer: '.my-recommended-product__card-swiper',
        itemWrap: '.my-recommended-product__card-item-wrap',
        sameHeightTarget: [
          '.my-recommended-product__card--color',
          '.my-recommended-product__card--capacity',
          '.my-recommended-product__card-info',
          '.my-recommended-product__card-energy-label',
          '.my-recommended-product__card-repairability',
          '.my-recommended-product__card-price',
        ],
      };

      this.desktopFlag = null;
      this.mobileFlag = null;

      this.isHomePage = document.querySelector('#tempTitle') && document.querySelector('#tempTitle').value === 'page-home';

      this.handler = {
        resize: this.resize.bind(this),
        setHomeTagging: this.setHomeTagging.bind(this),
      };

      MyRecommendedProduct.instances.set(component, this);

      this.init();
    }
    setProperty() {
      if (BREAKPOINTS.MOBILE < utils.getViewPort().width) {
        this.desktopFlag = true;
        this.mobileFlag = false;
      } else {
        this.desktopFlag = false;
        this.mobileFlag = true;
      }

      this.ele.swiperContainer = this.ele.section.find(this.selector.swiperContainer);
      this.ele.itemWrap = this.ele.section.find(this.selector.itemWrap);
    }

    init() {
      this.setProperty();
      this.bindEvents();
    }

    reInit() {
      this.setProperty();
      this.bindEvents();
    }

    resize() {
      if (BREAKPOINTS.MOBILE < utils.getViewPort().width) {
        if (this.desktopFlag === false) {
          this.desktopFlag = true;
          this.mobileFlag = false;
          this.reInitSwiper();

          if (this.ele.itemWrap.target.length < 5) {
            if (this.ele.swiperContainer.hasClass('swiper-container-initialized')) {
              this.ele.swiperContainer.target[0].swiper.params.followFinger = false;
            }
          }
        }
      } else {
        if (this.mobileFlag === false) {
          this.mobileFlag = true;
          this.desktopFlag = false;
          this.reInitSwiper();
          if (this.ele.swiperContainer.hasClass('swiper-container-initialized')) {
            this.ele.swiperContainer.target[0].swiper.params.followFinger = false;
          }
        }
      }

      clearTimeout(this.resizeTimer);
      this.resizeTimer = null;
      this.resizeTimer = setTimeout(() => {
        this.setDefault();
        this.setHeight();
      }, 400);
    }

    reInitSwiper() {
      if (BREAKPOINTS.MOBILE < utils.getViewPort().width) {
        this.perGroup = 1;
      } else {
        this.perGroup = 2;
      }
      const slideOption = {
        slidesPerGroup: this.perGroup,
      };
      swiperManager.slideRemove(this.ele.swiperContainer.target[0]);
      swiperManager.slideInit(this.ele.swiperContainer.target[0], slideOption);
      swiperManager.slideInitEnd(this.ele.swiperContainer.target[0], this.handler.setHomeTagging);
    }

    setHomeTagging() {
      if( !this.isHomePage ) return;
      this.ele.section.find('.indicator__item').target.forEach( (indicator,index) => {
        indicator.setAttribute('an-tr','myd11_recommended product card_cta-product_click2');
        indicator.setAttribute('an-ca','indication');
        indicator.setAttribute('an-ac','carousel');
        indicator.setAttribute('an-la',`carousel:index:${index + 1}`);
      });
    }

    setDefault() {
      this.selector.sameHeightTarget.forEach((element) => {
        this.same = this.ele.itemWrap.find(element);

        this.same.target.forEach((item) => {
          const $item = $q(item);

          $item.css({
            'height': '',
          });
        });
      });
    }

    setHeight() {
      this.selector.sameHeightTarget.forEach((element) => {
        const arrHeight = [];
        this.same = this.ele.itemWrap.find(element);

        this.same.target.forEach((item) => {
          const $item = $q(item);

          $item.css({
            'height': '',
          });

          if ($item.hasClass('my-recommended-product__card--color') && $item.find('.option-selector__wrap--color-chip').target.length > 0) {
            const outerHeight = $item.outerHeight();
            const colorChipMargin = parseInt($item.find('.option-selector__wrap--color-chip').css('margin-bottom'), 10);
            arrHeight.push(outerHeight + colorChipMargin);
          } else {
            arrHeight.push($item.outerHeight());
          }
        });

        const maxHeight = Math.max.apply(null, arrHeight);

        this.same.css({
          'height': `${maxHeight}px`,
        });
      });
    }

    bindEvents() {
      this.ele.window.off('resize', this.handler.resize).on('resize', this.handler.resize);
      this.setDefault();
      this.setHeight();
      this.reInitSwiper();

      if (BREAKPOINTS.MOBILE < utils.getViewPort().width) {
        if (this.ele.itemWrap.target.length < 5) {
          if (this.ele.swiperContainer.hasClass('swiper-container-initialized')) {
            this.ele.swiperContainer.target[0].swiper.params.followFinger = false;
          }
        }
      }
    }

    optionReInit(card) {
      window.sg.common.OptionSelector.reInit($q(card), true);
      lazyLoad.setLazyLoad();
      this.resize();
    }
  }

  MyRecommendedProduct.instances = new WeakMap();

  function init() {
    $q(selector.section).target.forEach((element) => {
      new MyRecommendedProduct(element);
    });
  }

  function reInit() {
    lazyLoad.setLazyLoad();

    $q(selector.section).target.forEach((element) => {
      if (MyRecommendedProduct.instances.has(element)) {
        MyRecommendedProduct.instances.get(element).reInit();
      } else {
        new MyRecommendedProduct(element);
      }
    });
  }

  /**
   * @param {HTMLelement} 옵션 클릭해서 새로 그린 .my-recommended-product__card-item element
   */
  function optionReInit(card) {
    $q(selector.section).target.forEach((element) => {
      if (MyRecommendedProduct.instances.has(element)) {
        MyRecommendedProduct.instances.get(element).optionReInit(card);
      }
    });
  }

  window.sg.components.myRecommendedProduct = {
    init,
    reInit,
    optionReInit,
  };

  //$q.ready(init);
})();

(function (window, $) {
	"use strict";
	let myRecommendedProductDvi = $('div.my-recommended-product');
	if (myRecommendedProductDvi.length < 1) {
		return;
	}
	const tempTitle = $("#tempTitle").val();
	const searchDomain = $("#searchDomain").val();
	
	const storeDomain = $("#storeDomain").val();
	const siteCode = $("#siteCode").val();
	const hybrisApiJson = $("#hybrisApiJson").first().val();
	const scene7Domain = $("#scene7domain").val();
	
	const priceCurrency = $("#myd11-priceCurrency").first().val();
	const priceDisplayYn = $("#myd11-priceDisplayYn").first().val();
	const cartUrl = $("#myd11-cartUrl").first().val();
	const wtbCtaBtnYN = $("#myd11-wtbCtaBtnYN").first().val();
	const offerCheckYn = $("#myd11-offerCheckYn").first().val();
	const emiUrl = $("#myd11-emiUrl").val();
	const financingUrl = $("#myd11-financingUrl").val();
	const recommendedProductYn = $("#myd11-recommendedProductYn").val();

	let shopSiteCode = "";
	let commonCodeYN = "";
	const shopIntegrationFlag = $("#shopIntegrationFlag").val();
	const isGPv2 = (shopIntegrationFlag === "GPv2");
	const isNewHybris = (shopIntegrationFlag === "Hybris-new");
	const isHybrisIntg = (shopIntegrationFlag === "Hybris-intg");
	const isNonShop = !(shopIntegrationFlag);
	const b2bFlag = $('#b2bFlag').val();
	
	const $myComponent = $(".my-recommended-product");
	
	const isUseReinitTemp =  $.inArray(tempTitle, ["page-search"]) >= 0 ? true : false;
	const isWishListRemoveTemp =  $.inArray(tempTitle, ["page-home", "page-search"]) >= 0 ? true : false;
	
	const isHomePage = "page-home" === tempTitle;
	
	// 제품 전체 데이터
	let componentList = [];

	let requestId = "";
	
	// Tagging data
	const pageTrack = (digitalData.page.pageInfo.pageTrack || "").toLowerCase();
	const addWishlistTaggingAttr = `an-tr="myd11_recommended product cart_cta-account3" an-ca="product click" an-ac="recommended product" an-la="add to wishlist"`;
	const removeWishlistTaggingAttr = `an-tr="myd11_recommended product cart_cta-account3" an-ca="product click" an-ac="recommended product" an-la="remove from wishlist"`;
	const linkToPDTaggingAttr = `an-tr="myd11_recommended product cart_cta-product_click2" an-ca="product click" an-ac="recommended product" an-la="learn more click"`;
	const getStockTaggingAttr = `an-tr="curation card-${pageTrack}-button-alert" an-ca="buy cta" an-ac="stock alert" an-la="stock alert" data-antr=""`; // data-antr="get stock alert cta tagging 세팅용"
	const buyNowtoLinkTaggingAttr = `an-tr="curation card-${pageTrack}-text-buy cta" an-ca="buy cta" an-ac="buy now" an-la="curation product card:buy now"`;
	const preOrderToLinkTaggingAttr = `an-tr="curation card-${pageTrack}-text-buy cta" an-ca="buy cta" an-ac="pre-order" an-la="curation product card:pre-order"`;
	let eneryLabelTaggingAttr = `an-tr="pd10_curation card-${pageTrack}-image-link" an-ca="option click" an-ac="product compare landing" an-la="product fiche"`;
	if(isHomePage){
		eneryLabelTaggingAttr = `an-tr="myd11_recommended product card-home_content_click3" an-ca="home content click" an-ac="recommended product" an-la="product fiche"`;
	}
	// 카트 페이지로 이동
	const buyNowToCartTaggingAttr = `an-tr="curation card-${pageTrack}-cta-cart page" an-ca="ecommerce" an-ac="addtocart" an-la="curation product card:buy now"`;
	const preOrderToCartTaggingAttr = `an-tr="curation card-${pageTrack}-cta-cart page" an-ca="ecommerce" an-ac="addtocart" an-la="curation product card:pre order"`;
	const addToCartTaggingAttr = `an-tr="curation card-${pageTrack}-cta-cart page" an-ca="ecommerce" an-ac="addToCart" an-la="curation product card:add to cart"`;

	const arrowRightTaggingAttr = `an-tr="myd11_recommended product card_cta-product_click2" an-ca="indicator" an-ac="carousel" an-la="carousel:arrow:right"`;
	const arrowLeftTaggingAttr = `an-tr="myd11_recommended product card_cta-product_click2" an-ca="indicator" an-ac="carousel" an-la="carousel:arrow:left"`;
	// card image Preset
	// PC : (w)216*(h)216 px
	// MO : (w)132*(h)132 px
	const desktopImagePreset = "?$216_216_PNG$";
	const mobileImagePreset = "?$132_132_PNG$";
	const lazyloadPreset = "?$LazyLoad_Home_PNG$";

	// i18n
	const ADD_TO_WISHLIST_I18n = Granite.I18n.get("Add to wishlist");
	const REMOVE_WISHLIST_I18n = Granite.I18n.get("Remove wishlist");
	const LEARN_MORE_I18n = Granite.I18n.get("Learn more");
	const BUY_NOW_I18n = Granite.I18n.get("Buy now");
	const GET_STOCK_I18n = Granite.I18n.get("Get stock alert");
	const OUT_OF_STOCK_I18n = Granite.I18n.get("Out Of Stock");
	const PRE_ORDER_I18n = Granite.I18n.get("pre order");
	const ADD_TO_CART_I18n = Granite.I18n.get("Add to cart");
	const NOT_FOR_SALE_I18n = Granite.I18n.get("not for sale");
	const SELECTED_I18n = Granite.I18n.get("Selected");
	const COLOR_I18n = Granite.I18n.get("Color");
	const RATING_I18n = Granite.I18n.get("Rating");
	const RATING_PRODUCT_I18n = Granite.I18n.get("Product Ratings");
	const NUMBER_RATING_I18n = Granite.I18n.get("Number Of Ratings");

	// lowestWasPrice 없을 시 strikethrough 제거
	const LOWEST_WAS_PRICE_STRIKETHROUGH_SITE_CODE = ["pl", "gr", "si", "fi", "hr", "it", "dk", "no", "se","fr"]; // lowestWasPrice strikethrough siteCode master up to fi
	const isStrikethroughRmSite = $.inArray(siteCode, LOWEST_WAS_PRICE_STRIKETHROUGH_SITE_CODE) >= 0 ? true : false;
	
	let searchApiUrl = "";
	/* 20210728수정 >> 플래그십 서버를 위한 API 호출 분기 */
	if(searchDomain.split("/")[2] == "searchapi-sa.samsung.com"){
		searchApiUrl = searchDomain + "/qa/b2c/product/card/detail/";
	}else{
		searchApiUrl = searchDomain + "/front/b2c/product/card/detail/";
	}
	if (isGPv2) {
		searchApiUrl += "gpv2";
		commonCodeYN = "N";
	} else if (isHybrisIntg) {
		searchApiUrl += "hybris";
	} else if (isNewHybris) {
		commonCodeYN = "N";
		searchApiUrl += "newhybris";
	} else {
		searchApiUrl += "global";

		if (siteCode === "ae" || siteCode === "ae_ar") {
			shopSiteCode = window.cookies.getCookie("dotcom_multistore") || siteCode;
		} else if (siteCode === "levant") {
			shopSiteCode = "jo";
		} else if (siteCode === "levant_ar") {
			shopSiteCode = "jo_ar";
		} else if (siteCode === "n_africa") {
			shopSiteCode = "ma";
		}
	}
	//제품 전체 데이터
	var productListData = [];
	
	// calculator popup 영역
	var $emiPopupEl = $('.eip-popup');
	
	var isNotNull = function(_str){
		
		return !fnIsNull(_str);
				
	};
	// saveText EURO -> KUNA  변환
	/*
	var euroToKunaPrice = function(saveText){
		let tempDecimalPoint = Math.pow(10, 2);
		let euroPriceTemp = Number(saveText)*7.53450;
		euroPriceTemp = Math.round(euroPriceTemp * tempDecimalPoint) / tempDecimalPoint;
		return currencyComma(euroPriceTemp, "HRK");
	}
	*/
	// 할인율
	var getDiscountRate = function(savePrice, originPrice){
		let tempDecimalPoint = Math.pow(10, 2);
		let discountRateTemp = Number(savePrice) / Number(originPrice) * tempDecimalPoint;
		discountRateTemp = Number(discountRateTemp).toFixed(2);
		return discountRateTemp.replace('.', ',');
	}
	function arrayContains(array, element) {
		for (var i = 0; i < array.length; i++) {
			if (array[i] === element) {
				return true;
			}
		}
		return false;
	};

	function escapeHtml(text) {
		var newText = text;
		if (newText) {
			newText = newText
				.replace(/&/g, "&amp;")
				.replace(/</g, "&lt;")
				.replace(/>/g, "&gt;")
				.replace(/"/g, "&quot;")
				.replace(/'/g, "&#039;");
		}
		return newText;
	};
	
	var changeAddedWishlist = function($el, modelCode){
			var changeBtn = function($btnEl){
				$btnEl.addClass('pd-wishlist-cta--on js-delete-wishlist-btn');
				$btnEl.removeAttr('data-add-text').attr('data-added-text', Granite.I18n.get("Remove wishlist"));
				$btnEl.removeAttr('an-la').attr('an-la', 'remove from wishlist');
				$btnEl.attr('aria-selected', "true");
				$btnEl.removeAttr('aria-label').attr('aria-label', Granite.I18n.get("Remove wishlist"));
			};
			
			if(addedWishList.length > 0){
				for(var idx = 0; idx < addedWishList.length; idx++){
					var addedWishlistInfo = addedWishList[idx];
					if(addedWishlistInfo.deleted === false ){
						if(isNotNull(modelCode) && addedWishlistInfo.sku === modelCode){
							var $addedWishlistBtn = $el.find('.my-recommended-product__card-wishlist a');
							changeBtn($addedWishlistBtn);
							break;
						} else {
							var $addedWishlistBtn = $('.my-recommended-product__card-wishlist a[data-modelcode='+addedWishlistInfo.sku+']');
							changeBtn($addedWishlistBtn);
						}
					}
				}
			}
		};
	
	function getWishlist(frontModel) {
		const ctaType = frontModel.ctaTypeUpperCase;
		const prodDisplayNm = escapeHtml((frontModel.displayName || "").replace(/<br>/ig, " ").replace(/<sup>/ig, " "));
		let wishListClass = "";
		let isAddedClass = "";
		let isAddedWishlist = false;
		let wishlistBtnText = ADD_TO_WISHLIST_I18n;
		let wishlistAttr = "";

		if (isGPv2 || isNewHybris) {
			let shopSkuCode = "";
			if (frontModel.shopSKU) {
				shopSkuCode = frontModel.shopSKU;
			} else {
				shopSkuCode = frontModel.modelCode;
			}
			frontModel.shopSkuCode = shopSkuCode;

			// Added Wishlist Check
			if (addedWishList.length > 0) {
				for (let idx = 0; idx < addedWishList.length; idx++) {
					const addedWishlistInfo = addedWishList[idx];
					if (addedWishlistInfo.deleted === false && addedWishlistInfo.sku === shopSkuCode) {
						isAddedClass = " pd-wishlist-cta--on js-delete-wishlist-btn";
						isAddedWishlist = true;
						wishlistBtnText = REMOVE_WISHLIST_I18n;
						break;
					}
				}
			}

			wishlistAttr = `data-modelcode=${shopSkuCode} data-modelname="${frontModel.modelName}" data-stock="${frontModel.ctaType}"`;

			let wishlistPrice = "";
			if (frontModel.promotionPrice) {
				wishlistPrice = frontModel.promotionPrice;
			} else {
				wishlistPrice = frontModel.price;
			}
			if (wishlistPrice && wishlistPrice !== "null") {
				wishlistAttr += ` data-modelprice="${wishlistPrice}"`;
			}
		} else if (isHybrisIntg) {
			wishlistAttr = `data-modelcode="${frontModel.modelCode}" data-modelname="${frontModel.modelName}"`;
		}

		wishlistAttr += ` data-pagetrack="${pageTrack}" data-component="MYD11"`;

		if (isAddedWishlist) {
			wishlistAttr += removeWishlistTaggingAttr;
		} else {
			wishlistAttr += addWishlistTaggingAttr;
		}

		if (ctaType === "NOORDER" || ctaType === "LEARNMORE") {
			wishListClass = " js-learnmore";
		}

		let wishlistHtml = "";
		// page-home에서 wishlist 제거
		if(!isWishListRemoveTemp){
			if (isGPv2 || isHybrisIntg || isNewHybris) {
				wishlistHtml =
					`<div class="my-recommended-product__card-wishlist">
						<a class="pd-wishlist-cta js-layer-open${isAddedClass}${wishListClass}" href="javascript:void(0)" aria-haspopup="false" data-div-id="#wishlist-popup" role="button" aria-label="${wishlistBtnText}" data-add-text="${ADD_TO_WISHLIST_I18n}:${prodDisplayNm}" data-added-text="${REMOVE_WISHLIST_I18n}:${prodDisplayNm}" ${wishlistAttr}>
							<span class="hidden">${wishlistBtnText}</span>
							<svg class="icon unselect" focusable="false" aria-hidden="true">
								<use xlink:href="#wishlist-unselect-regular" href="#wishlist-unselect-regular"></use>
							</svg>
							<svg class="icon select" focusable="false" aria-hidden="true">
								<use xlink:href="#wishlist-select-bold" href="#wishlist-select-bold"></use>
							</svg>
						</a>
					</div>`;
			}
		}
		return wishlistHtml;
	};
	
	function buildBadge(tempModel){
		let badgeHtml = "";
		let badgeClass = "";
		let badgeText = "";
		let badgeFlag = false;
		
		if(isNotNull(tempModel.topFlags) && isNotNull(tempModel.topFlags.iconTypeCd)){
			if(tempModel.topFlags.iconTypeCd === "N"){
				badgeText = Granite.I18n.get("new");
				badgeClass = " badge-icon--bg-color-blue";
				badgeFlag = true;
			} else if(tempModel.topFlags.iconTypeCd === "H"){
				badgeText = Granite.I18n.get("hot");
				badgeClass = " badge-icon--bg-color-red";
				badgeFlag = true;
			} else if(tempModel.topFlags.iconTypeCd === "B"){
				badgeText = Granite.I18n.get("best seller");
				badgeClass = " badge-icon--bg-color-orange";
				badgeFlag = true;
			}
		}
		if(badgeFlag){
			badgeHtml = 
				`<div class="my-recommended-product__card-badge">
					<span class="badge-icon  badge-icon--label  ${badgeClass}">
					${badgeText}
					</span>
				</div>`;
		}
		return badgeHtml
	}
	
	//  CTA 
	function getCTAForNewGeneral(product) {
		const frontModel = product.modelList[product.frontModelIdx];
		const ctaType = frontModel.ctaTypeUpperCase;

		let useConfiguratorUrl = false;
		if (isNotNull(frontModel.configuratorUseYn) && frontModel.configuratorUseYn == "Y" && isNotNull(frontModel.configuratorUrl)) {
			useConfiguratorUrl = true;
		}

		let price = "";
		let discountPrice = "";
		if (frontModel.price) {
			price = frontModel.price;
		}
		if (frontModel.promotionPrice) {
			discountPrice = frontModel.promotionPrice;
		}
		
		const displayNameAttr = escapeHtml((frontModel.displayName || "").replace(/<br>/ig, " ").replace(/<sup>/ig, " "));
		const dataModelCodeAttr = `data-modelcode="${frontModel.modelCode}"`;
		const dataModelNameAttr = `data-modelname="${frontModel.modelName}"`;
		const dataRequestidAttr = `data-requestid="${requestId}"`;

		// pre order, buy now, add to cart 에 사용
		let taggingAttrForBuy =
			`an-tr="myd11_recommended product card_cta-product_click3" an-ca="product click" an-ac="recommended product" an-la="buy now" 
			 ${dataModelCodeAttr} ${dataModelNameAttr} ${dataRequestidAttr}`;
		if(isHomePage){
			taggingAttrForBuy =
				`an-tr="myd11_recommended product card_cta-home_content_click4" an-ca="home content click" an-ac="recommended product" an-la="buy now"
				 ${dataModelCodeAttr} ${dataModelNameAttr} ${dataRequestidAttr}`;
		}
		const isSimplePD = product.simplePdYN === "Y" ? true : false;
		let buyingPDUrl = frontModel.originPdpUrl;
		if(isSimplePD){
			buyingPDUrl = frontModel.originPdpUrl + "buy/";
		}
		
		let ctaHtml = "";
		if(useConfiguratorUrl) {
			let configuratorCtaText = isNotNull(frontModel.ctaLocalText) ? frontModel.ctaLocalText : BUY_NOW_I18n;
			ctaHtml =
					`<a class="cta cta--contained cta--black js-buy-now" href="javascript:;" aria-label="${BUY_NOW_I18n}:${displayNameAttr}" config_info="${frontModel.configuratorUrl}" ${taggingAttrForBuy} ${buyNowtoLinkTaggingAttr}>
						${configuratorCtaText}
					</a>`;
		}else{
			
			ctaHtml =
						`<a class="cta cta--contained cta--black" href="${buyingPDUrl}" aria-label="${BUY_NOW_I18n}:${displayNameAttr}" link_info="${buyingPDUrl}" ${taggingAttrForBuy} ${buyNowtoLinkTaggingAttr}>
							${BUY_NOW_I18n}
						</a>`;
			if(ctaType === "PREORDER"){
				ctaHtml =
							`<a class="cta cta--contained cta--black" href="${buyingPDUrl}" aria-label="${BUY_NOW_I18n}:${displayNameAttr}" link_info="${buyingPDUrl}" ${taggingAttrForBuy} ${buyNowtoLinkTaggingAttr}>
								${PRE_ORDER_I18n}
							</a>`;
			}
		}
//		if(isNonShop){
//			ctaHtml +=
//				`<a class="cta cta--outlined cta--black" href="${frontModel.pdpUrl}" aria-label="${LEARN_MORE_I18n}:${displayNameAttr}" ${dataModelCodeAttr} ${dataModelNameAttr} ${dataRequestidAttr} ${linkToPDTaggingAttr}>
//					${LEARN_MORE_I18n}
//				</a>`;
//		}else{
//			/* whereToBuy 경우 */
//			if(ctaType === "WHERETOBUY" || ctaType === "BACKORDER" || ctaType === "BACKORDERED" || ctaType === "INSTOCK"){
//				if (useConfiguratorUrl) {
//					ctaHtml +=
//						`<a class="cta cta--contained cta--black" href="${frontModel.configuratorUrl}" aria-label="${BUY_NOW_I18n}:${displayNameAttr}" config_info="${frontModel.configuratorUrl}" ${taggingAttrForBuy} ${buyNowtoLinkTaggingAttr}>
//							${BUY_NOW_I18n}
//						</a>`;
//				} else {
//					ctaHtml +=
//						`<a class="cta cta--contained cta--black" href="${buyingPDUrl}" aria-label="${BUY_NOW_I18n}:${displayNameAttr}" link_info="${buyingPDUrl}" ${taggingAttrForBuy} ${buyNowtoLinkTaggingAttr}>
//							${BUY_NOW_I18n}
//						</a>`;
//				}
//			} else if (ctaType === "OUTOFSTOCK") {
//				ctaHtml +=
//					`<a class="cta cta--outlined cta--black" href="${frontModel.pdpUrl}" aria-label="${LEARN_MORE_I18n}:${displayNameAttr}" ${dataModelCodeAttr} ${dataModelNameAttr} ${linkToPDTaggingAttr}>
//							${LEARN_MORE_I18n}
//						</a>`
//			} else {
//				ctaHtml +=
//					`<a class="cta cta--outlined cta--black" href="${frontModel.pdpUrl}" aria-label="${LEARN_MORE_I18n}:${displayNameAttr}" ${dataModelCodeAttr} ${dataModelNameAttr} ${linkToPDTaggingAttr}>
//							${LEARN_MORE_I18n}
//						</a>`;
//			}
//		}

		return ctaHtml;
	};
	
	// Product 데이터를 가공하여 반환
	function getProductInfo(product) {
		const tempProduct = product;

		const tmpOptionListInModel = {};
		for (let mi in tempProduct.modelList) {
			const tmpModel = tempProduct.modelList[mi];
			const tmpFmyChipList = tmpModel.fmyChipList;

			if (!tmpModel.displayName) { // Product Name SKU 단위로 조정
				tempProduct.modelList[mi].displayName = "";
			}
			tmpModel.ctaTypeUpperCase = (tmpModel.ctaType || "").toUpperCase();

			for (let fci in tmpFmyChipList) {
				//fmyChipCode에 " 제거 
				const thisOptionKey = tmpFmyChipList[fci].fmyChipType + '+' +
					tmpFmyChipList[fci].fmyChipCode.replace("\"", "").replace("&quot;", "") + '+' +
					tmpFmyChipList[fci].fmyChipLocalName.replace("\"", "").replace("&quot;", "");

				if (!tmpOptionListInModel[thisOptionKey]) {
					tmpOptionListInModel[thisOptionKey] = mi;
				} else {
					tmpOptionListInModel[thisOptionKey] += "," + mi;
				}
			}
			// SEF, SEBN, SEDA(rs, al, mk, ba은 스토어국가아니므로 패스), SENA, SEPOL, SEH (우선 pl만 반영)
			// 기존 price(원가, msrp price 포함)가 이미 노출되는 경우에 이를 lowestWasPrice 가 노출되도록 변경하는 작업
			// [EPP] epp meta 체크 추가
			// lowestwasprice 가 price 보다 낮거나 같고, promotion price보다 높을 때만 적용
			tmpModel['lowestWasPriceUseYn'] = "N";
			if((
				 (isStrikethroughRmSite || siteCode === "ro" )
				)
			&& isNotNull(tmpModel.lowestWasPrice)
			&& isNotNull(tmpModel.promotionPrice)
			&& (parseFloat(tmpModel.lowestWasPrice) <= parseFloat(tmpModel.price) && parseFloat(tmpModel.promotionPrice) < parseFloat(tmpModel.lowestWasPrice))
			){
				console.log("modelCode [{}] origin price::{}", tmpModel.modelCode, tmpModel.price);
				console.log("origin priceDisplay::"+tmpModel.priceDisplay);
				console.log("origin saveText::"+tmpModel.saveText);
				//[EPP] lowestWasPrice 적용
				tmpModel.price = tmpModel.lowestWasPrice;
				tmpModel.priceDisplay = currencyComma(tmpModel.lowestWasPrice, priceCurrency);
				/*
				if(siteCode === "hr"){
					tmpModel.priceDisplay = currencyComma(tmpModel.lowestWasPrice, priceCurrency)+" ("+euroToKunaPrice(tmpModel.lowestWasPrice)+")";
				}
				*/
				if(isNotNull(tmpModel.msrpPrice)){
					tmpModel.msrpPrice = tmpModel.lowestWasPrice;
					console.log("after msrpPrice::"+tmpModel.msrpPrice);
				}
				tmpModel.saveText = parseFloat(tmpModel.lowestWasPrice) - parseFloat(tmpModel.promotionPrice);
				tmpModel.lowestWasPriceUseYn = "Y";
				console.log("after price::"+tmpModel.price);
				console.log("after priceDisplay::"+tmpModel.priceDisplay);
				console.log("after saveText::"+tmpModel.saveText);
			}
		}

		/*
		 * viewOptionObj : 전체 옵션칩 리스트 
		 * optionTypeList : 옵션 타입만 담고 있는 리스트 ( 옵션타입의 index 값을 구하기 위해 생성함 )
		 */
		const optionTypeList = [];
		const viewOptionObj = {};
		if (tempProduct.chipOptions) {
			for (let a = 0; a < tempProduct.chipOptions.length; a++) {
				const optionData = tempProduct.chipOptions[a];
				const optionTypeTmp = optionData.fmyChipType;

				const optionListInType = optionData.optionList;
				for (let opl in optionListInType) {
					const thisOptionKey = optionData.fmyChipType + '+' +
						optionListInType[opl].optionCode.replace("\"", "").replace("&quot;", "") + '+' +
						optionListInType[opl].optionLocalName.replace("\"", "").replace("&quot;", "");
					if (tmpOptionListInModel[thisOptionKey] != null) {
						optionListInType[opl].modelIdx = tmpOptionListInModel[thisOptionKey];
					}
				}
				viewOptionObj[optionTypeTmp] = {};
				viewOptionObj[optionTypeTmp]["optionList"] = optionListInType;

				optionTypeList.push(optionTypeTmp);
			}
		}
		tempProduct.viewOptionObj = viewOptionObj;
		tempProduct.optionTypeList = optionTypeList;

		return tempProduct;
	};

	// imageUrl 앞에 scene7Domain을 붙임
	function imgDomain(imgUrl) {
		let newUrl = "";
		if (imgUrl) {
			if (imgUrl.indexOf("http:") > -1 || imgUrl.indexOf("//image-us.samsung.com/") > -1 || imgUrl.indexOf("//stg-images.samsung.com/") > -1 ||
				imgUrl.indexOf("//images.samsung.com/") > -1 || imgUrl.indexOf("image.samsung.com/") > -1) {
				newUrl = imgUrl;
			} else {
				newUrl = scene7Domain + imgUrl;
			}
		}
		return newUrl;
	};

	/**
	 *  Store Promotion / marketingMessage 영역
	 * 
	 *  GPv2 우선순위 (1개 노출)- buyBackDesc(in) > financeInfoAmount(갤럭시 포에버 문구) > financing > tradeIn > upgrade > premiumCare > storePromotions > usp( usp 는 optional이 아닐때 표시 )
	 *  HybrisIntg 우선순위 (1개 노출)-  tradeIn > financing >  upgrade > premiumCare > storePromotions > usp ( usp 는 optional이 아닐때 표시 )
	 *  Global - marketingMessage 상위 1 개
	 */
	function getPromotionText(frontModel) {
		let promotionText = "";

		if (isGPv2 || isNewHybris) {
			let tradeInDesc = [];
			let financingDesc = [];
			let upgradeDesc = [];
			let premiumCareDesc = [];

			if (frontModel.tradeInFormattedDesc != null && frontModel.tradeInFormattedDesc.length > 0) {
				tradeInDesc = frontModel.tradeInFormattedDesc;
			} else {
				tradeInDesc = frontModel.tradeInDesc;
			}
			if (frontModel.financingFormattedDesc != null && frontModel.financingFormattedDesc.length > 0) {
				financingDesc = frontModel.financingFormattedDesc;
			} else {
				financingDesc = frontModel.financingDesc;
			}
			if (frontModel.upgradeFormattedDesc != null && frontModel.upgradeFormattedDesc.length > 0) {
				upgradeDesc = frontModel.upgradeFormattedDesc;
			} else {
				upgradeDesc = frontModel.upgradeDesc;
			}
			if (frontModel.premiumCareFormattedDesc != null && frontModel.premiumCareFormattedDesc.length > 0) {
				premiumCareDesc = frontModel.premiumCareFormattedDesc;
			} else {
				premiumCareDesc = frontModel.premiumCareDesc;
			}

			// 20200810 IN Assured Buy Back 건 추가 :: S
			if (siteCode === "in" && frontModel.buyBackDesc != null) {
				promotionText = frontModel.buyBackDesc; // .replace(/(<([^>]+)>)/gi, "")
			} else if (frontModel.financeInfoAmount && frontModel.financeInfoValue) {
				promotionText = Granite.I18n.get("Enjoy the flagship experience at only {0} for {1} month", [currencyComma(frontModel.financeInfoAmount, priceCurrency), frontModel.financeInfoValue]);
			} else if (financingDesc && financingDesc.length > 0 && siteCode !== "uk") {
				// uk financingDesc 제거
				promotionText = financingDesc[0];
			} else if (tradeInDesc && tradeInDesc.length > 0) {
				promotionText = tradeInDesc[0];
			} else if (upgradeDesc && upgradeDesc.length > 0) {
				promotionText = upgradeDesc[0];
			} else if (premiumCareDesc && premiumCareDesc.length > 0) {
				promotionText = premiumCareDesc[0];
			} else if (frontModel.storePromotions && frontModel.storePromotions.length > 0) {
				if (frontModel.storePromotions[0].promotionFormattedText != null) {
					promotionText = frontModel.storePromotions[0].promotionFormattedText;
				} else {
					promotionText = frontModel.storePromotions[0].promotionText;
				}
			} else if (frontModel.usp && frontModel.usp.length > 0) {
				promotionText = frontModel.usp[0];
			}
		} else if (isHybrisIntg) {
			if (frontModel.tradeIn === "Y" && frontModel.tradeInDesc) {
				promotionText = frontModel.tradeInDesc;
			} else if (frontModel.financing === "Y" && frontModel.financingDesc) {
				promotionText = frontModel.financingDesc;
			} else if (frontModel.upgrade === "Y" && frontModel.upgradeDesc) {
				promotionText = frontModel.upgradeDesc;
			} else if (frontModel.premiumCare === "Y" && frontModel.premiumCareDesc) {
				promotionText = frontModel.premiumCareDesc;
			} else if (frontModel.storePromotions && frontModel.storePromotions.length > 0) {
				promotionText = frontModel.storePromotions[0];
			} else if (frontModel.usp && frontModel.usp.length > 0) {
				promotionText = frontModel.usp[0];
			}
		} else {
			if (frontModel.marketingMessage && frontModel.marketingMessage.length > 0) {
				promotionText = frontModel.marketingMessage[0];
			}
		}

		return promotionText;
	};
	
	/*
	* price Area
	*/
	function buildPriceArea(frontModel){
		
		var productCardTemplate = "";
		var priceDisplay = frontModel.priceDisplay;
		if((siteCode==="nl" || siteCode==="be" || siteCode ==="be_fr") && isNotNull(priceDisplay)){
			priceDisplay = deleteCurrency(priceDisplay, priceCurrency);
		}
		
		var emiPrice = "";
		var priceItem = "";
		
		var upperStock = frontModel.ctaType.toUpperCase();
		var usePriceArea = false;
		if((priceDisplayYn === "Y" && isNotNull(priceDisplay) && (siteCode !== "pl" || upperStock !== "OUTOFSTOCK"))
			|| (siteCode === "tr" && isNotNull(priceDisplay))){
			/* pl 국가이면서 Out Of Stock일경우 가격 미노출 */
			usePriceArea = true;
		}
		
		//Hybris Intg > tradeIn price text 표시
		var tradeInPriceText = "";
		
		if(isHybrisIntg && isNotNull(frontModel.tradeInPriceText) && !isMiniCardType) {
			tradeInPriceText = frontModel.tradeInPriceText;
		}
		
		if(usePriceArea){
			var promotionDisplay = "";
			var currentDisplay = priceDisplay;
			var priceTextForCompare = "";
			  
			// monthlyPrice data
			var useMonthlyPrice = false;
			var monthlyPrice = "";
			var tenureVal = "";
			var leasingInterest = "";
			
			// leasingInfo data
			var useLeasingInfo = false;
			var downPaymentFormatted = "";
			var tenureUnit = "";
			var monthlyRate = "";
			
			var usSuggestPriceAttr = "";
			var usUseTradeInDiscount = false;
			
			// msrpPrice
			var useMsrpPrice = false;
			var usCurrentPriceAttr = "";
			let financingInstallmentDescText = "";
			
			if(siteCode === "us"){
				// 기본 가격정보 셋팅 ( exit epp 할 경우 api 호출 없이 가격정보만 변경처리 )
				usDefaultCurrentPrice = frontModel.price;
				var usPromotionPriceForTradeIn = frontModel.listPrice;
				if(isNotNull(frontModel.promotionPrice)){
					usDefaultCurrentPrice = frontModel.promotionPrice;
					usPromotionPriceForTradeIn = frontModel.promotionPrice;
				}
				//[US] tradeInDiscount 가 있는 경우 > listPrice : 원가 , tradeInDiscount : save, 재고없음이 아닌 경우
				if(siteCode === "us" && isNotNull(frontModel.tradeInDiscount) && isNotNull(frontModel.listPrice)
						&& frontModel.tradeInDiscount != 0 && frontModel.listPrice != 0 && ( Number(frontModel.listPrice) > Number(frontModel.tradeInDiscount))
						&& upperStock !== "OUTOFSTOCK"){
					usUseTradeInDiscount = true;
					priceDisplay = currencyComma(frontModel.listPrice, priceCurrency);
					
					var usPromotionPriceForTradeIn = frontModel.listPrice;
					if(isNotNull(frontModel.promotionPrice)){
						usPromotionPriceForTradeIn = frontModel.promotionPrice;
					}
					
					usDefaultCurrentPrice = Number(usPromotionPriceForTradeIn) - Number(frontModel.tradeInDiscount);
					
					currentDisplay = 'From '+currencyComma(usDefaultCurrentPrice, priceCurrency)+' with trade-in<sup>θ</sup>';
				}
				usCurrentPriceAttr = ' data-de-currentprice="'+usDefaultCurrentPrice+'"';
				if(usUseTradeInDiscount){
					usCurrentPriceAttr += ' data-de-use-tradein="true"';
				}
				usSuggestPriceAttr = ' data-de-originpricetxt="'+priceDisplay+'"';
				
			}
			
			
			
			let rrpPricePSpan = ``;
			if((siteCode === "ro" || siteCode === "de") && parseFloat(frontModel.promotionPrice) !== parseFloat(frontModel.price)){
				rrpPricePSpan = `
				<span class="my-recommended-product__card-price-save-normal">${Granite.I18n.get("RRP {0}", [frontModel.priceDisplay])}</span>
				`;
			}
			
			if(isGPv2 || isNewHybris){
				if(isNotNull(frontModel.leasingInfo) && (siteCode === "nl" || siteCode === "be" ||siteCode === "be_fr") && frontModel.upgrade === "Y"){
					// nl 사이트만 leasingInfo 사용
					var leasingInfo = frontModel.leasingInfo;
					if(isNotNull(leasingInfo.monthlyRate) && isNotNull(leasingInfo.downPaymentFormatted)){
						monthlyRate = deleteCurrency(leasingInfo.monthlyRate, priceCurrency);
						tenureVal = leasingInfo.tenureVal;
						downPaymentFormatted = deleteCurrency(leasingInfo.downPaymentFormatted, priceCurrency);
						tenureUnit = leasingInfo.tenureUnit;
						useLeasingInfo = true;
					}
						
				} else if ( isNotNull(frontModel.monthlyPriceInfo)
						&& isNotNull(frontModel.monthlyPriceInfo.leasingMonthly) && isNotNull(frontModel.monthlyPriceInfo.leasingMonths) && isNotNull(frontModel.monthlyPriceInfo.interest)){
					monthlyPrice = frontModel.monthlyPriceInfo.leasingMonthly;
					monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
					tenureVal = frontModel.monthlyPriceInfo.leasingMonths;
					leasingInterest = frontModel.monthlyPriceInfo.interest;
					useMonthlyPrice = true;
				}
				
				promotionDisplay = frontModel.promotionPriceDisplay;

				if(siteCode==="nl" || siteCode==="be" || siteCode ==="be_fr"){
					if(isNotNull(promotionDisplay)){
						promotionDisplay = deleteCurrency(promotionDisplay, priceCurrency);
					}
					if(isNotNull(frontModel.msrpPrice)){
						useMsrpPrice = true;
					}
				}
			} else {
				if( isNotNull(frontModel.monthlyPriceInfo) && 
						isNotNull(frontModel.monthlyPriceInfo.leasingMonthly) && isNotNull(frontModel.monthlyPriceInfo.leasingMonths) && 
						(siteCode === "au" || siteCode === "nz" || siteCode === "ae" || siteCode === "my" || siteCode === "sg" || siteCode === "ca" || siteCode === "ca_fr" ||
							siteCode === "it" || siteCode === "se" || siteCode === "dk" || siteCode === "fi" || siteCode === "no" || siteCode === "es" || siteCode === "pt" ||
							siteCode === "th" || siteCode === "tw" || siteCode === "ru" || siteCode === "ch" || siteCode === "ch_fr" || siteCode === "za" || siteCode === "br"  ||
							siteCode === "at")){
					var monthlyPriceInfo = frontModel.monthlyPriceInfo;
					monthlyPrice = monthlyPriceInfo.leasingMonthly;
					monthlyPrice = currencyComma(monthlyPrice, priceCurrency);
					tenureVal = monthlyPriceInfo.leasingMonths;

					useMonthlyPrice = true;
				}
				if(isHybrisIntg){
					promotionDisplay = frontModel.promotionPriceDisplay;
				}
			}
			
			if(isNotNull(promotionDisplay) && !usUseTradeInDiscount){
				currentDisplay = promotionDisplay;
			}
			
			//Save Text 영역 STR
			var topPrice = ``;
			var discountPrice = ``;
			if(isGPv2 || isNewHybris){
				if(isNotNull(promotionDisplay)){
					var listPrice = 0;
					if(frontModel.listPrice != null){
						listPrice = parseFloat(frontModel.listPrice) - parseFloat(frontModel.price);
					}
					
					var savePrice = parseFloat(frontModel.price) - parseFloat(frontModel.promotionPrice);
					
					if(usUseTradeInDiscount){
						savePrice = Number(frontModel.listPrice) - usCurrentPrice;
						frontModel.saveText = currencyComma(savePrice, priceCurrency);
					}
					
					if(savePrice !== 0 && isNotNull(frontModel.saveText)){
						var saveText = frontModel.saveText;
						var savePriceSpan = ``;
						
						if(siteCode !== "nl" && siteCode !== "be" && siteCode !== "be_fr"){
							/* GPv2 국가 save 문구 노출
							 * SEBN 국가 save 문구 미노출 처리 */
							savePriceSpan = `<span>${Granite.I18n.get("Save {0}", [currencyComma(saveText, priceCurrency)])}</span>`;
							/*
							if(siteCode === "hr") {
								savePriceSpan = `<span>${Granite.I18n.get("Save {0}", [currencyComma(saveText, priceCurrency) + " (" + euroToKunaPrice(saveText)+ ")"])}</span>`;
							}
							*/
						}
						var priceText = "";
						if(siteCode === "nl" || siteCode === "be" || siteCode === "be_fr" || siteCode === "de") {
							priceText = Granite.I18n.get("From {0}",[`<del>${priceDisplay}</del>`]);
						} else if((isStrikethroughRmSite && frontModel.lowestWasPriceUseYn !== "Y") || (siteCode === "ro" || siteCode === "de")) {
							priceText = "";
							savePriceSpan = ``;
							
						} else {
							priceText = `<del>${priceDisplay}</del>`;
						}
						
						topPrice = isNotNull(priceText) || isNotNull(savePriceSpan) ? `
								<span class="my-recommended-product__card-price-save-normal">${(siteCode=="in")? 'MRP (Inclusive of all taxes) ' : ''}</span>
								<span class="hidden">${Granite.I18n.get("Original Price")}: </span>
								${priceText}
								${savePriceSpan}
							`: ``;
					} else if(listPrice > 0 && (siteCode === "nl" || siteCode === "be" || siteCode === "be_fr")) {
						originPrice = frontModel.listPrice;
						discountPrice = frontModel.promotionPrice;
						topPrice = `
							<span class="hidden">${Granite.I18n.get("Original Price")}: </span>
							<span>${Granite.I18n.get("Listprice")}</span> ${currencyComma(frontModel.listPrice, priceCurrency)}
						`;
					}
					emiPrice = frontModel.promotionPrice;
				} else {
					emiPrice = frontModel.price;
				}
			} else if (isHybrisIntg){
				emiPrice = frontModel.price;
				if(isNotNull(frontModel.promotionPrice) && isNotNull(frontModel.promotionPriceDisplay) && (Number(frontModel.price) > Number(frontModel.promotionPrice))){
					emiPrice = frontModel.promotionPrice;
					discountPrice = frontModel.promotionPrice;
					topPrice = `
						<span class="hidden">${frontModel.afterTaxPriceDisplay}</span>
						<span class="hidden">${Granite.I18n.get("Original Price")}: </span>
						<del>${priceDisplay}</del>
					`;
				}
			} else {
				//global
				if(isNotNull(frontModel.formattedPriceSave) && siteCode !== "br"){
					topPrice = `
						<span class="hidden">${Granite.I18n.get("Price before discount")}: </span>
						${frontModel.formattedPriceSave}
					`;
				}
				if(isNotNull(frontModel.rrpPriceDisplay) && isNotNull(frontModel.formattedPriceSave) && siteCode === "br") {
					topPrice = `
						<span class="hidden">${Granite.I18n.get("Original Price")}: </span>
						<del>${frontModel.rrpPriceDisplay}</del>
						<span>${frontModel.formattedPriceSave}</span>
					`;
				}
				if(siteCode === "it"){
					topPrice = ``;
			
					if(isNotNull(frontModel.lowestWasPrice) && isNotNull(frontModel.promotionPrice)
							&& frontModel.promotionPrice < frontModel.lowestWasPrice
							){
						let savePrice = parseFloat(frontModel.lowestWasPrice) - parseFloat(frontModel.promotionPrice);
						let savePriceText = "";
						if(siteCode === "it"){
							savePriceText = Granite.I18n.get("Save the {0}%", [getDiscountRate(savePrice, frontModel.lowestWasPrice)]);
						} else {
							savePriceText = Granite.I18n.get("Save {0}", [currencyComma(savePrice, priceCurrency)]);
						}
						topPrice = `
							<span class="hidden">${Granite.I18n.get("Original Price")}: </span>
							<del>${frontModel.lowestWasPriceDisplay}</del>
							<span>${savePriceText}</span>
						`;
					}
				}
			}
			//Save Text 영역 END
			
			var mainPrice = "";
			//price area build
			if( (upperStock === "LEARNMORE" || upperStock === "NOORDER") && (siteCode === "nl" || siteCode === "be" || siteCode === "be_fr")){
				mainPrice = `
				<div class="my-recommended-product__card-price-current" data-pricetext="${priceDisplay}">
					<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
					${priceDisplay}
				</div>
				`;
				emiPrice = frontModel.price;
			} else if(((isGPv2 || isNewHybris) && upperStock !== "LEARNMORE" && upperStock !== "NOORDER") || 
					(!isGPv2 && !isNewHybris && upperStock !== "LEARNMORE")){
				if( isNotNull(tradeInPriceText) ){
					mainPrice = `
					<div class="my-recommended-product__card-price-current" data-pricetext="${tradeInPriceText}">
						<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
						${tradeInPriceText}
					</div>
					`;
				} else if(useMonthlyPrice && !usUseTradeInDiscount){
					
					if(siteCode === "id") {
						priceTextForCompare = Granite.I18n.get("pf From {0}/mo",[monthlyPrice]) + ' ';
					} else {
						priceTextForCompare = Granite.I18n.get("From {0}/mo",[monthlyPrice]) + ' ';
					}
					
					financingInstallmentDescText = priceTextForCompare;
					
					if(leasingInterest !== "" && siteCode !== "pe" && siteCode !== "cl" && siteCode !== "mx" && siteCode !== "co" && siteCode !== "de"){
						priceTextForCompare += Granite.I18n.get("for {0} mos at {1}% APR",[tenureVal, leasingInterest])+' ';
					} else {
						priceTextForCompare += Granite.I18n.get("for {0} mos",[tenureVal])+' ';
					}
					priceTextForCompare += Granite.I18n.get("or")+' ';
					
					
					var priceTextForCompareAttr = ' data-pricetext="' + priceTextForCompare + currentDisplay+'"';
					
					if(siteCode === "us"){
						priceTextForCompareAttr += ' data-de-pricetext="'+priceTextForCompare+'" data-de-currentprice="'+usDefaultCurrentPrice+'"'+ ' data-use-monthly="true"';
					}
					if(siteCode === "br") {
						var formattedPriceSave = isNotNull(frontModel.formattedPriceSave)?frontModel.formattedPriceSave:"";
						var afterTaxPriceDisplay = isNotNull(frontModel.afterTaxPriceDisplay)?frontModel.afterTaxPriceDisplay:"";
						priceTextForCompareAttr =
							' data-pricetext="' + currentDisplay + ' à vista ' + afterTaxPriceDisplay + ' em ' + tenureVal  + 'x ' + monthlyPrice + ' sem juros"';
						currentDisplay = currentDisplay + ' à vista ' + afterTaxPriceDisplay + ' em ' + tenureVal  + 'x ' + monthlyPrice + ' sem juros';

						let savingInformationTag = "";
						if(isNotNull(frontModel.rrpPriceDisplay) && isNotNull(frontModel.formattedPriceSave)){
							savingInformationTag = `
								<span class="my-recommended-product__card-price-current-normal">à vista</span>
								`;
						}
						mainPrice = `
						<div class="my-recommended-product__card-price-current" ${priceTextForCompareAttr} ${usCurrentPriceAttr}>
							<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
							${currentDisplay}
							${savingInformationTag}
						</div>
						`;

					} else if(siteCode === "nl" || siteCode === "be" || siteCode === "be_fr"){
						var leasingUpfront = frontModel.monthlyPriceInfo.leasingUpfront;
						priceTextForCompareAttr = 
									' data-pricetext="'+currentDisplay+' '+Granite.I18n.get("or")+' '+ leasingUpfront  + " + " + monthlyPrice + " x " + tenureVal  + " " +  Granite.I18n.get("months")+'"';
						
						mainPrice = `
						<div class="my-recommended-product__card-price-current" ${priceTextForCompareAttr} ${usCurrentPriceAttr}>
							<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
							${currentDisplay}
						</div>
						`;
					}else{
						mainPrice = `
						<div class="my-recommended-product__card-price-current" ${priceTextForCompareAttr} ${usCurrentPriceAttr}>
							<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
							${currentDisplay}
						</div>
						`;
					}
				} else if(useLeasingInfo){

					if(downPaymentFormatted !== "" && tenureUnit !== "" && tenureVal !== "" && monthlyRate !== ""){
						var leasingText = " " + downPaymentFormatted + " + " + 
						tenureVal + " x " +
						monthlyRate + "/" + 
						Granite.I18n.get(tenureUnit);
						priceTextForCompare = currentDisplay + ' '+Granite.I18n.get("or")+' ' + leasingText;
						var priceTextForCompareAttr = ' data-pricetext="'+priceTextForCompare+'"';
						
						mainPrice = `
						<div class="my-recommended-product__card-price-current" ${priceTextForCompareAttr}>
							<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
							${currentDisplay} ${Granite.I18n.get("or")} ${leasingText}
						</div>
						`;
					}
				} else {
					var priceTextForCompareAttr = ' data-pricetext="'+currentDisplay+'"';
					var defaultCurrentDisplay = currentDisplay;
					if(siteCode === "us"){
						priceTextForCompareAttr += ' data-de-pricetext="'+defaultCurrentDisplay+'" data-use-monthly="false"';
					}
					mainPrice = `
					<div class="my-recommended-product__card-price-current" ${priceTextForCompareAttr} ${usCurrentPriceAttr}>
						<span class="hidden">${Granite.I18n.get("Total Price")}: </span>
						${currentDisplay}
					</div>
					`;
				}
			}
			var advicedPriceDiv = "";
			var installmentSubSpan = "";
			/* Advice Price 적용 시 추가 */
			if(useMsrpPrice) {
				advicedPriceDiv = `${Granite.I18n.get("Listprice")} ${currencyComma(frontModel.msrpPrice, priceCurrency)}`;
			}
			if( useMonthlyPrice && (siteCode === "pe" || siteCode === "cl" || siteCode === "mx" || siteCode === "co" )){
				installmentSubSpan = `<span class="my-recommended-product__card-price-installment-sub">*Aplican condiciones</span>`;
			}
			var calcFinanceBtn = "";
			var financingHtml = "";
			
			let taggingAttrForEmi = `an-tr="myd11_recommended product cart_cta-product_click2" an-ca="option click" an-ac="recommended product" an-la="calculator"`;
			if(isHomePage){
				taggingAttrForEmi = `an-tr="myd11_recommended product card-home_content_click3" an-ca="home content click" an-ac="recommended product" an-la="calculator"`;
			}
			
			if(isGPv2 || isNewHybris) {
				var financingDesc = [];
				if(frontModel.financingFormattedDesc != null && frontModel.financingFormattedDesc.length > 0){
					financingDesc = frontModel.financingFormattedDesc;
				} else {
					financingDesc = frontModel.financingDesc;
				}
				if (isNotNull(financingDesc) && financingDesc.length > 0 && siteCode !== "us") {
					for(var fdi in financingDesc) {
						financingHtml = financingDesc[fdi];
						if(fdi == 0) {
							// var desc = String(financingDesc[fdi]).replace(Granite.I18n.get("Calculate Finance"), "").trim();
							if(isNotNull(emiPrice)) {
								if((siteCode === "in" || siteCode === "uk" || siteCode === "id" || siteCode === "ee" || siteCode === "lv" || siteCode === "lt" || siteCode === "pl" 
									|| siteCode === "ro" || siteCode === "ua" || siteCode === "ph"
									) && isNotNull(emiUrl)
									//&& frontModel.financing == "Y"
									) {
									financingHtml = `
										<button type="button" class="my-recommended-product__card-price-calculate js-pf-calculate-popup-open" data-type="install" data-modelcode="${frontModel.shopSkuCode}"
										data-link_info="${emiUrl}/?sku=${frontModel.shopSkuCode}&price=${emiPrice}&page=pf"
										${taggingAttrForEmi}>
											${Granite.I18n.get("Calculate Finance")}
										</button>
									`;//${financingDesc[fdi]}
								} else if(siteCode !== "in" && siteCode !== "uk" && isNotNull(financingUrl)) {
									var financeLayerUrl = financingUrl;
									if(siteCode !== "de") {
										financeLayerUrl +='/?total='+ emiPrice +'&page=pf';
									}
									if(siteCode!=="fr") {
										financingHtml = `
											<button type="button" class="my-recommended-product__card-price-calculate js-pf-calculate-popup-open" data-type="install"
											data-link_info="${financeLayerUrl}" aria-label="${financingDesc[fdi]}" ${isNewHybris? 'data-modelcode="' + frontModel.shopSkuCode + '"' : ""}
											${taggingAttrForEmi}>
												${Granite.I18n.get("Calculate Finance")}
											</button>
										`;//${financingDesc[fdi]}
									} else {
										financingHtml = `<button type="button" class="my-recommended-product__card-price-calculate">${Granite.I18n.get("Calculate Finance")}</button>`;
										//${financingDesc[fdi]}
									}
								}
							}
						}
					}
//					if(financingInstallmentDescText){
//						financingHtml = `
//										${financingInstallmentDescText}.
//										`;
//					}
					calcFinanceBtn = financingHtml;
				}
			} else if(isHybrisIntg) {
				if (frontModel.financing === "Y" && isNotNull(frontModel.financingDesc)) {
					financingHtml = frontModel.financingDesc;
					if(isNotNull(emiPrice) && isNotNull(financingUrl)) {
						var financeLayerUrl = financingUrl +'/?total='+ emiPrice +'&page=pf';
						financingHtml = `
							<button type="button" class="my-recommended-product__card-price-calculate js-pf-calculate-popup-open" data-type="install"
							aria-label="${Granite.I18n.get("Calculate Finance")}" data-link_info="${financeLayerUrl}" ${taggingAttrForEmi}>
								${frontModel.financingDesc}
							</button>
						`;
					}
				}
				calcFinanceBtn = financingHtml;
			}
			const lowestWasPriceDescription = (siteCode === "pl" && frontModel.lowestWasPriceUseYn === "Y")?`
						<span class="my-recommended-product__card-price-save-normal">${Granite.I18n.get("Lowest price 30 days before the discount:")}</span>
					`:``;
			if(siteCode === "co" && frontModel.vatEligible === "true"){
				priceItem = `
							<strong class="my-recommended-product__card-price-excluding-vat" data-pricetext="${frontModel.vatFreePriceDisplay}" >${Granite.I18n.get("Price without VAT")}: ${frontModel.vatFreePriceDisplay}</strong>
					`;
				if(isNotNull(promotionDisplay)){
					priceItem +=`
							<strong class="my-recommended-product__card-price-special" data-pricetext="${promotionDisplay}">${Granite.I18n.get("Price with discount")}: ${promotionDisplay}</strong>
							`;
				}
				priceItem += `
					<span class="my-recommended-product__card-price-rrp" data-pricetext="${priceDisplay}">${Granite.I18n.get("Price before")}: <del>${priceDisplay}</del></span>
					`;
			}else{
				priceItem = `
						${siteCode !== "cn" ? mainPrice : ""}
						<div class="my-recommended-product__card-price-save">
							${lowestWasPriceDescription}
							${isNotNull(rrpPricePSpan) ? rrpPricePSpan : topPrice}
						</div>
						${siteCode === "cn" ? mainPrice : ""}
						<div class="my-recommended-product__card-price-installment">
							<span class="my-recommended-product__card-price-installment-text">${advicedPriceDiv}${priceTextForCompare}</span>
							${installmentSubSpan}
							${calcFinanceBtn}
						</div>
						`;
			}
		}
		
		var productCardTemplate = `
			${priceItem}
		`;
		return productCardTemplate;
	}
	
	function buildRating(frontModel){
		let ratingHtml = "";
		var item = "";
		var ratings = frontModel.ratings;
		if(fnIsNull(ratings)){ 
			ratings = 0; 
			frontModel.ratings = 0;
		}

		// rating 반올림 처리
		var tmpCount = Math.pow(10,1);
		ratings = Math.round(ratings*tmpCount)/tmpCount;

		var ratingValue = parseFloat(ratings).toFixed(1),
		fullStarCnt = parseInt(ratings),
		cutStarWidthStyleNum = 0;
		cutStarWidthStyleNum = parseInt((ratingValue-fullStarCnt)*100);
		
		if(ratingValue !== "0.0"){
			frontModel.ratings = ratingValue;
		}

		for(var j=0; j<fullStarCnt;j++){
			item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 100%;"></span></span>';
		}
		if(fullStarCnt < 5 && fullStarCnt > 0){
			item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: ' + cutStarWidthStyleNum + '%;"></span></span>';
			for(var k=4;k>fullStarCnt;k--){
				item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
			}
		} else if ( fullStarCnt === 0 ){
			for(var empty_idx=0;empty_idx<5;empty_idx++){
				item+='<span class="rating__star-item"><span class="rating__star-empty"></span><span class="rating__star-filled" style="width: 0%;"></span></span>';
			}
		}
		frontModel.ratingHtml = item;
		frontModel.ratingsText = Granite.I18n.get("{0} out of {1} Stars",["<span>"+frontModel.ratings+"</span>","5"],siteCode);

		if(frontModel.ratings!=null && frontModel.ratings!=''){
			var ratingEmptyCls = "";
			if(frontModel.ratings == '0'){
				ratingEmptyCls = ' rating--empty';
			}
			var reviewUrl = '/'+siteCode+'/common/review/'+frontModel.modelCode+'/';
			if(frontModel.reviewUrl!=null && frontModel.reviewUrl!=''){
				reviewUrl = frontModel.reviewUrl;
			}
			
			ratingHtml +=
				`<span class="rating${ratingEmptyCls}">
					<span class="rating__inner">
						<span class="rating__star-list">
							${frontModel.ratingHtml}
						</span>
						<strong class="rating__point"><span class="hidden">${RATING_PRODUCT_I18n} : </span><span>${frontModel.ratings}</span></strong>
						<em class="rating__review-count">(<span class="hidden">${NUMBER_RATING_I18n} :</span><span>${frontModel.reviewCount}</span>)</em>
					</span>
				</span>`;
		}
		
		
		return ratingHtml;
	}

	function buildProductCardImage(product) {
		var frontModel = product.modelList[product.frontModelIdx];
		let imageItemHtml = "";
		let ctaType = frontModel.ctaTypeUpperCase;
		
		var price = "";
		var discountPrice = "";
		if (frontModel.price) {
			price = frontModel.price;
		}
		if (frontModel.promotionPrice) {
			discountPrice = frontModel.promotionPrice;
		}

		const displayNameAttr = escapeHtml((frontModel.displayName || "").replace(/<br>/ig, " ").replace(/<sup>/ig, " "));
		const dataModelCodeAttr = `data-modelcode="${frontModel.modelCode}"`;
		const dataModelNameAttr = `data-modelname="${frontModel.modelName}"`;
		const dataRequestidAttr = `data-requestid="${requestId}"`;

		let taggingAttr =
			`an-tr="myd11_recommended product card_cta-product_click2" an-ca="product click" an-ac="recommended product" an-la="image click" 
			${dataModelCodeAttr} ${dataModelNameAttr} ${dataRequestidAttr}`;
		if(isHomePage){
			taggingAttr =
			`an-tr="myd11_recommended product card_cta-home_content_click1" an-ca="home content click" an-ac="recommended product" an-la="image click" 
			${dataModelCodeAttr} ${dataModelNameAttr} ${dataRequestidAttr}`;
		}
		
		if (frontModel.thumbUrl) {
			const thumbImage = imgDomain(frontModel.thumbUrl);
			const thumbAlt = frontModel.thumbUrlAlt || "";

			imageItemHtml +=
				`
				<a class="my-recommended-product__card-image-link" href="${frontModel.pdpUrl}" ${taggingAttr}>
					<div class="my-recommended-product__card-image-item">
					<div class="image">
							<img class="image__preview lazy-load responsive-img" data-desktop-src="${thumbImage+lazyloadPreset}" data-mobile-src="${thumbImage+lazyloadPreset}" alt="${thumbAlt}">
							<img class="image__main lazy-load responsive-img" data-desktop-src="${thumbImage+desktopImagePreset}" data-mobile-src="${thumbImage+mobileImagePreset}" alt="${thumbAlt}">
						</div>
					</div>
				</a>
				`;
		}
		const cardImageHtml =
			`<div class="my-recommended-product__card-image">
				${imageItemHtml}
			</div>`
		return cardImageHtml;
	};

	/**
	 * viewOptionObj : 현재 그리고 있는 Product 의 전체 옵션정보
	 * optionChip 선택 시 화면에 표시해 줄 sku의 index 를 반환함
	 * selectOptionMoIdx : 현재 선택한 옵션의 moidx 값 
	 * otherSelectedOptionMoIdxList : 현재 선택한 타입을 제외한 타입중 선택된 나머지 옵션 리스트
	 * isColorType : 현재 타입이 color 인지에 대한 여부
	 * optionTypeList : 현재 그리고있는 Product 의  optionTypeList 
	 */
	function getSelectedModelIdx(viewOptionObj, selectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, optionTypeList) {
		var modelIdx = 0;
		var modelIdxList = selectOptionMoIdx.split(',');
		var firstIdx = modelIdxList[0];
		var memoryIdx = optionTypeList.indexOf("MEMORY");

		if (!isGPv2 && !isNewHybris && isColorType && memoryIdx > 0) {
			// [global, hybrisIntg] 상위 옵션이 color 이고, 하위에 같이 바뀌는 옵션이 memory 일 때 가장 큰값으로 선택처리
			var memoryOptionList = viewOptionObj["MEMORY"].optionList;
			var selectedModelIdx = 0;
			var highestOption = 0;
			for (var moi in memoryOptionList) {
				var temp_mi = memoryOptionList[moi].modelIdx.split(',');
				for (var tmi in temp_mi) {
					// 선택한 옵션칩의 modelIdx 리스트에 해당하는 model idx 가 있으면  비교 
					if (arrayContains(modelIdxList, temp_mi[tmi])) {
						var this_memory_num = memoryOptionList[moi].optionCode.replace("TB", "000").replace(/[^0-9]/g, "");
						if (highestOption < this_memory_num) {
							highestOption = this_memory_num;
							selectedModelIdx = temp_mi[tmi];
						}
						break;
					}
				}
			}
			modelIdx = selectedModelIdx;
		} else {
			var tempMappingModelIdx = [];
			for (var omi in otherSelectedOptionMoIdxList) {
				var otherMoIdx = otherSelectedOptionMoIdxList[omi];
				if (otherMoIdx) {
					var otherMoIdxArr = otherMoIdx.split(',');
					tempMappingModelIdx = [];
					for (var mli in modelIdxList) {
						if (otherMoIdxArr.indexOf(String(modelIdxList[mli])) > -1) {
							tempMappingModelIdx.push(modelIdxList[mli]);
						}
					}
					if (tempMappingModelIdx.length > 0) {
						modelIdxList = tempMappingModelIdx;
					}
				}
			}
			if (modelIdxList.length > 0) {
				modelIdx = modelIdxList[0];
			} else {
				modelIdx = firstIdx;
			}
		}
		return modelIdx;
	};
	/*
	* multiColor 유무, optionColorType에 따른 colorOptionHtml 작성(C1타입은 없음)
	*/
	var getColorOptionHtml = function(currentOption, isSelected){
		var resultColorOptionHtml = "";
		let colorOpt = ``;
		// multiColor 인경우
		if(isNotNull(currentOption.multiColorYN) && currentOption.multiColorYN === "Y"){
			const multiColorList = currentOption.multiColorList;
			const optionColorType = multiColorList.optionColorType;
			const optionCodeList = multiColorList.optionCodeList ?? [];

			const color1 = optionCodeList.length > 0? optionCodeList[0]: "";
			const color2 = optionCodeList.length > 1? optionCodeList[1]: "";
			const color3 = optionCodeList.length > 2? optionCodeList[2]: "";
			const color4 = optionCodeList.length > 3? optionCodeList[3]: "";
			const color5 = optionCodeList.length > 4? optionCodeList[4]: "";
			const color6 = optionCodeList.length > 5? optionCodeList[5]: "";
			
			if(optionColorType === "C1") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36" height="35.999" viewBox="0 0 36 35.999">
						<g transform="translate(-18.001 9)">
							<rect width="36" height="35.999" transform="translate(18.001 -9)" fill="none" />
							<path d="M18,0A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="${color1}" />
							<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="rgba(0,0,0,0.5)" />
						</g>
					</svg>
				`;
			} else if(optionColorType === "C2_A") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
						<g transform="translate(-17.999 9)">
							<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
							<g>
								<path d="M-3395,7250a18,18,0,0,1,18-18h0v36h0A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${color1}" />
								<path d="M-3377,7232a18,18,0,0,1,18,18,18,18,0,0,1-18,18Z" transform="translate(3413 -7241)" fill="${color2}" />
								<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else if(optionColorType === "C2_B") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
						<g transform="translate(-17.999 9)">
							<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
							<g>
								<path d="M-3395,7250a18,18,0,0,1,18-18,18,18,0,0,1,18,18Z" transform="translate(3413 -7241)" fill="${color1}" />
								<path d="M-3395,7250h36a18,18,0,0,1-18,18A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${color2}" />
								<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(17.999 -9)" fill="rgba(0,0,0,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else if(optionColorType === "C3_A") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
						<g transform="translate(27.001 -17.999) rotate(90)">
							<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
							<g transform="translate(18 -3.005) rotate(-90)">
								<path d="M-1047.672,8501.792a18.1,18.1,0,0,1-1.321-6.168c0-.027,0-.056,0-.083s0-.06,0-.09a18.092,18.092,0,0,1,1.906-8.522c.009-.017.017-.036.028-.053.017-.036.034-.068.051-.1.028-.054.058-.109.085-.162,0,0,0,0,0-.007.109-.205.22-.405.337-.608l0,0a18.019,18.019,0,0,1,1.92-2.717,18.076,18.076,0,0,1,2.2-2.157,18.042,18.042,0,0,1,2.467-1.712,18.109,18.109,0,0,1,2.674-1.264,18.212,18.212,0,0,1,3.76-.967.18.18,0,0,0,.032,0,.045.045,0,0,0,.017,0A18.394,18.394,0,0,1-1031,8477v18h0l-15.583,9A18.227,18.227,0,0,1-1047.672,8501.792Z" transform="translate(1019 -8477.001)" fill="${color1}" />
								<path d="M-1049,8494.994h0v-18a18.692,18.692,0,0,1,2.051.115,18.089,18.089,0,0,1,4.971,1.313.644.644,0,0,0,.068.025.02.02,0,0,0,.015.009,17.41,17.41,0,0,1,1.889.95,18.359,18.359,0,0,1,2.047,1.374c.015.013.032.023.047.036s.034.028.051.041a18.122,18.122,0,0,1,4.446,5.135h0a18.843,18.843,0,0,1,.9,1.783l.045.1s0,0,0,0a18.093,18.093,0,0,1,1.462,6.915c0,.023,0,.047,0,.073v.1a18.107,18.107,0,0,1-1.622,7.482l-.032.073c-.009.019-.019.038-.028.058-.22.474-.463.94-.73,1.4Z" transform="translate(1037.001 -8477)" fill="${color2}" />
								<path d="M-1034.289,8494.979a18.08,18.08,0,0,1-9.093-2.986c-.017-.013-.036-.023-.053-.036a.663.663,0,0,1-.062-.043,18.052,18.052,0,0,1-4.213-3.972l-.1-.128a18.141,18.141,0,0,1-1.2-1.816l15.589-9,15.585,9a18.048,18.048,0,0,1-2.04,2.858.119.119,0,0,1-.015.016l-.077.089a18.1,18.1,0,0,1-2.673,2.456l-.026.02-.1.077a18.052,18.052,0,0,1-9.792,3.466c-.051,0-.1.007-.158.007a.029.029,0,0,1-.013,0c-.228.009-.458.013-.689.013C-1033.709,8495-1034,8495-1034.289,8494.979Z" transform="translate(1021.412 -8459.007)" fill="${color3}" />
								<path d="M18,1A17,17,0,0,0,5.979,30.021,17,17,0,1,0,30.021,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(-30.004 0)" fill="rgba(29,29,27,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else if(optionColorType === "C3_B") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
						<g transform="translate(-17.999 -4)">
							<rect width="36" height="36" transform="translate(18 4)" fill="none" />
							<g transform="translate(17.999 4.001)">
								<path d="M0,18A18.006,18.006,0,0,1,12,1.024v33.95A18.006,18.006,0,0,1,0,18Z" transform="translate(0 0)" fill="${color1}" />
								<path d="M0,34.974V1.024a18.086,18.086,0,0,1,12,0v33.95a18.085,18.085,0,0,1-12,0Z" transform="translate(12 0)" fill="${color2}" />
								<path d="M0,16.975A18.007,18.007,0,0,0,12,33.95V0A18.007,18.007,0,0,0,0,16.975Z" transform="translate(36 34.975) rotate(180)" fill="${color3}" />
								<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(29,29,27,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else if(optionColorType === "C3_C") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 36 36">
						<g transform="translate(-18 -4)">
							<rect width="36" height="36" transform="translate(18 4)" fill="none" />
							<g transform="translate(53.999 4) rotate(90)">
								<path d="M0,18A18.006,18.006,0,0,1,12,1.024v33.95A18.006,18.006,0,0,1,0,18Z" transform="translate(0 0)" fill="${color1}" />
								<path d="M0,34.974V1.024a18.086,18.086,0,0,1,12,0v33.95a18.085,18.085,0,0,1-12,0Z" transform="translate(12 0)" fill="${color2}" />
								<path d="M0,16.975A18.007,18.007,0,0,0,12,33.95V0A18.007,18.007,0,0,0,0,16.975Z" transform="translate(36 34.975) rotate(180)" fill="${color3}" />
								<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(29,29,27,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else if(optionColorType === "C4_A") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
						<g transform="translate(-17.999 9)">
							<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
							<g>
								<path d="M-3395,7250a18,18,0,0,1,18-18v18Z" transform="translate(3413 -7241)" fill="${color1}" />
								<path d="M-3377,7250v-18a18,18,0,0,1,18,18Z" transform="translate(3413 -7241)" fill="${color2}" />
								<path d="M-3377,7250h18a18,18,0,0,1-18,18Z" transform="translate(3413 -7241)" fill="${color3}" />
								<path d="M-3395,7250h18v18h0A18,18,0,0,1-3395,7250Z" transform="translate(3413 -7241)" fill="${color4}" />
								<path d="M18,35A17,17,0,0,0,30.02,5.979,17,17,0,1,0,5.979,30.019,16.889,16.889,0,0,0,18,35m0,1A18,18,0,1,1,36,18,18,18,0,0,1,18,36Z" transform="translate(0)" fill="rgba(29,29,27,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else if(optionColorType === "CP") {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36.001" height="36" viewBox="0 0 36.001 36">
						<g transform="translate(-17.999 9)">
							<rect width="36" height="36" transform="translate(18 -9)" fill="none" />
							<g>
								<path d="M1.333,15.8A18.1,18.1,0,0,1,.01,9.628c0-.027,0-.055,0-.082s0-.06,0-.089A18.086,18.086,0,0,1,1.91.935L1.938.88l.053-.1L2.074.614l0-.007Q2.239.3,2.413,0L18,9,2.413,18A18.157,18.157,0,0,1,1.333,15.8Z" transform="translate(-30.005 8.994)" fill="${color1}" />
								<path d="M0,9A17.9,17.9,0,0,1,6.584,2.41,18.351,18.351,0,0,1,9.257,1.145a18.061,18.061,0,0,1,3.667-.95l.132-.019.019,0A18.137,18.137,0,0,1,15.582,0V18Z" transform="translate(-27.587 0)" fill="${color2}" />
								<path d="M0,18V0A18.223,18.223,0,0,1,2.05.115,18.011,18.011,0,0,1,7.021,1.427l.068.026a.028.028,0,0,0,.015.008,17.506,17.506,0,0,1,1.89.949,18.328,18.328,0,0,1,2.047,1.376l.046.035.052.041A18.106,18.106,0,0,1,15.585,9Z" transform="translate(-12.003 0)" fill="${color3}" />
								<path d="M0,9,15.583,0a18.31,18.31,0,0,1,.9,1.785l.045.1v0A18.087,18.087,0,0,1,18,8.808c0,.023,0,.048,0,.072s0,.064,0,.1a18.082,18.082,0,0,1-1.621,7.483l-.033.073-.027.058q-.332.71-.731,1.4Z" transform="translate(-12.004 8.997)" fill="${color4}" />
								<path d="M0,0,15.585,9a18.082,18.082,0,0,1-2.041,2.858l-.014.016-.078.089a18.166,18.166,0,0,1-2.672,2.457l-.027.02-.1.075A18.057,18.057,0,0,1,.86,17.979L.7,17.986H.688C.46,18,.23,18,0,18Z" transform="translate(-12.005 17.994)" fill="${color5}" />
								<path d="M14.717,17.98a18.082,18.082,0,0,1-9.094-2.987l-.054-.036-.062-.042A18.087,18.087,0,0,1,1.3,10.942h0l-.1-.127A18.134,18.134,0,0,1,0,9L15.589,0V18C15.3,18,15.006,17.994,14.717,17.98Z" transform="translate(-27.593 17.993)" fill="${color6}" />
								<path d="M18,1A17,17,0,0,0,5.979,30.021,17,17,0,1,0,30.021,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(-30.004 0)" fill="rgba(29,29,27,0.5)" />
							</g>
						</g>
					</svg>
				`;
			} else {
				colorOpt = `
					<svg xmlns="http://www.w3.org/2000/svg" width="36" height="35.999" viewBox="0 0 36 35.999">
						<g transform="translate(-18.001 9)">
							<rect width="36" height="35.999" transform="translate(18.001 -9)" fill="none" />
							<path d="M18,0A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="${currentOption.optionCode}" />
							<!--/* [D] 제일 마지막 태그인 path의 fill 속성 값 변경 제외 */-->
							<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="rgba(0,0,0,0.5)" />
						</g>
					</svg>
				`;
			}
		} else {
			colorOpt = `
				<svg xmlns="http://www.w3.org/2000/svg" width="36" height="35.999" viewBox="0 0 36 35.999">
					<g transform="translate(-18.001 9)">
						<rect width="36" height="35.999" transform="translate(18.001 -9)" fill="none" />
						<path d="M18,0A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="${currentOption.optionCode}" />
						<!--/* [D] 제일 마지막 태그인 path의 fill 속성 값 변경 제외 */-->
						<path d="M18,1A17,17,0,0,0,5.979,30.019,17,17,0,1,0,30.02,5.979,16.889,16.889,0,0,0,18,1m0-1A18,18,0,1,1,0,18,18,18,0,0,1,18,0Z" transform="translate(18.001 -9)" fill="rgba(0,0,0,0.5)" />
					</g>
				</svg>
			`;
		}
		let currentOptionLocalNameTag = `<span class="hidden">${currentOption.optionLocalName}</span>`;
		
		resultColorOptionHtml = `
			<span class="option-selector__color-code">
				${colorOpt}
			</span>
			${currentOptionLocalNameTag}
		`;
		return resultColorOptionHtml;
	}
	
	function productCardFmyOptionBuild(product) {
		let optionHtml = "";
		let isColorOptionUse = false;
		let isOtherOptionUse = false;

		if (product.viewOptionObj && Object.keys(product.viewOptionObj).length > 0) {
			// 상위 선택된 옵션칩의 model idx : disable 처리 할때 사용 ( idx에 해당되지않으면 disabled )
			let parentOptionModelIdx = "";
			let viewOptionIdx = 0;
			const curViewOptionObj = product.viewOptionObj;
			const curOptionTypeList = product.optionTypeList;
			let prodCardNum = product.rank;
			
			for (let type in product.viewOptionObj) {
				const optionObj = product.viewOptionObj[type].optionList;
				let isSelected = false;
				let currentOption = {};
				let disabledClass = "";
				let selectorWrapperStyle = "";

				if (product.viewOptionObj[type].styleAttr) {
					selectorWrapperStyle = product.viewOptionObj[type].styleAttr;
				}
				
				var selectedColor = "";
				for(var option in optionObj){
					currentOption = optionObj[option];
					
					var modelIdxList = currentOption.modelIdx.split(',');
					if(currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))){
						selectedColor = currentOption.optionLocalName;
					}
				}

				if (type === "COLOR") {
					isColorOptionUse = true;
					let curSelecteModelIdx = "";
					let colorOptionHtml = "";
					
					for (let oi = 0; oi < optionObj.length; oi++) {
						/* 선택되어있는(대표모델) 옵션 flag값 셋팅 */
						currentOption = optionObj[oi];
						isSelected = false;
						const modelIdxList = currentOption.modelIdx.split(',');
						let colorOptCnt = oi + 1;

						if (currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))) {
							isSelected = true;
							curSelecteModelIdx = currentOption.modelIdx;
							disabledClass = "";
						} else {
							disabledClass = " is-disabled";

							if (viewOptionIdx === 0) {
								disabledClass = "";
							} else {
								const parentModelIdxList = parentOptionModelIdx.split(',');
								for (let mli in modelIdxList) {
									//상위 선택된 옵션칩 의 model idx 에 일치하는 model idx 가 있는 경우 활성화
									if (arrayContains(parentModelIdxList, modelIdxList[mli])) {
										disabledClass = "";
										break;
									}
								}
							}
						}

						// 각 옵션칩의 model 정보 셋팅 ( 태깅 )
						let modelCodeTagging = "";
						let modelNameTagging = "";
						let modelIdx;
						if (disabledClass === "") {
							const curSelectOptionMoIdx = currentOption.modelIdx;
							const otherSelectedOptionMoIdxList = [];
							const isColorType = true;

							for (let ooi in curViewOptionObj) {
								if (ooi !== type) {
									const tmp_optionList = curViewOptionObj[ooi].optionList;
									for (let toi in tmp_optionList) {
										const tmp_option = tmp_optionList[toi];
										const tmp_optionMoIdx = tmp_option.modelIdx;
										const tmp_optionMoIdxArr = tmp_optionMoIdx.split(',');

										// 현재 선택되어있는 option 색출
										if (tmp_optionMoIdxArr.indexOf(String(product.frontModelIdx)) > -1) {
											otherSelectedOptionMoIdxList.push(tmp_optionMoIdx);
										}
									}

								}
							}

							modelIdx = getSelectedModelIdx(curViewOptionObj, curSelectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, curOptionTypeList);
							if (product.modelList.length > modelIdx && product.modelList[modelIdx]) {
								modelCodeTagging = product.modelList[modelIdx].modelCode;
								modelNameTagging = product.modelList[modelIdx].modelName;
							}
						}
						let taggingAttrForOption = `
									an-tr="myd11_recommended product card_cta-product_click2" an-ca="option click" an-ac="recommended product" an-la="${type.toLowerCase()}:${currentOption.optionName.toLowerCase()}"
									data-modelcode="${modelCodeTagging}" data-modelname="${modelNameTagging}"`;
						if(isHomePage){
							taggingAttrForOption = `
									an-tr="myd11_recommended product card-home_content_click2" an-ca="home content click" an-ac="recommended product" an-la="${type.toLowerCase()}:${currentOption.optionName.toLowerCase()}"
									data-modelcode="${modelCodeTagging}" data-modelname="${modelNameTagging}"`;
						}
						colorOptionHtml +=`
							<span class="option-selector__swiper-slide${isSelected?" is-active":""}${disabledClass}" role="listitem">
								<span class="option-selector__color js-pf-product-fmychip">
									<input type="radio" id="color-0${colorOptCnt}-${modelCodeTagging}" name="product-0${prodCardNum}-color-${modelCodeTagging}"
									data-chiptype="color" data-modeli="${modelIdx}"${disabledClass?" disabled":""}
									${taggingAttrForOption} ${isSelected?" checked":""}>
									<label for="color-0${colorOptCnt}-${modelCodeTagging}">
										${getColorOptionHtml(currentOption, isSelected)}
									</label>
								</span>
							</span>
							`;
					}
					parentOptionModelIdx = curSelecteModelIdx;

					optionHtml +=`
						<div class="my-recommended-product__card--color">
							<div class="option-selector__color-name">${COLOR_I18n} : <span class="color-name-text">${selectedColor}</span></div>
							<div class="option-selector__wrap option-selector__wrap--color-chip" data-global-text='{ "selected" : "selected" }'>
								<div class="option-selector__swiper">
									<div class="option-selector__swiper-container">
										<div class="option-selector__swiper-wrapper" style="${selectorWrapperStyle}" role="list">
											${colorOptionHtml}
										</div>
									</div>
									<button type="button" class="option-selector__button-prev" aria-label="Previous" role="button" aria-disabled="true" ${arrowLeftTaggingAttr}>
										<span class="hidden">Previous</span>
										<svg class="icon" focusable="false">
											<use xlink:href="#previous-regular" href="#previous-regular"></use>
										</svg>
									</button>
									<button type="button" class="option-selector__button-next" aria-label="Next" role="button" aria-disabled="true" ${arrowRightTaggingAttr}>
										<span class="hidden">Next</span>
										<svg class="icon" focusable="false">
											<use xlink:href="#next-regular" href="#next-regular"></use>
										</svg>
									</button>
								</div>
							</div>
						</div>
						`;
				} else {
					isOtherOptionUse = true;
					let curSelecteModelIdx = "";
					let memoryOptionHtml = "";
					for (let oi = 0; oi < optionObj.length; oi++) {
						/* 선택되어있는(대표모델) 옵션 flag값 셋팅 */
						currentOption = optionObj[oi];
						isSelected = false;
						const modelIdxList = currentOption.modelIdx.split(',');
						let memoryOptCnt = oi + 1;

						if (currentOption.modelIdx != null && arrayContains(modelIdxList, String(product.frontModelIdx))) {
							isSelected = true;
							curSelecteModelIdx = currentOption.modelIdx;
							disabledClass = "";
						} else {
							disabledClass = " is-disabled";
							if (viewOptionIdx === 0) {
								disabledClass = "";
							} else {
								const parentModelIdxList = parentOptionModelIdx.split(',');

								for (let mli in modelIdxList) {
									//상위 선택된 옵션칩 의 model idx 에 일치하는 model idx 가 있는 경우 활성화
									if (arrayContains(parentModelIdxList, modelIdxList[mli])) {
										disabledClass = "";
										break;
									}
								}
							}
						}

						// 각 옵션칩의 model 정보 셋팅 ( 태깅 )
						let modelCodeTagging = "";
						let modelNameTagging = "";
						let modelIdx;

						if (disabledClass === "") {
							const curSelectOptionMoIdx = currentOption.modelIdx;
							const otherSelectedOptionMoIdxList = [];
							const isColorType = false;

							for (let ooi in curViewOptionObj) {
								if (ooi !== type) {
									const tmp_optionList = curViewOptionObj[ooi].optionList;
									for (let toi in tmp_optionList) {
										const tmp_option = tmp_optionList[toi];
										const tmp_optionMoIdx = tmp_option.modelIdx;
										const tmp_optionMoIdxArr = tmp_optionMoIdx.split(',');

										// 현재 선택되어있는 option 색출
										if (tmp_optionMoIdxArr.indexOf(String(product.frontModelIdx)) > -1) {
											otherSelectedOptionMoIdxList.push(tmp_optionMoIdx);
										}
									}

								}
							}

							modelIdx = getSelectedModelIdx(curViewOptionObj, curSelectOptionMoIdx, otherSelectedOptionMoIdxList, isColorType, curOptionTypeList);
							if (product.modelList.length > modelIdx && product.modelList[modelIdx]) {
								modelCodeTagging = product.modelList[modelIdx].modelCode;
								modelNameTagging = product.modelList[modelIdx].modelName;
							}
						}
						let taggingAttrForOption = `
									an-tr="myd11_recommended product card_cta-product_click2" an-ca="option click" an-ac="recommended product" an-la="${type.toLowerCase()}:${currentOption.optionName.toLowerCase()}"
									data-modelcode="${modelCodeTagging}" data-modelname="${modelNameTagging}"`;
						if(isHomePage){
							taggingAttrForOption = `
									an-tr="myd11_recommended product card-home_content_click2" an-ca="home content click" an-ac="recommended product" an-la="${type.toLowerCase()}:${currentOption.optionName.toLowerCase()}"
									data-modelcode="${modelCodeTagging}" data-modelname="${modelNameTagging}"`;
						}
						memoryOptionHtml +=`
							<span class="option-selector__swiper-slide${isSelected?" is-active":""}${disabledClass}" role="listitem">
								<span class="option-selector__size js-pf-product-fmychip">
									<input type="radio" id="memory-0${memoryOptCnt}-${modelCodeTagging}" name="product-0${prodCardNum}-${type.toLowerCase().replace(" ", "-")}-${modelCodeTagging}"
									data-chiptype="other" data-modeli="${modelIdx}"${disabledClass?" disabled":""} ${taggingAttrForOption} ${isSelected?" checked":""}>
									<label class="option-selector__size-label" for="memory-0${memoryOptCnt}-${modelCodeTagging}">
										<span class="option-selector__size-label-text">${currentOption.optionLocalName}<span></span></span>
									</label>
								</span>
							</span>
							`;
					}
					parentOptionModelIdx = curSelecteModelIdx;
					optionHtml +=`
						<div class="my-recommended-product__card--capacity">
							<div class="option-selector__wrap option-selector__wrap--capacity" data-global-text='{ "selected" : "selected" }'>
								<div class="option-selector__swiper">
									<div class="option-selector__swiper-container" aria-live="polite">
										<div class="option-selector__swiper-wrapper" style="${selectorWrapperStyle}" role="list">
											${memoryOptionHtml}
											<div class="option-selector__floating-bar" style="display: none;"></div>
										</div>
									</div>
									<button type="button" class="option-selector__button-prev" aria-label="Previous" role="button" aria-disabled="true" ${arrowLeftTaggingAttr}>
										<span class="hidden">Previous</span>
										<svg class="icon" focusable="false">
											<use xlink:href="#previous-regular" href="#previous-regular"></use>
										</svg>
									</button>
									<button type="button" class="option-selector__button-next" aria-label="Next" role="button" aria-disabled="true" ${arrowRightTaggingAttr}>
										<span class="hidden">Next</span>
										<svg class="icon" focusable="false">
											<use xlink:href="#next-regular" href="#next-regular"></use>
										</svg>
									</button>
								</div>
							</div>
						</div>
						`;
				}
				viewOptionIdx++;
			}
		}
		if(!isColorOptionUse){
			optionHtml = `
					<div class="my-recommended-product__card--color">
					</div>` + optionHtml;
		}
		if(!isOtherOptionUse){
			optionHtml = 
					optionHtml + `
					<div class="my-recommended-product__card--capacity">
					</div>`;
		}
		
		return optionHtml;
	};
	/*
	* energyLabe, repairbility
	*/
	function energyLabelBuild(frontModel){
		var energyLabelHtml = "";

		energyLabelHtml +=
			'<div class="my-recommended-product__card-energy-label">';
			
		var energySplitUrl,ficheSplitUrl = "";
		if(isNotNull(frontModel.energyFileUrl)){
			energySplitUrl = frontModel.energyFileUrl.split("/");
		}
		if(isNotNull(frontModel.ficheFileUrl)){
			ficheSplitUrl = frontModel.ficheFileUrl.split("/");
		}
		if(isNotNull(frontModel.energyLabelGrade) && isNotNull(frontModel.energyLabelClass1) && isNotNull(frontModel.newEnergyLabel) && frontModel.newEnergyLabel !== "Y"){
			energyLabelHtml += 
				'<div class="fiche-badge">';
			if(isNotNull(frontModel.ficheFileUrl)){
				energyLabelHtml +=
					'<a href="'+frontModel.ficheFileUrl+'" target="_blank" aria-label="'+Granite.I18n.get("Product Fiche")+' '+ficheSplitUrl[ficheSplitUrl.length-1]+': '+ Granite.I18n.get("Open in a new window")+'" class="cta-text" ' + eneryLabelTaggingAttr + '>'+
						Granite.I18n.get("Product Fiche")+
					'</a>';
			}
			energyLabelHtml +=
				'<a class="badge '+frontModel.energyLabelClass2+'" href="'+frontModel.energyFileUrl+'" aria-label="'+frontModel.energyLabelGrade+' '+energySplitUrl[energySplitUrl.length-1]+': '+ Granite.I18n.get("Open in a new window")+'" target="_blank" aria-label="'+Granite.I18n.get("Open in a new window")+'" ' + eneryLabelTaggingAttr + '>'+
					'<span class="badge__grade--with-text '+frontModel.energyLabelClass1+'">'+
						'<span class="hidden">'+frontModel.energyLabelGrade+'</span>'+
					'</span>'+
				'</a>';
			energyLabelHtml += 
				'</div>';
		}else if(isNotNull(frontModel.energyLabelGrade) && isNotNull(frontModel.energyLabelClass1) && isNotNull(frontModel.energyFileUrl) && frontModel.newEnergyLabel=="Y"){
			energyLabelHtml += 
				'<div class="badge-energy-label">';
			if(isNotNull(frontModel.ficheFileUrl)){
				energyLabelHtml +=
					'<a class="badge-energy-label__text" href="'+frontModel.ficheFileUrl+'" target="_blank" aria-label="'+Granite.I18n.get("PRODUCT INFORMATION SHEET")+' '+ficheSplitUrl[ficheSplitUrl.length-1]+': '+Granite.I18n.get("Open in a new window")+'" ' + eneryLabelTaggingAttr + '>' +
						Granite.I18n.get("PRODUCT INFORMATION SHEET") +
					'</a>';

				let energyLabelClass = "";
				if(frontModel.energyLabelClass){ //energyLabelClass 있으면
					energyLabelClass = frontModel.energyLabelClass;
				}else{ //energyLabelClass 없으면
					energyLabelClass = frontModel.energyLabelClass1;
				}
				energyLabelHtml += 
					'<a class="badge-energy-label__badge '+energyLabelClass+'" href="'+frontModel.energyFileUrl+'" target="_blank" aria-label="'+frontModel.energyLabelGrade+' '+energySplitUrl[energySplitUrl.length-1]+': '+ Granite.I18n.get("Open in a new window")+'"' + eneryLabelTaggingAttr + '>'+
						frontModel.energyLabelGrade +
					'</a>';
			}
			energyLabelHtml += 
				'</div>';
		}
		energyLabelHtml +=
			'</div>';
		//	Repairbility STR
		energyLabelHtml +=
			'<div class="my-recommended-product__card-repairability">';
			
		/* // repairability 가 있으면 아래 마크업 적용 */
		if(isNotNull(frontModel.repairabilityIndex)){
			var repairabilityIndex = Number(frontModel.repairabilityIndex);
			var repairabilityAlt = Granite.I18n.get("Repairability Index : {0} / 10", [repairabilityIndex] );
			
			if(siteCode=="fr" || siteCode=="test"){
				var reparabiliteUrl = isNotNull(frontModel.repairabilityIndexPdfUrl) ? frontModel.repairabilityIndexPdfUrl :'/fr/indice-reparabilite/';
				var tempArr = reparabiliteUrl.split("/");
				var reparabiliteFileName = tempArr[tempArr.length-1];
				let taggingAttr = `an-tr="myd11_recommended product:option-${pageTrack}-repairability index-option_click4" an-ca="option click" an-ac="recommended product" an-la="repairability index"`;
				if(isHomePage){
					taggingAttr = `an-tr="myd11_recommended product card-home_content_click3" an-ca="home content click" an-ac="recommended product" an-la="repairability index"`;
				}
				energyLabelHtml += 
					'<span class="badge-repairability">'+
						'<a href="'+ reparabiliteUrl +'" target="_blank" aria-label="Indice de réparabilité" '+ taggingAttr +'>'+
							'<img class="badge-repairability__image" src="//images.samsung.com/is/image/samsung/'+ siteCode +'/icon/consumer/repairability_index_'+ repairabilityIndex +'.png" alt="'+repairabilityAlt+'">'+
						'</a>'+
					'</span>';
			}else{
				energyLabelHtml += 
					'<span class="badge-repairability">'+
						'<img class="badge-repairability__image" src="//images.samsung.com/is/image/samsung/'+ siteCode +'/icon/consumer/repairability_index_'+ repairabilityIndex +'.png" alt="'+repairabilityAlt+'">'+
					'</span>';
			}
			
		}
		energyLabelHtml +=
			'</div>';
		
		return energyLabelHtml;
	}

	function buildProductCard(product, swiperIdx, wrapUse) {
		const frontModel = product.modelList[product.frontModelIdx];
		
		let ctaType = frontModel.ctaTypeUpperCase;
		
		var price = "";
		var discountPrice = "";
		if (frontModel.price) {
			price = frontModel.price;
		}
		if (frontModel.promotionPrice) {
			discountPrice = frontModel.promotionPrice;
		}

		const displayNameAttr = escapeHtml((frontModel.displayName || "").replace(/<br>/ig, " ").replace(/<sup>/ig, " "));
		const dataModelCodeAttr = `data-modelcode="${frontModel.modelCode}"`;
		const dataModelNameAttr = `data-modelname="${frontModel.modelName}"`;

		// pre order, buy now, add to cart 에 사용
		const taggingAttrForBuy =
			`data-pimsubtype="${(product.categorySubTypeEngName || "").toLowerCase()}" data-pvitype="${(frontModel.pviTypeName || "").toLowerCase()}" data-pvisubtype="${(frontModel.pviSubtypeName || "").toLowerCase()}" 
			data-modelrevenue="${price}" data-modelprice="${price}" data-modelqty="1" data-modelcurrency="${priceCurrency}" data-modeldisplay="${displayNameAttr}" data-discountprice="${discountPrice}" ${dataModelCodeAttr} ${dataModelNameAttr}`;

		let covatClass = "";
		if(siteCode === "co" && frontModel.vatEligible === "true"){
			covatClass = " my-recommended-product__card-price--samcol";
		}
		let noCnClass = ""
		if(siteCode !== "cn"){
			noCnClass = " my-recommended-product__card-price--current-first";
		}
		
		let cardItemHtml =`
				<div class="my-recommended-product__card-item">
					<div class="my-recommended-product__card-image-wrap">
						${buildBadge(frontModel)}
						${getWishlist(frontModel)}
						${buildProductCardImage(product)}
					</div>

					<div class="my-recommended-product__card-content">
						<div class="my-recommended-product__card-name">
							<p class="my-recommended-product__card-name-text">${frontModel.displayName}</p>
						</div>
						<div class="my-recommended-product__card-info">
							<div class="option-selector option-selector__color-text">
								${productCardFmyOptionBuild(product)}
							</div>
						</div>
						<div class="my-recommended-product__card-fiche">
							${energyLabelBuild(frontModel)}
						</div>
						<div class="my-recommended-product__card-price${covatClass}${noCnClass}">
							${buildPriceArea(frontModel)}
						</div>
						<div class="my-recommended-product__card-cta-wrap">
							<div class="my-recommended-product__card-cta">
								${getCTAForNewGeneral(product)}
							</div>
						</div>
					</div>
				</div>
				`;
				
		if(wrapUse){
			cardItemHtml =`
			<div class="my-recommended-product__card-item-wrap swiper-slide js-pf-product-card" role="listitem" data-productidx="${product.familyId}" 
							data-swiperidx="${swiperIdx}"
							data-type-headline="Indicator Text${swiperIdx}" 
							data-tagging='{
							"an-tr":"my recommended product image-swipe${swiperIdx}",
							"an-ca":"indication",
							"an-ac":"carousel",
							"an-la":"carousel:swiper:${swiperIdx}"
						}'>
				${cardItemHtml}
			</div>
			`;
		}
		return cardItemHtml;
	}
	/*
	* Swiper Button
	*/
	function getRecommendedProductSwiperWrapperHtml(swiperWrapperHtml){
		return `
				<button type="button" class="my-recommended-product__card-swiper-prev swiper-button-prev" ${arrowLeftTaggingAttr}>
					<span class="hidden">${Granite.I18n.get("Previous")}</span>
					<svg class="icon" focusable="false" aria-hidden="true">
						<use xlink:href="#previous-bold" href="#previous-bold"></use>
					</svg>
				</button>
				<div class="my-recommended-product__card-swiper swiper-container basic-swiper" data-swiper-option='{
					"breakpoints": {
						"1": {
							"slidesPerView":2
						},
						"768": {
							"slidesPerView":4
						}
					},
					"pagination":true,
					"keepWrapper":true,
					"autoplay":false,
					"componentEl":".my-recommended-product__card",
					"followFinger":true,
					"offTxtAccesibility":"true"
				}'>
				
					<div class="swiper-wrapper js-pf-content-wrap" role="list">
						<!--/* swiper-slide에 data-tagging={an-...} 태깅 정보를 넣어주면 indicator의 dot에 각 슬라이드의 정보가 노출됩니다. */-->
						<!--/* swiper-slide에 data-type-headline="Indicator Text" 정보를 부여해 주면 인디케이터 버튼에 노출 됩니다. */-->
						<!--/* product card */-->
						${swiperWrapperHtml}
					</div>
				</div>
				<button type="button" class="my-recommended-product__card-swiper-next swiper-button-next" ${arrowRightTaggingAttr}>
					<span class="hidden">${Granite.I18n.get("Next")}</span>
					<svg class="icon" focusable="false" aria-hidden="true">
						<use xlink:href="#next-bold" href="#next-bold"></use>
					</svg>
				</button>
				<div class="indicator dot-indicator" data-comp-name="indicator" data-indicator-data='{
				 "type": "dot-indicator",
				 "autoRolling": false,
				 "infiniteRolling": false
				 }'>
					<div class="indicator-wrap">
						<div class="indicator__list-wrap">
							<div class="indicator__list" role="tablist">
								<!--/* 웹 접근성을 위해 필요 시 carousel 과 연결할 id 추가 */-->
								<button class="indicator__item" role="tab" data-indicator-delay="">
									<span class="indicator__dot-wrap">
										<span class="indicator__dot">
											<span class="indicator__dot-inner"></span>
										</span>
										<!--/* (21/05/06 접근성) dialog 에서 indicator text 를 넣어야 하는 경우 아래 element 에 text 넣음 */-->
										<span class="hidden">Indicator 1</span>
									</span>
								</button>
							</div>
						</div>
					</div>
				</div>
				`;
	}
	/*
	* fmychip click event
	*/
	function productCardEventListener() {
		//Wishlist icon Reinit
		window.sg.components.wishlistIcon.reInit();

		/* fmychip click event :: S */
		const fmyChipEl = $(".js-pf-product-fmychip");
		fmyChipEl.off("click");
		fmyChipEl.on("click", function () {
			const _this = $(this);
			const $targetContentEl = _this.closest('.js-pf-product-card');
			console.log("targetContentEl className="+$targetContentEl.attr("class"));
			const familyid = $targetContentEl.data("productidx");
			
			const modelIdx = _this.find("input[type=radio]").data("modeli");
			const chipType = _this.find("input[type=radio]").data("chiptype");

			setTimeout(function () {
				if (modelIdx != null) {
					const productData = productListData[familyid];
					productData.frontModelIdx = modelIdx;

					$targetContentEl.find(".option-selector__wrap").each(function (idx) {
						var tmpType = productData.optionTypeList[idx];
						var styleAttr = $(this).find(".option-selector__swiper-wrapper").attr("style");
						productData.viewOptionObj[tmpType].styleAttr = styleAttr;
					});
					
					$targetContentEl.html(buildProductCard(productData, 0, false));

					window.sg.components.myRecommendedProduct.optionReInit($targetContentEl.find(".my-recommended-product__card-item")[0]);
					productCardEventListener();
					
					var modelCode = productData.modelList[modelIdx].modelCode;
					changeAddedWishlist($targetContentEl, modelCode);
					
					$targetContentEl.find("input").each(function(){
						var type = $(this).data("chiptype");
						var code = $(this).data("modelcode");

						if(chipType === type && modelCode === code){
							$(this).focus();
						}
					});
					
				}
			}, 300);
		});
		/* fmychip click event :: E */

		/* CTA click event :: S */
		let isBuyNowClicked = false;
		const ctaBtn = $(".js-buy-now");
		ctaBtn.off("click");
		ctaBtn.on("click", function () {
			const _this = $(this);
			let modelCode = "";
			let configInfo = "";
			let configuratorURL = "";
			if (isGPv2) {
				configInfo = _this.attr("config_info");
				modelCode = _this.attr("data-modelcode");
				const addToCartFlag = _this.attr("data-cart");
				if (addToCartFlag === "true") {
					const shopSkuCode = _this.attr("data-sku-code");
					const addToCartUrl = cartUrl + "?addItem[]=" + shopSkuCode + ",1";
					window.location.href = addToCartUrl;
				} else {
					if (configInfo) {
						if (configInfo.indexOf("?modelCode") < 0) {
							configuratorURL = configInfo + "?modelCode=" + modelCode;
						} else {
							configuratorURL = configInfo;
						}
						window.location.href = configuratorURL;
					}
				}
			} else {
				if (isBuyNowClicked === true) {
					return;
				}
				configInfo = $(this).attr("config_info");
				modelCode = $(this).attr("data-modelcode");
				let linkInfo = $(this).attr("link_info");
				
				if(cartUrl.indexOf("http://") > -1 || cartUrl.indexOf("https://") > -1){
					linkInfo = cartUrl;
				}

				let addCartTimeout = 10000;
				if (siteCode === "vn") {
					addCartTimeout = 20000;
				}
				if (configInfo) {
					if (configInfo.indexOf("?modelCode") < 0) {
						configuratorURL = configInfo + "?modelCode=" + modelCode;
					} else {
						configuratorURL = configInfo;
					}
					window.location.href = configuratorURL;
				} else {
					if(isNewHybris && (siteCode === "uk" || siteCode === "cn")){
						addToCartNewHybris(modelCode, linkInfo);
					} else if (hybrisApiJson === "Y") {
						$.ajax({
							url: storeDomain + "/" + siteCode + "/ng/p4v1/addCart",
							type: "GET",
							data: {
								"productCode": modelCode,
								"quantity": 1
							},
							contentType: "application/x-www-form-urlencoded",
							dataType: "json",
							xhrFields: {
								withCredentials: true
							},
							crossDomain: true,
							timeout: addCartTimeout,
							success: function (data) {
								if (data) {
									if (data.resultCode === "0000") {
										isBuyNowClicked = true;
										window.location.href = linkInfo;
									}
								}
							}
						});
					} else if (siteCode === "pe" || siteCode === "ar" || siteCode === "br") {
						const storeurl = storeDomain + "/" + siteCode + "/getServicesProduct?productCode=" + modelCode;
						window.location.href = storeurl;
					} else if (siteCode === "py" || siteCode === "mx" ) {
						let storeurl;
						storeurl = storeDomain + "/getServicesProduct?productCode=" + modelCode;
						window.location.href = storeurl;
					} else {
						let realSiteCode = siteCode;
						if (shopSiteCd) {
							realSiteCode = shopSiteCd;
						}
						
						var apiUrl =  storeDomain + "/" + realSiteCode + "/ng/p4v1/addCart";
						if(isNewHybris && siteCode !='uk' && siteCode !='cn'){
							var storeWebDomain = $("#storeWebDomain").val();
							apiUrl =  storeWebDomain + "/" + realSiteCode + "/ng/p4v1/addCart";
						}
						$.ajax({
							url: apiUrl,
							type: "GET",
							data: {
								"productCode": modelCode,
								"quantity": 1
							},
							dataType: "jsonp",
							jsonp: "callback",
							timeout: 10000,
							success: function (data) {
								if (data) {
									if (data.resultCode === "0000") {
										isBuyNowClicked = true;
										window.location.href = linkInfo;
									}
								}
							}
						});
					}
				}
			}
		});
		/* CTA click event :: E */
		
		// calculator click event  
		var $calculateCta = $('.js-pf-calculate-popup-open');
		$calculateCta.off("click.finder");
		$calculateCta.on("click.finder", function(e){
			var targetCta = $(this);
			var calType = targetCta.data("type");
			var targetHref = targetCta.attr("data-link_info");
			//new-hybris
			if(isNewHybris){
				window.sg.components.financePopup.showEmiPopup(targetCta.attr("data-modelcode"), targetCta);
			} else if(targetCta.hasClass('eip-ee-cal')){
				installmentPlansData.getPaymentData( $(this).attr("data-price"), $(this)[0], $(this).attr("data-modelcode"));
			} else if(isNotNull($emiPopupEl)){
					var $iframeEl = $emiPopupEl.find('iframe');
					
					var $emiPopupTitleEl = $emiPopupEl.find('.layer-popup__title');
					var popupTitle = "";
					if(calType==="emi"){
						popupTitle = Granite.I18n.get("EMIs (Pay in Easy Monthly installments)");
					}else if(calType==="install"){
						if(siteCode=="id"){
							popupTitle = Granite.I18n.get("Program CICILAN 0%");
						}else{
							popupTitle = Granite.I18n.get("Installment Calculate");
						}
					}
					$emiPopupTitleEl.html(popupTitle);
					$iframeEl.attr("src", targetHref);
					
					window.sg.components.eipPopup.showPopup();
			}
		});
	}
	/*
	* Product Card Grid
	*/
	function buildProductGrid(productList) {
		var productGridTemplate = "";
		if (productList != null) {

			for (let pl = 0; pl < productList.length; pl++) {
				let tempProduct = productList[pl];
				
				if (tempProduct.modelList != null && tempProduct.modelList.length > 0) {
					let selectedIndex = 0;

					/* selected가 Y인 모델의 마지막 index가 변수에 저장됨.*/
					for (let cnt = 0; cnt < tempProduct.modelList.length; cnt++) {
						const tempModel = tempProduct.modelList[cnt];
						if (tempModel.selected && tempModel.selected === "Y") {
							selectedIndex = cnt;
						}
					}
					tempProduct.frontModelIdx = selectedIndex;
					tempProduct = getProductInfo(tempProduct);
					//product까지 가공된 데이터를 productListData 에 저장해줌
					productListData[tempProduct.familyId] = tempProduct;
					
					productGridTemplate += buildProductCard(tempProduct, pl, true);
				}
			}
			
			$myComponent.find('.my-recommended-product__card').html(getRecommendedProductSwiperWrapperHtml(productGridTemplate));
		}
	}
	/*
	* Product Card Grid BDC
	*/
	function buildProductGridBDC(productList) {
		var productGridTemplate = "";
		if (productList != null) {

			for (let pl = 0; pl < productList.length; pl++) {
				let tempProduct = productList[pl].product;
				tempProduct["rank"] = productList[pl].rank;
				
				if (tempProduct.modelList != null && tempProduct.modelList.length > 0) {
					let selectedIndex = 0;

					/* selected가 Y인 모델의 마지막 index가 변수에 저장됨.*/
					for (let cnt = 0; cnt < tempProduct.modelList.length; cnt++) {
						const tempModel = tempProduct.modelList[cnt];
						if (tempModel.selected && tempModel.selected === "Y") {
							selectedIndex = cnt;
						}
					}
					tempProduct.frontModelIdx = selectedIndex;
					tempProduct = getProductInfo(tempProduct);
					//product까지 가공된 데이터를 productListData 에 저장해줌
					productListData[tempProduct.familyId] = tempProduct;
					
					productGridTemplate += buildProductCard(tempProduct, pl, true);
				}
			}

			$myComponent.find('.my-recommended-product__card').html(getRecommendedProductSwiperWrapperHtml(productGridTemplate));
		}
	}
	function getSearchProductCard() {
		var onlyRequestSkuYN = "";
		
		let AEMApiUrl = "/aemapi/v6/mysamsung/prodrec/recommendation";
		
		let pageType = "shop_home"; // Page Type 이 login 일때(my_page, login이 아닐때(shop_home )
		let guid = "";
		let visitorId = "";
		let num = 20;// max 20
		
		let ncpparam = Math.random();
		
		if(tempTitle.toLowerCase().indexOf('my') > -1){
			pageType = "my_page";
		}else if("page-home" === tempTitle){
			pageType = "home_bottom";
		}else if("page-search" === tempTitle){
			pageType = "search_no_result";
		}
		
		if(commonLoginCheck()){
			guid = $.cookies.get("guid",{domain:".samsung.com"});
			visitorId = $.cookies.get("s_ecid",{domain:".samsung.com"});
		}
		let recent_list = cookies.getCookie("recent_list");
		let visitorIdList = [];
		$.each(cookies.getCookies(), function(k, v) {
			if (k.indexOf('AMCV_') != -1) {
		 		visitorIdList.push(v.toString());
			}
		})
		
		const aemParam = {
						"siteCode": siteCode,
						"pageType": pageType,
						"guid": guid,
						"visitorId": visitorId,
						"num": num,
						"ncp" : ncpparam,
						"recent_list": recent_list,
						"visitorIdList": JSON.stringify(visitorIdList)
						};
						
		$.ajax({
			url: AEMApiUrl,
			type: "GET",
			data: aemParam,
			dataType: "json",
			cache: true,
			timeout: 20000
		}).done(function (data) {
			if (data && data.statusCode === 200 && data.resultData 
					&& data.resultData.result && data.resultData.result.code === 200
					) {
				
				let recommendations = data.resultData.result.recommendations;
				requestId = data.resultData.result.requestId;
				recommendations.sort(function(a,b) {
						return parseFloat(a.rank) - parseFloat(b.rank);
					});
				let result = [];
				recommendations.forEach((item,idx)=>{
					result.push(item.model);
				});
				let modelList = result.join(",");
				console.log(modelList);
				
				const param = {
							"siteCode": siteCode,
							"modelList": modelList,
							"saleSkuYN": "Y",
							"onlyRequestSkuYN": "N"
							};
		
				if (shopSiteCode) {
					param.shopSiteCode = shopSiteCode;
				}
				if (commonCodeYN) {
					param.commonCodeYN = commonCodeYN;
				}
				$.ajax({
					url: searchApiUrl,
					type: "GET",
					data: param,
					dataType: "json",
					cache: true,
					timeout: 20000
				}).done(function (data) {
					if (data.response && data.response.statusCode === 200 && data.response.resultData && data.response.resultData.productList) {
						const productList = data.response.resultData.productList;
						
						buildProductGrid(productList);
						
						if(commonLoginCheck()){
							commonGetWishlist(changeAddedWishlist);
						}
						productCardEventListener();
						
						console.log("window.sg.components.myRecommendedProduct.reInit...");
						if(isUseReinitTemp){
							$myComponent.find('.my-recommended-product__headline-text').show();
						}
						window.sg.components.myRecommendedProduct.reInit();
						window.sg.components.myRecommendedProduct.optionReInit($('.my-recommended-product').find('.my-recommended-product__card')[0]);
					}
				});
			}
		});
	}

	function getSearchProductCardForBDCApi() {
		var onlyRequestSkuYN = "";
		
		let BDCApiHost = "https://api-recommender.bigdata.samsung.com";
		let apiUrl = "/prodrec/recommendation";
		
		let setRequestId = `${siteCode}:${Math.floor(new Date/1000)}:${Math.floor(100000 + Math.random() * 900000)}`;
		let pageType = "shop_home"; // Page Type 이 login 일때(my_page, login이 아닐때(shop_home )
		let guid = "";
		let saId = "";
		let visitorId = "";
		let num = 20;// max 20
		
		if(tempTitle.toLowerCase().indexOf('my') > -1){
			pageType = "my_page";
		}else if("page-home" === tempTitle){
			pageType = "home_bottom";
		}else if("page-search" === tempTitle){
			pageType = "search_no_result";
		}
		
		if(commonLoginCheck()){
			guid = $.cookies.get("guid",{domain:".samsung.com"});
			saId = $.cookies.get("sa_id",{domain:".samsung.com"});
			visitorId = $.cookies.get("s_ecid",{domain:".samsung.com"});
		}
		let consent = $.cookies.get("cmapi_cookie_privacy",{domain:".samsung.com"});
		// let recent_list = $.cookies.get("recent_list",{domain:".samsung.com"});
		// TODO 뭐지 recent_list는 텍스트로 넘어가고 visitorIdList는 그냥 배열로???
		let recent_list = cookies.getCookie("recent_list");
		let visitorIdList = [];
		$.each(cookies.getCookies(), function(k, v) {
			if (k.indexOf('AMCV_') != -1) {
		 		visitorIdList.push(v.toString());
			}
		})
		const headers = {
						"requestId": setRequestId,
						"country": siteCode,
						"num": num
						};
		const bdcParam = {
						"pageType": pageType,
						"guid": guid,
						"saId": saId,// "sa_id" 쿠키값 활용(로그인 시 존재)
						"visitorId": visitorId,
						"visitorIdList": visitorIdList,
						"consent" : consent,// cmapi_cookie_privacy
						"recentList": recent_list,
						"targetModel": "",
						"rewardPoint": ""
						};
						
		$.ajax({
			headers: headers,
			url: BDCApiHost + apiUrl,
			type: "POST",
			data: JSON.stringify(bdcParam),
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			xhrFields: { withCredentials: true },
			cache: true,
			timeout: 20000
		}).done(function (data) {
			if (data.code && data.code === 200 && data.recommendations && data.recommendations.length > 0) {
				
				console.log("data.recommendations::" + data.recommendations);
				const productList = data.recommendations;
				requestId = data.requestId;
				
				buildProductGridBDC(productList);
				
				if(commonLoginCheck()){
					commonGetWishlist(changeAddedWishlist);
				}
				productCardEventListener();
				
				console.log("window.sg.components.myRecommendedProduct.reInit...");
				if(isUseReinitTemp){
					$myComponent.find('.my-recommended-product__headline-text').show();
				}
				window.sg.components.myRecommendedProduct.reInit();
				window.sg.components.myRecommendedProduct.optionReInit($('.my-recommended-product').find('.my-recommended-product__card')[0]);
			}
		}).fail(function(xhr, status, error) {
			// error handling
			console.log("xhr.statusText::"+xhr.statusText);
			console.log("status::"+status);
			console.log("error::"+error);
		});
	}
	
	function init(){
		if(!isUseReinitTemp){
			$myComponent.find('.my-recommended-product__headline-text').show();
		}
		
		//getSearchProductCard();
		getSearchProductCardForBDCApi();
	}
	function reInit(){
		if(recommendedProductYn === "Y"){
			init();
		}
	}
	$(function () {
		if(!isUseReinitTemp){
			init();
		}
	});
	window.sg.components.recommendedProduct = {
		reInit
	};
}(window, window.jQuery));

(() => {
  const $q = window.sg.common.$q;
  const layerPopupMaxHeight = window.sg.common.layerPopupMaxHeight;
  const scrollbar = window.sg.common.scrollbar;
  const utils = window.sg.common.utils;

  let eipPopupEls = {};

  const selector = {
    section: '.eip-popup',
    layerPopup: '.layer-popup',
    close: '.layer-popup__close',
  };

  let tabIndex = -1;
  let selectItemIndex = -1;

  function init() {
    const eipPopup = document.querySelector('.eip-popup');

    if (!eipPopup) {
      return;
    }

    setElements(eipPopup);

    layerPopupMaxHeight.init(eipPopupEls.layerEl);

    bindEvents();
  }

  function setElements(el) {
    eipPopupEls = {
      el,
      layerEl: el.querySelector('.layer-popup'),
      closeEl: el.querySelector('.layer-popup__close'),
      tabEl: el.querySelectorAll('.eip-popup__tab'),
      parentEl: null,
    };
  }

  function bindEvents() {
    eipPopupEls.closeEl.addEventListener('click', closePopup);

    const closeBtn = document.querySelector(`${selector.section} ${selector.close}`);
    closeBtn.removeEventListener('keydown', keydownCloseBtn);
    closeBtn.addEventListener('keydown', keydownCloseBtn);
    
    const layer = document.querySelector(`${selector.section} ${selector.layerPopup}`);
    layer.removeEventListener('keydown', keydownLayer);
    layer.addEventListener('keydown', keydownLayer);

    if (eipPopupEls.tabEl[tabIndex]) {
      window.addEventListener('resize', () => {
        scrollbar.resize(eipPopupEls.tabEl[tabIndex].querySelector('.eip-popup__tab--select-wrap'));
        scrollbar.resize(eipPopupEls.tabEl[tabIndex].querySelector('.eip-popup__tab--table-wrap'));
      });
    }
  }

  function keydownLayer(evt) {
    if (evt.shiftKey && window.sg.common.constants.KEY_CODE.TAB === evt.keyCode) {
      const firstFocusEl = eipPopupEls.layerEl.querySelectorAll('a, button, input:not([type="hidden"]), textarea')[0];

      if (firstFocusEl && evt.target === firstFocusEl) {
        evt.preventDefault();
        document.querySelector(`${selector.section} ${selector.close}`).focus();
      }
    }
  }

  function keydownCloseBtn(evt) {
    if (!evt.shiftKey && window.sg.common.constants.KEY_CODE.TAB === evt.keyCode) {
      evt.preventDefault();
      const firstFocusEl = eipPopupEls.layerEl.querySelectorAll('a, button, input:not([type="hidden"]), textarea')[0];

      if (firstFocusEl) {
        firstFocusEl.focus();
      }
    }
  }


  function originFocus() {
    if (eipPopupEls.parentEl !== null) {
      eipPopupEls.parentEl.focus();
      eipPopupEls.parentEl = null;
    } else {
      utils.buyingFocus('eipPopup');
      // if (document.querySelector('.pd-buying-tool [data-target-popup="eipPopup"]') !== null) {
      //   document.querySelector('.pd-buying-tool [data-target-popup="eipPopup"]').focus();
      // }
    }
  }

  function utilsShow() {
    utils.popupControl.open(closePopup);
    utils.hiddenScroll();
    utils.setMobileFocusLoop(eipPopupEls.el);
  }

  function utilsHide() {
    utils.popupControl.close();
    utils.visibleScroll();
    utils.removeMobileFocusLoop();
  }

  function closePopup() {
    if (document.querySelector('.eip-popup__frame iframe')) {
      document.querySelector('.eip-popup__frame iframe').src = '';
    }

    tabIndex = -1;
    selectItemIndex = -1;

    eipPopupEls.layerEl.classList.remove('eip-popup--show');
    eipPopupEls.el.removeAttribute('style');
    utilsHide();
    originFocus();
  }

  function showPopup(btn) {
    eipPopupEls.el.style.display = 'block';
    eipPopupEls.layerEl.classList.add('eip-popup--show');
    // eipPopupEls.el.focus();

    const firstFocusEl = eipPopupEls.layerEl.querySelectorAll('a, button, input:not([type="hidden"]), textarea')[0];
    firstFocusEl.focus();

    layerPopupMaxHeight.reInit(eipPopupEls.layerEl);
    utilsShow();

    if (btn !== undefined) {
      eipPopupEls.parentEl = btn;
    }
  }

  function bindAdditionalEvent() {
    tabIndex = 0;
    selectItemIndex = 0;

    const selectTabEl = eipPopupEls.tabEl[tabIndex];
    const moDropdownEl = selectTabEl.querySelector('.eip-popup__tab--dropdown');
    const selectWrapEl = selectTabEl.querySelector('.eip-popup__tab--select-wrap');
    const tableWrapEl = selectTabEl.querySelector('.eip-popup__tab--table-wrap');
    const selectItemEls = selectTabEl.querySelectorAll('.eip-popup__tab--select-item');

    selectTabEl.classList.add('active');
    selectItemEls[selectItemIndex].classList.add('active');

    scrollbar.resize(selectWrapEl);
    scrollbar.resize(tableWrapEl);

    moDropdownEl.removeEventListener('click', dropdownEvent);
    moDropdownEl.addEventListener('click', dropdownEvent);

    selectWrapEl.querySelectorAll('.eip-popup__tab--select-item button').forEach((el) => {
      el.removeEventListener('click', selectItemEvent);
      el.addEventListener('click', selectItemEvent);
    });
  }

  function dropdownEvent(e) {
    const eTarget = $q(e.target);
    if (eTarget.hasClass('open')) {
      eTarget.removeClass('open');
      eTarget.closest('.eip-popup__tab').find('.eip-popup__tab--select-wrap').removeClass('open');
    } else {
      eTarget.addClass('open');
      eTarget.closest('.eip-popup__tab').find('.eip-popup__tab--select-wrap').addClass('open');
    }
  }

  function selectItemEvent(e){
    const eTarget = $q(e.target);
    eTarget.closest('.eip-popup__tab').find('.eip-popup__tab--select-item').removeClass('active');
    eTarget.closest('.eip-popup__tab--select-item').addClass('active');
    eTarget.closest('.eip-popup__tab').find('.eip-popup__tab--dropdown').target[0].innerHTML = eTarget.target[0].innerHTML;
    eTarget.closest('.eip-popup__tab').find('.eip-popup__tab--dropdown').removeClass('open');
    eTarget.closest('.eip-popup__tab').find('.eip-popup__tab--select-wrap').removeClass('open');
    selectItemIndex = eTarget.closest('.eip-popup__tab--select-item').index();
  }

  function resizeTableWrap() {
    scrollbar.resize(eipPopupEls.tabEl[tabIndex].querySelector('.eip-popup__tab--table-wrap'));
  }

  window.sg.components.eipPopup = { init, showPopup, bindAdditionalEvent, resizeTableWrap };

  $q.ready(init);
})();

(() => {
  const $q = window.sg.common.$q;
  const utils = window.sg.common.utils;
  const layerPopupMaxHeight = window.sg.common.layerPopupMaxHeight;
  const commonTab = window.sg.common.tab;

  const selector = {
    section: '.finance-popup',
    close: '.finance-popup .layer-popup__close',
    activeCls: 'is-active',
    tooltipOpenBtn: '.finance-popup__tooltip-btn',
    tooltipCloseBtn: '.finance-popup__tooltip-close-btn',
    placeholder: '.installment-select__placeholder',
    paymentSelect: '.installment-select',
    paymentSelectOptions: '.installment-select__options',
  };

  class FinancePopup {
    constructor(el) {
      this.els = {
        el,
        section: $q(el),
        financePopupContents: el.querySelector('.finance-popup .layer-popup__contents'),
        financePopupCloseBtn: el.querySelector('.layer-popup__close'),
        financePopup: el.querySelector('.finance-popup .layer-popup'),
      };

      this.handler = {
        tooltipOpen: this.tooltipOpen.bind(this),
        tooltipClose: this.tooltipClose.bind(this),
        activeSelect: this.activeSelect.bind(this),
        activeOption: this.activeOption.bind(this),
      };
      this.init();
    }


    init() {
      if(FinancePopup.instances.get(this.els.el)) {
        return;
      }
      FinancePopup.instances.set(this.els.el, this);
      this.setProperty();
      this.bindEvents();
      this.deviceOpen();
      layerPopupMaxHeight.init(this.els.financePopup);
    }

    reInit() {
      this.setProperty();
      this.bindEvents();
      this.deviceOpen();
      layerPopupMaxHeight.init(this.els.financePopup);
    }

    setProperty() {
      this.els.tooltipOpenBtn = this.els.section.find(selector.tooltipOpenBtn);
      this.els.tooltipCloseBtn = this.els.section.find(selector.tooltipCloseBtn);
      this.els.placeholder = this.els.section.find(selector.placeholder);
      this.els.paymentSelectOptions =  this.els.section.find(`${selector.paymentSelectOptions} li`);
    }

    tabInit(open = false) {
      if (open === true) {
        Array.from(this.els.el.querySelectorAll('.finance-popup__panel')).forEach((item) => {
          const $item = $q(item);
          $item.removeClass(selector.activeCls);
        });
        this.els.el.querySelectorAll('.finance-popup__panel')[0].classList.add(selector.activeCls);

        commonTab.init(this.els.el.querySelector('.tab'), 0);
        layerPopupMaxHeight.setMax(this.els.financePopup);
      }

      Array.from(this.els.el.querySelectorAll('.tab__item')).forEach((item, idx) => {
        const $item = $q(item).find('button');
        const activeIdx = idx;

        $item.off('click').on('click', () => {
          this.activeTab(activeIdx);
        });
      });
    }

    bindEvents() {
      this.els.financePopupCloseBtn.addEventListener('click', this.close.bind(this));

      $q(window).on('resize', () => {
        layerPopupMaxHeight.setMax(this.els.financePopup);
      });

      const closeBtn = document.querySelector(selector.close);
      closeBtn.removeEventListener('keydown', keydownCloseBtn);
      closeBtn.addEventListener('keydown', keydownCloseBtn);

      this.els.el.removeEventListener('keydown', keydownLayer);
      this.els.el.addEventListener('keydown', keydownLayer);

      this.els.tooltipOpenBtn.off('click', this.handler.tooltipOpen).on('click', this.handler.tooltipOpen);
      this.els.tooltipCloseBtn.off('click', this.handler.tooltipClose).on('click', this.handler.tooltipClose);

      if(this.els.el.querySelectorAll('.finance-popup__panel').length){
        this.tabInit();
      }

      if(this.els.placeholder) {
        this.els.placeholder.off('click', this.handler.activeSelect).on('click', this.handler.activeSelect);
      }
    }

    deviceOpen() {
      this.els.el.paymentSelectOptions = this.els.el.querySelectorAll(`${selector.paymentSelectOptions} li`);
      [...this.els.el.paymentSelectOptions].forEach((option) => {
        option.querySelector('a').removeEventListener('click', this.handler.activeOption);
        option.querySelector('a').addEventListener('click', this.handler.activeOption);
      });
    }

    activeSelect(event) {
      event.preventDefault();
      const eTarget = event.target.closest(selector.paymentSelect).querySelector(selector.placeholder);
      const itemSelect = eTarget.closest(selector.paymentSelect);
      if (!itemSelect.classList.contains('is-opened')) {
        this.openSelect(eTarget);
      } else {
        this.closeSelect(eTarget);
      }
    }

    openSelect(item) {
      const itemSelect = item.closest(selector.paymentSelect);
      const itemSelectOption = itemSelect.querySelector(selector.paymentSelectOptions);
      const globalText = JSON.parse(itemSelect.dataset.globalText);

      item.setAttribute('aria-expanded', true);
      item.querySelector('.hidden').innerText = globalText.Collapse;
      itemSelect.classList.add('is-opened');
      itemSelectOption.setAttribute('aria-hidden', false);

      /* P6 Modify => 그리는 시점과 이벤트 먹이는 시점이 안맞아서 0.3초 딜레이 */
      setTimeout(() => {
        this.els.el.paymentSelectOptions = this.els.el.querySelectorAll(`${selector.paymentSelectOptions} li`);
        [...this.els.el.paymentSelectOptions].forEach((option) => {
          option.querySelector('a').removeEventListener('click', this.handler.activeOption);
          option.querySelector('a').addEventListener('click', this.handler.activeOption);
        });
      }, 300);
    }

    closeSelect(item) {
      const itemSelect = item.closest(selector.paymentSelect);
      const itemSelectOption = itemSelect.querySelector(selector.paymentSelectOptions);
      const globalText = JSON.parse(itemSelect.dataset.globalText);

      item.setAttribute('aria-expanded', false);
      item.querySelector('.hidden').innerText = globalText.Expand;
      itemSelect.classList.remove('is-opened');
      itemSelectOption.setAttribute('aria-hidden', true);
    }

    activeOption(event) {
      event.preventDefault();
      const item = event.target.closest('li');
      const itemWrap = event.target.closest(selector.paymentSelect);

      itemWrap.querySelectorAll(`${selector.paymentSelectOptions} li`).forEach((li) => {
        li.classList.remove('is-selected');
      });
      item.classList.add('is-selected');
      if (!itemWrap.classList.contains('is-selected')) {
        itemWrap.classList.add('is-selected');
      }
      itemWrap.querySelector('.installment-select__placeholder-name span').innerText = item.querySelector('.finance-popup__installment-select__choose-name').textContent;

      this.activeSelect(event);
    }
    close() {
      this.els.el.style.display = 'none';

      utilsHide();

      if (utils.getMobileOS() === 'ios') {
        setTimeout(() => originFocus(this.focusTargetEl), 200);
      } else {
        originFocus(this.focusTargetEl);
      }
    }
    open(targetEl) {
      this.focusTargetEl = targetEl;
      this.els.el.style.display = 'block';
      if(this.els.el.querySelectorAll('.finance-popup__panel').length) {
        this.tabInit(true);
      }

      if (utils.getMobileOS() === 'ios') {
        setTimeout(() => utils.setFocusFirstFocusableEl(this.els.el), 200);
      } else {
        setTimeout(() => utils.setFocusFirstFocusableEl(this.els.el), 0);
      }

      utilsShow(this.els.el);
    }

    activeTab(idx) {
      Array.from(this.els.el.querySelectorAll('.finance-popup__panel')).forEach((tabEl, tabIdx) => {
        const $tabEl = $q(tabEl);

        if (tabIdx === idx) {
          $tabEl.addClass(selector.activeCls);
        } else {
          $tabEl.removeClass(selector.activeCls);
        }
      });

      layerPopupMaxHeight.setMax(this.els.financePopup);
    }

    tooltipOpen(e) {
      this.els.section.find('.finance-popup__tooltip').removeClass('finance-popup__tooltip--show');
      this.els.section.find('.finance-popup__tooltip').removeClass('finance-popup__tooltip--left');
      $q(e.target).closest('.finance-popup__tooltip').addClass('finance-popup__tooltip--show');

      const tooltipX = utils.isRtl() ? this.els.section.find('.finance-popup__content').target[0].getBoundingClientRect().right - $q(e.target).closest('.finance-popup__tooltip').find('.finance-popup__tooltip-box').target[0].getBoundingClientRect().right : $q(e.target).closest('.finance-popup__tooltip').find('.finance-popup__tooltip-box').target[0].getBoundingClientRect().left - this.els.section.find('.finance-popup__content').target[0].getBoundingClientRect().left;
      
      if(tooltipX <= 0) {
        $q(e.target).closest('.finance-popup__tooltip').addClass('finance-popup__tooltip--left');
      }
    }

    tooltipClose(e) {
      $q(e.target).closest('.finance-popup__tooltip').removeClass('finance-popup__tooltip--show');
      $q(e.target).closest('.finance-popup__tooltip').removeClass('finance-popup__tooltip--left');
    }
  }

  FinancePopup.instances = new WeakMap();

  function keydownLayer(evt) {
    if (evt.shiftKey && window.sg.common.constants.KEY_CODE.TAB === evt.keyCode) {
      const firstEl = document.querySelector(`${selector.section}`)
        .querySelectorAll('a, button, input:not([type="hidden"]), textarea')[0];

      if (firstEl && evt.target === firstEl) {
        evt.preventDefault();
        document.querySelector(`${selector.close}`).focus();
      }
    }
  }

  function keydownCloseBtn(evt) {
    if (!evt.shiftKey && window.sg.common.constants.KEY_CODE.TAB === evt.keyCode) {
      evt.preventDefault();

      document.querySelector(`${selector.section}`)
        .querySelectorAll('a, button, input:not([type="hidden"]), textarea')[0].focus();
    }
  }

  function originFocus(focusTargetEl) {
    if (focusTargetEl && focusTargetEl  instanceof Element) {
      focusTargetEl.focus();
    } else {
      utils.buyingFocus('financePopup');
    }
  }

  function utilsShow(popupEl) {
    utils.popupControl.open(closePopup);
    utils.hiddenScroll();
    utils.setMobileFocusLoop(popupEl);
  }

  function utilsHide() {
    utils.popupControl.close();
    utils.visibleScroll();
    utils.removeMobileFocusLoop();
  }

  function showPopup(targetEl = null) {
    FinancePopup.instances.get(document.querySelector(selector.section)).open(targetEl);
  }

  function closePopup() {
    FinancePopup.instances.get(document.querySelector(selector.section)).close();
  }

  const financePopup = {
    initAll() {
      [...document.querySelectorAll(selector.section)].forEach((el) => {
        if (!FinancePopup.instances.has(el)) {
          new FinancePopup(el);
        }
      });
    },
    showPopup,
    reInit() {
      document.querySelectorAll(selector.section).forEach((el) => {
        if (FinancePopup.instances.has(el)) {
          FinancePopup.instances.get(el).reInit();
        } else {
          new FinancePopup(el);
        }
      });
    },
  };

  window.sg.components.financePopup = financePopup;

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', financePopup.initAll);
  } else {
    financePopup.initAll();
  }
})();

(function ($) {

	const Monthly_I18N = Granite.I18n.get("Monthly payment");
	const Cost_I18N = Granite.I18n.get("Cost of purchase");
	const Instalment_I18N = Granite.I18n.get("Instalment rate");
	const Total_I18N = Granite.I18n.get("Total cost inc. interest");
	const Instant_I18N = Granite.I18n.get("Instant decision at checkout");

	let storeDomain = $("#storeDomain").val();
	const siteCode = $("#siteCode").val();
	const priceCurrency = $("#tempTitle").val() == "page-pf" ? $("#pfPriceCurrency").val() : $("#priceCurrency").val();
	
	//calculateInstallment API를 호출하는 대상 국가가 추가되는 경우에 siteCode추가 
	const calculateInstallmentList = ["uk", "ee", "lv", "lt", "pl", "hu", "es", "ro", "ua","nz","sg","my","ph","vn","th","sk","cz","cn"]; 
	const calculateInstallmentSet = new Set(calculateInstallmentList);
	const isCalculateInstallment = calculateInstallmentSet.has(siteCode);

	
	// b2b 분기 추가
	const isB2B = $("#b2bFlag").val() === "Y" ? true : false;
	/**
	 * 각 국가의 code 별 Description html
	 */
	var emiDescEachSiteCode = function(siteCode, code, descriptionText){
		var descriptionHtml = "";

		if(!code){
			return "";
		}

		var lowerCode = code.toLowerCase();
		if(siteCode == "id"){ //new-hybris
			/* TODO id 요건에 맞게 추가 예정 */
		}else if(siteCode == "uk" && isB2B){
			//COMP6FE-1590 [SMB] Financing Calculator& Leasing
			descriptionHtml +=  '<div class="finance-popup__description">'+
									'<p>The Representative Example below shows the typical costs of using Samsung Finance to purchase your Samsung products: <strong>0.0% APR Representative (fixed)</strong>. Based on an initial 10% deposit of <strong>£76.90</strong>, and an assumed credit totaling <strong>£692.10</strong> over <strong>12 months</strong> at an interest rate of <strong>0.0% p.a. (fixed).</strong> Monthly repayment <strong>£57.67</strong>. Total amount payable <strong>£769.00</strong>.</p>'+
								'</div>'+
								'<div class="finance-popup__disclaimer">'+
									'<p>*All credit is subject to status and available to UK Sole Traders over 18, with a UK bank account and valid driver’s license, passport or identity card. The displayed quote is VAT inclusive, final estimates are made upon checkout.</p>'+
									'<br><p>Credit duration is variable, and you could be offered a rate of 9.9% APR, based on your financial circumstances and what you tell us. Minimum upfront payment of 10% is required and fixed monthly repayments. By accepting our credit offer, you consent to a credit check being completed, which will appear on your credit file.</p>'+
								'</div>'+
								'<div class="finance-popup__credit">'+
									'<div class="finance-popup__credit-img">'+
										'<img src="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/logo-samsung-finance.png" alt="Samsung Finance">'+
									'</div>'+
									'<div class="finance-popup__credit-text">'+
										'Samsung Electronics (UK) Limited (Registered no: 03086621), registered at Samsung House, 2000 Hillswood Drive, Chertsey, Surrey KT16 0RS, United Kingdom, acts as a credit broker and not as a lender. Samsung is authorised and regulated by the Financial Conduct Authority (FRN 727333). Credit is provided by Glow Financial Services Limited, 71 Queen Victoria Street, London EC4V 4BE. Registered in England No. 09127663. Glow Financial Services Limited is authorised and regulated by the Financial Conduct Authority (Reference No. 751308). Glow Financial Services acting as lender, under brand license as Samsung Finance (powered by Glow) through Samsung Electronics (UK) Limited. The Financial Services Register can be accessed through <a href="http://www.fca.org.uk" target="_blank" aria-label="www.fca.org.uk Open in a New Window">www.fca.org.uk</a>.'+
									'</div>'+
								'</div>';
		}else if(siteCode == "uk"){
			if(lowerCode == "uk-paypalcreditpaymentmode"){
				descriptionHtml +=  '<div class="finance-popup__description">'+
										'<strong>What is the cost of PayPal Credit outside of promotional offers?</strong>'+
										'<p>The Representative Example below shows the typical costs of using a PayPal Credit Limit, without using <br>promotional offers:</p>'+
										'<p><b>Representative example:</b></p>'+
										'<p><b>Purchase Rate: 23.9 % p.a. (variable)</b></p>'+
										'<p><b>Representative: 23.9 % APR (variable)</b></p>'+
										'<p><b>Assumed credit limit: £1,200.00</b></p>'+
										'<p><i>Subject to credit status and T&C’s</i></p>'+
									'</div>'+
									'<div class="finance-popup__credit">'+
										'<div class="finance-popup__credit-img">'+
											'<img src="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/logo-paypal-credit.png" alt="paypal credit">'+
										'</div>'+
										'<div class="finance-popup__credit-text">'+
											'Subject to status and credit approval. Finance provided by PayPal Credit. S amsung Electronics (UK) Limited acts as a broker and offers finance from a limited number of providers. PayPal Credit and PayPal Pay in 3 are trading names of PayPal UK Ltd, Whittaker House, Whittaker Avenue, Richmond-Upon-Thames, Surrey, United Kingdom, TW9 1EH. Please be aware that late or missing repayments may also affect your credit rating, which could make it more difficult or expensive for you to obtain credit in the future. T&Cs apply.'+
										'</div>'+
									'</div>';
				
			}else if(lowerCode == "uk-klarnathreeinstallmentspaymentmode" || lowerCode == "uk-klarnasliceitpaymentmode"){
				descriptionHtml +=  '<div class="finance-popup__description">'+
					                	'<p>'+
						                'Representative Example without 0% or 9.90% offers: Representative 14.9% APR (variable)<br>'+
						                'Purchase interest rate 14.9%p.a (variable) Assumed credit limit £1,200*<br>'+
						                'Displayed quote is not generated by Klarna, final estimates are made upon checkout.'+
						                '</p>'+
					                '</div>'+
					                '<div class="finance-popup__credit">'+
						                '<div class="finance-popup__credit-img">'+
						                	'<img src="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/logo-klarna.png" alt="Klarna slice it">'+
						                '</div>'+
						                '<div class="finance-popup__credit-text">'+
					                	'*Subject to financial circumstances. You must be at least 18. Credit is provided by Klarna Bank AB, which is authorised and regulated by the Swedish Financial Services Authority, with limited supervision by the Financial Conduct Authority and Prudential Regulation Authority in the UK. Registered office: Sveavägen 46, 111 34 Stockholm, Sweden. Corporation ID number: 556737-0431. If you already have a Klarna Credit account, this purchase will be added to your balance. In case of partial approval, a down payment may be required. <a href="https://cdn.klarna.com/1.0/shared/content/legal/terms/0/en_gb/account_agreement" target="_blank" aria-label="T&Cs apply Open in a New Window">T&Cs apply.</a>'+
						                '</div>'+
					                '</div>';
			}else if(lowerCode == "uk-glowpaymentmode"){
				descriptionHtml +=  '<div class="finance-popup__description">'+
										'<p>The Representative Example below shows the typical costs of using Samsung Finance to purchase your Samsung products: <strong>0.0% APR Representative (fixed)</strong>. Based on an initial 10% deposit of <strong>£76.90</strong>, and an assumed credit totaling <strong>£692.10</strong> over <strong>12 months</strong> at an interest rate of <strong>0.0% p.a. (fixed).</strong> Monthly repayment <strong>£57.67</strong>. Total amount payable <strong>£769.00</strong>.</p>'+
									'</div>'+
									'<div class="finance-popup__disclaimer">'+
										'<p>*All credit is subject to status and available to UK residents over 18, with a UK bank account and valid driver’s license, passport or identity card. Credit duration is variable, and you could be offered a rate of 9.9% APR, based on your financial circumstances and what you tell us. Minimum upfront payment of 10% is required and fixed monthly repayments. By accepting our credit offer, you consent to a credit check being completed, which will appear on your credit file.</p>'+
									'</div>'+
									'<div class="finance-popup__credit">'+
										'<div class="finance-popup__credit-img">'+
											'<img src="/etc.clientlibs/samsung/clientlibs/consumer/global/clientlib-common/resources/images/logo-samsung-finance.png" alt="Samsung Finance">'+
										'</div>'+
										'<div class="finance-popup__credit-text">'+
											'Samsung Electronics (UK) Limited (Registered no: 03086621), registered at Samsung House, 2000 Hillswood Drive, Chertsey, Surrey KT16 0RS, United Kingdom, acts as a credit broker and not as a lender. Samsung is authorised and regulated by the Financial Conduct Authority (FRN 727333). Credit is provided by Glow Financial Services Limited, 71 Queen Victoria Street, London EC4V 4BE. Registered in England No. 09127663. Glow Financial Services Limited is authorised and regulated by the Financial Conduct Authority (Reference No. 751308). Glow Financial Services acting as lender, under brand license as Samsung Finance (powered by Glow) through Samsung Electronics (UK) Limited. The Financial Services Register can be accessed through <a href="http://www.fca.org.uk" target="_blank" aria-label="www.fca.org.uk Open in a New Window">www.fca.org.uk</a>.'+
										'</div>'+
									'</div>';
			}
		} else if(siteCode == "ee" || siteCode ==  "lv" || siteCode ==  "lt" || siteCode == "pl" || siteCode == "hu" || siteCode == "ro" || siteCode == "ua" || siteCode == "nz" || siteCode == "sg" || siteCode == "my" || siteCode == "ph" || siteCode == "vn" || siteCode == "sk" || siteCode == "cz" || siteCode == "cn"){
			descriptionHtml +=  '<div class="finance-popup__description">'+
									'<p>'+
										descriptionText+
									'</p>'+
								'</div>';
			
		}
		
		
		return descriptionHtml;
	}

	function emiDataGrid(values, siteCode) {
		//COMP6FE-1590 [SMB] Financing Calculator& Leasing
		if(isB2B && siteCode ==='uk'){
			values = values.filter(list => list.code === 'uk-glowFinancePaymentMode');
		}
		var tabHtml = "";
		var contentHtml = "";
		var $eipArea = $(".finance-popup");
		var $contentArea = $eipArea.find(".finance-popup__content");
		var reg = /[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/ ]/gim; //특수문자 공백 제거 정규식
		
		/* content영역 remove */
		if($contentArea.length > 0){
			$contentArea.children().remove();
		}
		/* Tab 전체 틀 */
		tabHtml += 	'<div class="tab">';
		tabHtml += 		'<ul class="tab__list" role="tablist">';

		for(var idx=0; idx<values.length; idx++){
			/* 하나의 탭 data */
			var tabData = values[idx];
			const tabNameOnlyText = tabData.name?tabData.name.replace(reg, ""):'';
			tabHtml += '<li class="tab__item" role="presentation">';
			tabHtml += '	<button class="tab__item-title" role="tab" aria-controls="tabPanel'+tabNameOnlyText+'">';
			tabHtml += 			tabData.name;
			tabHtml += '		<span class="tab__item-line"></span>';
			tabHtml += '	</button>';
			tabHtml += '</li>';
			
			if(idx==0){
				contentHtml += 	'<div class="finance-popup__panel is-active" role="tabpanel" id="tabPanel'+tabNameOnlyText+'">'; 
			}else{
				contentHtml += 	'<div class="finance-popup__panel" role="tabpanel" id="tabPanel'+tabNameOnlyText+'">';
			}
			contentHtml +=  	'<h3 class="hidden">'+tabData.name+'</h3>'+
								'<div class="finance-popup__site-content">'+
								'<div class="finance-popup__box-wrap">';
			
			if(siteCode === "uk" && isB2B){
				//COMP6FE-1590 [SMB] Financing Calculator& Leasing
				contentHtml += 	'<div class="finance-popup__additional">'+
									'<strong class="finance-popup__additional-title">Business essentials on demand</strong>'+
									'<div class="finance-popup__additional-content">'+
										'<p>Discover flexible ways to pay for the Samsung products you need to make your business run effectively.</p>'+
									'</div>'+
								'</div>';

			}else if(siteCode == "uk" && tabData.code.toLowerCase() == "uk-glowpaymentmode"){
				contentHtml += 	'<div class="finance-popup__additional">'+
									'<strong class="finance-popup__additional-title">See it. Love it. Spread the cost.</strong>'+
									'<div class="finance-popup__additional-content">'+
										'<p>Discover flexible ways to pay for your favourite Samsung products</p>'+
										'<p>Pay as little as <strong>10%</strong> upfront and the balance with interest-free credit*</p>'+
									'</div>'+
								'</div>';
			}
			
			var descriptionText = "";
			/* content data Grid */
			if(tabData.values && tabData.values.length > 0){
				contentHtml += 	'<div class="finance-popup__box-list" role="list">';
							
				for(var jdx=0; jdx<tabData.values.length; jdx++){
					var contentData = tabData.values[jdx];
					
					if(siteCode == "uk" || siteCode == "ro" || siteCode == "ua" || siteCode == "nz" || siteCode == "sg" || siteCode == "my" || siteCode == "ph" || siteCode == "vn" || siteCode == "cn"){
						contentHtml += 	'<div class="finance-popup__box" role="listitem">'+
											'<strong class="finance-popup__box-title">'+(siteCode == "ro" ? contentData.periodLabel+' rate' :
																						 siteCode == "nz" ? contentData.code+' '+contentData.period :
																						 siteCode == "ua" ? contentData.code + " місяців" :
																						 contentData.code)+'</strong>'+
											'<div class="finance-popup__box-payment" role="list">'+
												'<p class="finance-popup__box-payment-price" role="listitem">'+(siteCode == "ro" ? currencyComma(contentData.monthlyContractFee,priceCurrency) : contentData.periodicValue)+'</p>'+
												'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Monthly payment")+'</p>'+
											'</div>'+
											'<div class="finance-popup__box-payment" role="list">'+
												'<p class="finance-popup__box-payment-price" role="listitem">'+(siteCode == "ro" ? currencyComma(contentData.purchaseCost,priceCurrency) : contentData.purchaseCost)+'</p>'+
												'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Cost of purchase")+'</p>'+
											'</div>'+
											'<div class="finance-popup__box-payment" role="list">'+
												'<p class="finance-popup__box-payment-price" role="listitem">'+((siteCode == "uk" || siteCode == "nz") ? contentData.interestRate+' %p.a. (fixed)' : (siteCode=="ro" || siteCode=="ua") ? parseInt(contentData.totalInterest)+'%' : contentData.interestRate+'%')+'</p>'+
												'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Instalment rate")+'</p>'+
											'</div>'+
											'<div class="finance-popup__box-payment" role="list">'+
												'<p class="finance-popup__box-payment-price" role="listitem">'+(siteCode == "ro" ? currencyComma(contentData.totalCost,priceCurrency) : contentData.totalCost)+'</p>'+
												'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Total cost inc. interest")+'</p>'+
											'</div>'+
											(siteCode == "uk" ? '<p class="finance-popup__box-description">'+Granite.I18n.get("Instant decision at checkout")+'</p>' : '')+
										'</div>';	//.finance-popup__box End
					}else if(siteCode == "ee" || siteCode == "lv" || siteCode == "lt" || siteCode == "pl" || siteCode == "hu" || siteCode == "sk"  || siteCode == "cz"){
						contentHtml += 	'<div class="finance-popup__box" role="listitem">';
						if((siteCode == "sk" || siteCode == "cz") && (contentData.periodLabel !== null && contentData.periodLabel !== undefined && contentData.periodLabel !== "")){
							contentHtml += 	'    <div class="finance-popup__box-title-wrap">';
						}
						
						if(contentData.period !== null && contentData.period !== undefined && contentData.period !== "" && contentData.code !== null && contentData.code !== undefined && contentData.code !== "" && contentData.apr !== null && contentData.apr !== undefined && contentData.apr !== "") {
							if(contentData.period == "MONTHLY") {
								if(contentData.periodLabel !== null && contentData.periodLabel !== undefined && contentData.periodLabel !== "") {
									//periodLabel이 영문인 Months로 오는 경우는 i18n처리 Months가 아닌 경우 즉, 로컬어인 경우는 그대로 노출
									if(contentData.periodLabel == "Months") {
										contentHtml += '<strong class="finance-popup__box-title">'+contentData.code+' '+Granite.I18n.get("Months")+'</strong>';
									} else {
										contentHtml += '<strong class="finance-popup__box-title">'+contentData.code+' '+contentData.periodLabel+'</strong>';
									}
								} else {
									contentHtml += '	<strong class="finance-popup__box-title">'+contentData.code+' '+Granite.I18n.get("Months")+'</strong>';
								}
							} else {
								if(siteCode == "sk" || siteCode == "cz") {
									contentHtml += '		<strong class="finance-popup__box-title">'+contentData.period+'</strong>';
								} else if(siteCode != "sk" && siteCode != "cz") {
									contentHtml += '		<strong class="finance-popup__box-title">'+contentData.code+' '+contentData.periodLabel+'</strong>';
								}
							}
						} else if(contentData.period !== null && contentData.period !== undefined && contentData.period !== "" && contentData.code !== null && contentData.code !== undefined && contentData.code !== "") {
							//CRHQ-9494 [B2C] hu EMI(finance) 팝업내 정보 변경
							if(siteCode == "hu") {
								contentHtml += '<strong class="finance-popup__box-title">'+contentData.code+' '+'hónap futamidő</strong>';
							}
						}
						
						
						//sk, cz tooltip (NOTICE : 다른 국가도 동일 요소를 툴팁으로 사용하는 경우에는 siteCode만 OR조건으로 추가하면 되나 다른 요소일때는 별도 분기구조를 고려 해야 함. ) 
						if(siteCode == "sk"  || siteCode == "cz"){
							if(contentData.periodLabel !== null && contentData.periodLabel !== undefined && contentData.periodLabel !== "") {
								contentHtml += 	'<div class="finance-popup__tooltip">';
								contentHtml += 	'    <button class="finance-popup__tooltip-btn">';
								contentHtml += 	'        <span class="hidden"></span>';
								contentHtml += 	'            <svg class="icon finance-popup__tooltip-icon" focusable="false" aria-hidden="true">';
								contentHtml += 	'            <use xlink:href="#icon-info-bold" href="#icon-info-bold"></use>';
								contentHtml += 	'            </svg>';
								contentHtml += 	'    </button>';
								contentHtml += 	'    <div class="finance-popup__tooltip-box">';
								contentHtml += 	'        <div class="finance-popup__tooltip-box-text">'+contentData.periodLabel+'</div>';
								contentHtml += 	'        <button class="finance-popup__tooltip-close-btn">';
								contentHtml += 	'            <span class="hidden"></span>';
								contentHtml += 	'            <svg class="icon finance-popup__tooltip-close-icon" focusable="false" aria-hidden="true">';
								contentHtml += 	'                <use xlink:href="#delete-bold" href="#delete-bold"></use>';
								contentHtml += 	'            </svg>';
								contentHtml += 	'        </button>';
								contentHtml += 	'    </div>';
								contentHtml += 	'</div>';
							}
						}

						if((siteCode == "sk" || siteCode == "cz") && (contentData.periodLabel !== null && contentData.periodLabel !== undefined && contentData.periodLabel !== "")){
							contentHtml += 	'</div>'; //finance-popup__box-title-wrap 닫는태그
						}
						
						if(contentData.purchaseCost !== null && contentData.purchaseCost !== undefined && contentData.purchaseCost !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.purchaseCost+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Amount to be financed")+'</p>'+
														'</div>';
						}
						if(contentData.periodicValue !== null && contentData.periodicValue !== undefined && contentData.periodicValue !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.periodicValue+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Monthly payment")+'</p>'+
														'</div>';
						}
						if(contentData.interestRate !== null && contentData.interestRate !== undefined && contentData.interestRate !== "") {
							if(siteCode == "hu") {
								//only hu 
								contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
								'<p class="finance-popup__box-payment-price" role="listitem">'+(contentData.interestRate*100).toFixed(2)+'%</p>'+
								'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Fixed annual interest rate")+'</p>'+
							'</div>';

							} else {
								//기존 로직 
								contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
								'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.interestRate+'</p>'+
								'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Fixed annual interest rate")+'</p>'+
							'</div>';

							}
						}
						if(contentData.annualContractFee !== null && contentData.annualContractFee !== undefined && contentData.annualContractFee !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.annualContractFee+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Contract award fee")+'</p>'+
														'</div>';
						}
						if(contentData.monthlyContractFee !== null && contentData.monthlyContractFee !== undefined && contentData.monthlyContractFee !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.monthlyContractFee+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Monthly contract fee")+'</p>'+
														'</div>';
						}
						if(contentData.apr !== null && contentData.apr !== undefined && contentData.apr !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.apr+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Annual percentage rate of charge for consumer credit")+'</p>'+
														'</div>';
						}
						if(contentData.totalCost !== null && contentData.totalCost !== undefined && contentData.totalCost !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.totalCost+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Total amount payable")+'</p>'+
														'</div>';
						}
						if(contentData.code !== null && contentData.code !== undefined && contentData.code !== "") {
							if(siteCode == "sk" || siteCode == "cz") {
								contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
								'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.period+'</p>'+
								'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Term of the contract")+'</p>'+
								'</div>';
							} else if(siteCode != "sk" && siteCode != "cz") {
								contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
								'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.code+'</p>'+
								'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Term of the contract")+'</p>'+
								'</div>';
							}
						}
						if(contentData.downPayment !== null && contentData.downPayment !== undefined && contentData.downPayment !== "") {
							contentHtml += 				'<div class="finance-popup__box-payment" role="list">'+
															'<p class="finance-popup__box-payment-price" role="listitem">'+contentData.downPayment+'</p>'+
															'<p class="finance-popup__box-payment-text" role="listitem">'+Granite.I18n.get("Downpayment")+'</p>'+
														'</div>';
						}
						
						contentHtml += 			'</div>';	//.finance-popup__box End
						
					}
					if(jdx == tabData.values.length-1){
						if(siteCode == "ee"){
							descriptionText = 	'Tähelepanu, tegemist on finantsteenusega! Inbank järelmaksu krediidikulukuse määr on '+contentData.interestRate+'% aastas järgmistel näidistingimustel: '+
												'lepingueseme hind kohe tasudes (netohind) '+contentData.purchaseCost+', krediidisumma '+contentData.totalCost+', sissemakse '+contentData.downPayment+' , lepinguperiood '+contentData.code+' kuud, fikseeritud intressimäär aastas '+contentData.interestRate+'% arvestatuna ostusummalt, lepingutasu '+contentData.annualContractFee+', igakuine haldustasu '+contentData.monthlyContractFee+'. '+
												'Igakuine osamakse '+contentData.periodicValue+', krediidi kogusumma ja tagasimaksete summa '+contentData.totalCost+'. '+ 
												'Finantsteenuse osutajaks on AS Inbank Finance (Niine 11, Tallinn, www.inbank.ee, tel 640 8080). Enne lepingu sõlmimist tutvu tingimustega ja vajadusel pea nõu.';
						} else if(siteCode == "lv") {
							descriptionText = 	'Reprezentatīvs piemērs:<br>'+
												'Aizdevuma summa - '+contentData.purchaseCost+', līguma termiņš – '+contentData.code+' mēn., procentu likme - '+contentData.interestRate+'%, noformēšanas maksa - '+contentData.annualContractFee+' , ikmēneša apkalpošanas maksa – '+contentData.monthlyContractFee+' , ikmēneša maksājums – '+contentData.periodicValue+' , kopējā atmaksājamā summa – '+contentData.totalCost+' , gada procentu likme (GPL) - '+contentData.apr+'%.<br>'+
												'Kalkulatora aprēķinātie dati ir informatīvi un sniedz aptuvenu priekšstatu. Informācija var mainīties balstoties uz Jūsu maksātspēju vai izvēloties citu līguma termiņu un maksājuma datumu.';
						} else if(siteCode == "lt") {
							descriptionText = 	'Pavyzdžiui, skolinantis '+contentData.purchaseCost+' , kai sutartis sudaroma '+contentData.code+' mėn. terminui, metinė palūkanų norma – '+contentData.interestRate+'%, sutarties sudarymo mokestis - '+contentData.annualContractFee+' , mėnesio sutarties mokestis – '+contentData.monthlyContractFee+' , BVKKMN – '+contentData.apr+'%, bendra mokėtina suma – '+contentData.totalCost+' , mėnesio įmoka – '+contentData.periodicValue+'.';
						} else if(siteCode == "pl") {
							if(!checkEppSite() && !isB2B) {
								//only B2C (CRHQ-1026 [B2C] PL - EMI 팝업 내 disclaimer 변경)
								descriptionText = 	`**Przykłady reprezentatywne
									<br><br><br>
									"Raty 20x0%"
									<br><br>
									Dla kredytu na zakup towarów i usług oferowanego przez Santander Consumer Bank S.A. z siedzibą we Wrocławiu, dla propozycji „20 rat 0%” wyliczenia na podstawie przykładu reprezentatywnego na dzień 04.01.2024 r.
									są następujące: cena towaru 4700 zł, stała stopa oprocentowania kredytu: 0%, całkowity koszt kredytu: 0 zł, Rzeczywista Roczna Stopa Oprocentowania (RRSO) 0%, całkowita kwota kredytu: 4700 zł; czas obowiązywania umowy: 20 miesięcy; całkowita kwota do zapłaty 4700 zł; wysokość 20 miesięcznych równych rat 235 zł.
									Propozycja obowiązuje dla umów zawartych od 08.04.2024 do 30.06.2024 r.
									<br><br>
									Niniejsza propozycja nie jest ofertą w rozumieniu art. 66 Kodeksu Cywilnego. Decyzja o przyznaniu i warunkach kredytu z uwzględnieniem oceny aktualnej sytuacji Klienta zostanie podjęta przez Bank. Szczegóły na www.samsung.com oraz www.santanderconsumer.pl. Samsung Electronics Polska Sp. z o.o. występujący w roli pośrednika kredytowego informuje swoich Klientów o możliwości skorzystania z propozycji kredytu na zakup towarów i usług oferowanego przez Santander Consumer Bank S.A., udostępnia swoim Klientom wniosek o kredyt na zakup towarów i usług oraz przyjmuje oświadczenia o odstąpieniu od umów o kredyt na zakup towarów i usług zawartych przez Santander Consumer Bank S.A. za pośrednictwem Samsung Electronics Polska Sp. z o.o.
									<br><br><br>
									"Do 60 rat"
									<br><br>
									Dla kredytu na zakup towarów i usług oferowanego przez Santander Consumer Bank S.A. z siedzibą we Wrocławiu, dla propozycji „Do 60 rat” wyliczenia na podstawie przykładu reprezentatywnego na dzień 07.02.2024 r. są następujące: cena towaru 3700 zł, stała stopa oprocentowania kredytu: 18,50%, całkowity koszt kredytu: 585,22 zł obejmuje: prowizję: 185 zł, odsetki: 400,22 zł, Rzeczywista Roczna Stopa Oprocentowania (RRSO) 31,91%, całkowita kwota kredytu (bez kredytowanych kosztów): 3700 zł; czas obowiązywania umowy: 12 miesięcy; całkowita kwota do zapłaty 4285,22 zł; wysokość 11 miesięcznych równych rat 357,10 zł; ostatnia 12 rata w wysokości 357,12 zł.      
									<br><br>
									Niniejsza propozycja nie jest ofertą w rozumieniu art. 66 Kodeksu Cywilnego. Decyzja o warunkach i przyznaniu kredytu z uwzględnieniem oceny aktualnej sytuacji Klienta, zostanie podjęta przez Santander Consumer Bank S.A. Szczegóły na www.santanderconsumer.pl.
									<br><br>
									Samsung Electronics Polska Sp. z o.o. występujący w roli pośrednika kredytowego informuje swoich Klientów o możliwości skorzystania z propozycji kredytu na zakup towarów i usług oferowanego przez Santander Consumer Bank S.A., udostępnia swoim Klientom wniosek o kredyt na zakup towarów i usług oraz przyjmuje oświadczenia o odstąpieniu od umów o kredyt na zakup towarów i usług  zawartych przez Santander Consumer Bank S.A. za pośrednictwem Samsung Electronics Polska Sp. z o.o.`;
							} else {
								//B2C외 (B2B 또는 EPP)
								descriptionText = 	`Przykłady reprezentatywne
									<br><br><br>
									"Raty 20x0%"
									<br><br>
									Dla kredytu na zakup towarów i usług oferowanego przez Santander Consumer Bank S.A. z siedzibą we Wrocławiu, dla propozycji „20 rat 0%” wyliczenia na podstawie przykładu reprezentatywnego na dzień 01.07.2023 r. są następujące: cena towaru 4800 zł, stała stopa oprocentowania kredytu: 0%, całkowity koszt kredytu: 0 zł, Rzeczywista Roczna Stopa Oprocentowania (RRSO) 0%, całkowita kwota kredytu: 4800 zł; czas obowiązywania umowy: 20 miesięcy; całkowita kwota do zapłaty 4800 zł; wysokość 20 miesięcznych równych rat 240 zł. Propozycja obowiązuje dla umów zawartych od 03.07.2023 do 31.12.2023 r.<br>
									Niniejsza propozycja nie jest ofertą w rozumieniu art. 66 Kodeksu Cywilnego. Decyzja o przyznaniu i warunkach kredytu z uwzględnieniem oceny aktualnej sytuacji Klienta zostanie podjęta przez Bank. Szczegóły na www.santanderconsumer.pl<br>
									Samsung Electronics Polska Sp. z o.o. występujący w roli pośrednika kredytowego Santander Consumer Bank S.A., udostępnia swoim Klientom wniosek o kredyt na zakup towarów i usług oraz przyjmuje oświadczenia o odstąpieniu od umów o kredyt.<br>
									<br><br><br>
									"Do 60 rat"
									<br><br>
									Dla kredytu na zakup towarów i usług oferowanego przez Santander Consumer Bank S.A. z siedzibą we Wrocławiu, dla propozycji „Do 60 rat” wyliczenia na podstawie przykładu reprezentatywnego na dzień 15.02.2023 r. są następujące: cena towaru 2800 zł, stała stopa oprocentowania kredytu: 19%, całkowity koszt kredytu: 402,05 zł obejmuje: prowizję: 140 zł, odsetki: 262,05 zł, Rzeczywista Roczna Stopa Oprocentowania (RRSO) 34,76%, całkowita kwota kredytu (bez kredytowanych kosztów): 2800 zł; czas obowiązywania umowy: 10 miesięcy; całkowita kwota do zapłaty 3202,05 zł; wysokość 9 miesięcznych równych rat 320,21 zł; ostatnia 10 rata w wysokości 320,16 zł.<br>
									Niniejsza propozycja nie jest ofertą w rozumieniu art. 66 Kodeksu Cywilnego. Decyzja o przyznaniu i warunkach kredytu z uwzględnieniem oceny aktualnej sytuacji Klienta zostanie podjęta przez Bank. Szczegóły na www.santanderconsumer.pl<br>
									Samsung Electronics Polska Sp. z o.o. występujący w roli pośrednika kredytowego Santander Consumer Bank S.A., udostępnia swoim Klientom wniosek o kredyt na zakup towarów i usług oraz przyjmuje oświadczenia o odstąpieniu od umów o kredyt.`;
							}
						} else if(siteCode == "hu") {
							descriptionText = `A részletfizetésről bővebb tájékoztatást a <a href="https://www.samsung.com/hu/campaign/cofidis-instalment-payment/" target="_blank" title="Open in a new window">Cofidis Áruhitel</a> oldalon találsz.`;
						} else if(siteCode == "ro") {
							descriptionText = `Exemplu reprezentantiv de calcul:<br><br>
												Pentru un Contract de Credit prin acordarea si utilizarea Liniei de Credit in vederea unei achizitii de Bunuri/Servicii cu Asigurare de Viata in valoare de 5,000 lei, rambursata in 24 luni, rata anuala a dobanzii este 0%, comisionul de analiza a dosarului este de 95 lei, prima de asigurare de viata este de 244.56 lei, rata lunara este de 222.48 lei, valoarea totala platibila este de 5,339.56 lei si dobanda anuala efectiva (DAE) este de 1.74%. Comision adminstrare lunara a creditui: 5 lei/luna. Prezenta oferta se aplica in cazul in care nu se efectueaza nicio alta tranzactie pana la rambursarea integrala a creditului, iar fiecare rata lunara este achitata integral de catre client. Credit oferit de tbi bank
												<br><br>
												Exemplu reprezentativ de calcul:<br><br>
												Pentru un Contract de Credit prin acordarea si utilizarea Liniei de Credit in vederea unei achizitii de Bunuri/Servicii cu Asigurare de Viata in valoare de 2,500 lei, rambursata in 24 luni, rata anuala a dobanzii este 29%, comisionul de analiza a dosarului este de 95 lei, prima de asigurare de viata este de 124.56 lei, rata lunara este de 150.66 lei, valoarea totala platibila este de 3,615.89 lei si dobanda anuala efectiva (DAE) este de 38.31%. Comision adminstrare lunara a creditui: 5 lei/luna. Prezenta oferta se aplica in cazul in care nu se efectueaza nicio alta tranzactie pana la rambursarea integrala a creditului, iar fiecare rata lunara este achitata integral de catre client. Credit oferit de tbi bank`;
						} else if(siteCode == "sg"){
							descriptionText = `We have interest-free monthly instalment options of varying tenures. Monthly amount above is only a representative example over 36-month period & is based on the Recommended Retail Price. This is available using OCBC or UOB credit cards when the checkout value is above $500 at https://shop.samsung.com/sg. Instalment is not available for purchases with trade-in.`;
						} else if(siteCode == "my"){
							descriptionText = `*The displayed quote above is an estimation only. The final installment details will be made available at checkout page.
												<br><br>
												0% interest instalment is a repayment scheme that allows you to use your credit card to make a transaction and then repay the amount to your financier in installments over the course of 6, 12, 24 or 36 months with 0% interest. We currently have 4 banks that offer installment payment plans: 1. Public Bank 2. Maybank 3. HSBC 4. Hong Leong Bank<br>
												Minimum spend applies in order to be eligible for 0% interest installment plan and it is based on the checkout value (after deduction of discount vouchers, if any) instead of a single order/item value. Click
												<a href="https://www.samsung.com/my/shop-faq/payment-and-financing/what-is-the-minimum-spend-for-instalment-plan/" target="_blank" title="Open in a new window">
													here
												</a>
												for more info.`;
						} else if(siteCode == "ph"){
							descriptionText = `0% interest installment is a repayment scheme that allows you to use your credit card to make a transaction and then repay the amount in installments over the course of 3, 6, 9, 12, 18 and 24 months with 0% interest free.<br>
												We currently have 2 banks that offers installment payment plans<br>
												1. BDO<br>
												2. Metrobank<br>
												Minimum spend applies in order to be eligible for 0% interest installment plan and it is based on the checkout value (after deduction of discount vouchers) instead of a single order/item value.<br>
												Click 
												<a href="https://www.samsung.com/ph/shop-faq/payment-and-financing/what-payment-methods-do-you-accept/" target="_blank" title="Open in a new window">
													here
												</a>
												for more info.`;
						
						} else if(siteCode == "nz"){
							if(tabData.code == "nz-flexiCardPaymentMode"){
								descriptionText = `<strong>For Flexi Card:</strong><br/>*36, 24, or 12 months interest free is available on Long Term Finance (LTF) for online purchases only. Min spend $200. Lending criteria, $50 annual Account Fee, fees, Ts&Cs apply. $55 Establishment Fee applies to your first LTF transaction, $35 Advance Fee applies to subsequent LTF transactions. After applicable Payment Holiday ends, minimum payments of 3% of the monthly closing balance or $10 (whichever is greater) are required throughout interest free period. Paying only the minimum monthly payments will not fully repay the loan before the end of the interest free period. At end of interest free period, Q Mastercard Expired Promotional Rate or Q Card Standard Interest Rate of 27.99% p.a. applies. Standard Interest Rate applies to Standard Purchases after 3 months interest free period ends (Q Mastercard 26.69% p.a. and Q Card 27.99% p.a.). Rates and fees subject to change. Columbus Financial Services Limited and Consumer Finance Limited reserve the right to amend, suspend or terminate the offer and these Ts&Cs at any time without notice. Mastercard and the circles design are registered trademarks of Mastercard International Incorporated.`;
							}else if(tabData.code == "nz-laybuyPaymentMode"){
								descriptionText = `<strong>For LayBuy:</strong><br/>*Laybuy weekly payments are available for Laybuy customers only. For Terms and Conditions refer to 
								<a href="https://www.laybuy.com/nz/consumer-terms" target="_blank" title="Open in a new window">
									https://www.laybuy.com/nz/consumer-terms
								</a>`;
							}
						} else if(siteCode == "vn"){
							//CRHQ-9091(vn추가)
							let strOpenTitle = Granite.I18n.get("Open in a new window");
							descriptionText = `Ưu đãi trả góp 0% lãi suất đối với đơn hàng trên 5 Triệu. Tham khảo tại: <a href="https://www.samsung.com/vn/galaxy/tan-huong-tra-gop/" target="_blank" title="${strOpenTitle}">https://www.samsung.com/vn/galaxy/tan-huong-tra-gop/</a>`;
                        } else if(siteCode == "th"){
							descriptionText = ` `;
						} else if(siteCode == "sk"){
							descriptionText = ` `;
                        } else if(siteCode == "cz"){
							descriptionText = ` `;
						} else if(siteCode == "cn"){//[cn new-hybris 전환] - ph와 동일 분기처리
							descriptionText = ` `;
						} 
					}//:~ if(jdx == tabData.values.length-1){
				}
				contentHtml += 			'</div>';	//.finance-popup__box-list End
			}
			contentHtml += 			'</div>';		//.finance-popup__box-wrap End
			
			/* 탭에 해당되는 desc 및 footer html get */
			contentHtml += 		emiDescEachSiteCode(siteCode, tabData.code, descriptionText);
			
			contentHtml += 		'</div>';		//.finance-popup__site-content End
			contentHtml += 	'</div>';			// .finance-popup__panel End
		}
		tabHtml += 			'</ul>';			
		tabHtml += 		'</div>';				//.tab End
						
		$contentArea.html(tabHtml+contentHtml);
		
		//탭 클릭시 해당하는 .finance-popup__panel 노출
		$(".finance-popup__content li.tab__item .tab__item-title").click(function(){
		    $(".finance-popup__panel").attr("class", "finance-popup__panel");
		    $($(".finance-popup__panel")[$(this).index()]).addClass(" is-active");
		});
	};
	
	function emiDataGridID(data) {
		var innerPriceHtml = "";
		var name = data.modes[0].name;
		var price = data.productPrice;
		var banks = data.modes[0].banks;
		var tableContent = "";
		var tableHtml = "";
		$(".eip-popup__top-text--price").text(price);
		$(".eip-popup__wrap .tab .tab__item-title").html(name+'<span class="tab__item-line"></span>');
		$(".eip-popup__tab--dropdown").text(banks[0].name);
		
		for(let idx = 0; idx < banks.length; idx++){
			/*
			innerPriceHtml += '<li>';
			innerPriceHtml += '	<div class="hubble-eip--select-radio">';
			if(idx == 0){
				innerPriceHtml += '		<input type="radio" name="radio-01" class="hidden" id="radio-'+idx+ '"'+ ' checked>'
			}else{
				innerPriceHtml += '		<input type="radio" name="radio-01" class="hidden" id="radio-'+idx+ '"'+ '>'
			}
			innerPriceHtml += '		<label class="hubble-eip--select-radio__label" for="radio-' + idx + '"' +' tabindex="0">';
			innerPriceHtml += '			<span class="hubble-eip--select-radio__label-text">' + banks[idx].name + '</span>';
			innerPriceHtml += '		</label>';
			innerPriceHtml += '	</div>';
			innerPriceHtml += '</li>';
			*/
			innerPriceHtml += '<li class="eip-popup__tab--select-item">';
			 
			if(idx == 0){
				innerPriceHtml += '		<input type="radio" name="radio-01" class="hidden" id="radio-'+idx+ '"'+ ' checked>'
			}else{
				innerPriceHtml += '		<input type="radio" name="radio-01" class="hidden" id="radio-'+idx+ '"'+ '>'
			} 
			
			innerPriceHtml += '			<button>' + banks[idx].name + '</button>';
			innerPriceHtml += '</li>';
		}
		$(".eip-popup__tab--select-wrap .scrollbar__contents > ul").html(innerPriceHtml);
		window.sg.components.eipPopup.bindAdditionalEvent();
		//NOTICE 
		/*
		좌측 select 영역의 마크업과 우측 table 영역의 마크업이 그려지면,
		window.sg.components.eipPopup.bindAdditionalEvent() 함수를 호출해 주시고
		좌측 select 영역이 선택될 때, 우측 table 영역의 마크업을 변경하신 후,
		window.sg.components.eipPopup.resizeTableWrap() 함수를 호출해 주시기 바랍니다.
		*/
		
		
		for(let i = 0 ; i < banks.length; i++){
			var innerValue = banks[i].plans;
			for(let j = 0; j < innerValue.length; j++){
				tableContent += '<tr>';
				tableContent += '	<td>'+ innerValue[j].periodicValue + '</td>';
				tableContent += '	<td>'+ innerValue[j].code + '</td>';
				tableContent += '	<td>'+ innerValue[j].purchaseCost + '</td>';
				tableContent += '</tr>';
			}
			
			tableHtml += '<div class="scrollbar__contents" style="display:none">';
			tableHtml += '	<p class="eip-popup__tab--table-title">' + banks[i].name + '</p>';
			tableHtml += '	<table class="eip-popup__tab--table">';
			tableHtml += '		<caption><span class="blind"> Table Caption</span></caption>';
			tableHtml += '		<colgroup>';
			tableHtml += '			<col>';
			tableHtml += '			<col style="width:25%">';
			tableHtml += '			<col>';
			tableHtml += '		</colgroup>';
			tableHtml += '	<thead>';
			tableHtml += '		<tr>';
			tableHtml += '			<th scope="col">Cician<br>Per Bulan</th>';
			tableHtml += '			<th scope="col">Tenor<br>(bulan)</th>';
			tableHtml += '			<th scope="col">Total<br>Pembayaran</th>';
			tableHtml += '		</tr>';
			tableHtml += '	</thead>';
			tableHtml += '	<tbody>';
			tableHtml += 		tableContent
			tableHtml += '	</tbody>';
			tableHtml += '	</table>';
			tableHtml += '</div>';
			tableContent = "";
		}
		if($(".eip-popup__tab--table-wrap").next().length){
			$(".eip-popup__tab--table-wrap").nextAll().remove();
        }
		$(".eip-popup__tab--table-wrap").after(tableHtml);
		
	}

	// CRHQ-24 [B2C][MX][UA] Interactive Credit Calculator on PDP and PLP
	var emiDataGridUa = function(values){

		///////////////////////////  여기까지 로직 //////////////////////////////////
		var $eipArea = $(".finance-popup");
		var $contentArea = $eipArea.find(".finance-popup__content");

		$contentArea.html( (values||[]).length > 0 ? contentGrid(values[0].values||[]) : '' );

		if($contentArea.find('.installment-select__options ul li a').length > 0){
			$contentArea.find('.installment-select__placeholder-name .select-txt').text($contentArea.find('.installment-select__options ul li a:eq(0)').data('code'))
		}

		// month 이벤트 처리
		$contentArea.find('.installment-select__options ul li a').click(function(){
			const selectedOption = $(this).data("code");
			$(this).closest('.finance-popup__content').find('li.finance-popup__installment-list-item[data-code]').each(function(){
				if($(this).data("code") == selectedOption){
					$(this).show();
				}else {
					$(this).hide();
				}
			});
		});		
		///////////////////////////  여기까지 로직 //////////////////////////////////

		function contentGrid(tabDataValues){

			// api 에서 소팅이 되어 있지 않은 경우를 대비해 월 숫자 오름차순 정리
			tabDataValues.sort(function(a, b){
				const acode = parseFloat(a.code);
				const bcode = parseFloat(b.code);
				return acode - bcode;
			});

			return `
				<div class="finance-popup__installment-wrap">
				<ul class="finance-popup__installment-list">
					<li class="finance-popup__installment-list-item">
					<span>${Granite.I18n.get("Loan term (months)")}</span>
					<div class="finance-popup__installment-select">
						<div class="finance-popup__installment-select__choose">
						<div class="finance-popup__installment-select__choose-wrap">
							<div class="installment-select" data-global-text='{
								"Expand" : "Click to Expand",
								"Collapse" : "Click to Collapse"
							}'>
							<a href="#" class="installment-select__placeholder" role="button" aria-disabled="false" aria-expanded="true">
								<button class="installment-select__placeholder-btn installment-select__placeholder-btn-open">
								<span class="hidden">Open Down</span>
								<svg class="icon" focusable="false" aria-hidden="true">
									<use xlink:href="#open-down-regular" href="#open-down-regular"></use>
								</svg>
								</button>
								<button class="installment-select__placeholder-btn installment-select__placeholder-btn-close">
								<span class="hidden">Close Up</span>
								<svg class="icon" focusable="false" aria-hidden="true">
									<use xlink:href="#close-up-regular" href="#close-up-regular"></use>
								</svg>
								</button>
								<div class="installment-select__placeholder-name">
								<span class="select-txt">${Granite.I18n.get("Month")}</span>
								</div>
								<!--/*
								expand(확장) 상태일 경우 data-global-text='{expand에 설정된 문구}'와
								<span class="hidden">{expand에 설정된 문구}</span>
								Collapse(축소) 상태일 경우 data-global-text='{collapse에 설정된 문구}'와
								<span class="hidden">{collapse에 설정된 문구}</span> 지정된 문구로 동일하게 출력

								data-global-text='{}' :
								"Expand" : "Click to Expand",
								"Collapse" : "Click to Collapse"
								*/-->
								<span class="hidden">Click to Expand</span>
							</a>
							<div class="installment-select__options" aria-hidden="false">
								<ul role="list">
									${listItem(tabDataValues)}
								</ul>
							</div>
							</div>
						</div>
						</div>
					</div>
					</li>
					${list(tabDataValues)}
				</ul>
				</div>
				${paymentCeditDescGrid()}
				${paymentCreditFooterGrid()}
			`;
		}

		function listItem(tabDataValues) {

			return $.map(tabDataValues, function(monthItem){
				return `
				<li role="listitem" class="">
					<a href="#" role="option" data-code="${monthItem.code}">
					<div class="finance-popup__installment-select__choose-item">
						<span class="finance-popup__installment-select__choose-name">${monthItem.code}</span>
					</div>
					</a>
				</li>
				`
			}).join("");
		}

		function list(tabDataValues){
			
			return $.map(tabDataValues, function(item, index){

				return `
				<li class="finance-popup__installment-list-item" data-code="${item.code}" ${index == 0 ? '' : 'style="display:none;"'} >
					<span>${Granite.I18n.get("Monthly Payments")}</span>
					<span>${item.periodicValue}</span>
				</li>
				<li class="finance-popup__installment-list-item" data-code="${item.code}" ${index == 0 ? '' : 'style="display:none;"'} >
					<span>${Granite.I18n.get("Order cost")}</span>
					<span>${item.purchaseCost}</span>
				</li>				
				`;
			}).join("");
			
		}

		function paymentCeditDescGrid(){
			return `
			<div class="finance-popup__description">
				<p>
					${Granite.I18n.get("Representative Example without 0% or 9.90% offers: Representative 18.9% APR (variable)")+ " " +
					//Granite.I18n.get("Purchase interest rate 18.9%p.a (variable) Assumed credit limit £1,200*") + " " + 
					Granite.I18n.get("Displayed quote is not generated by Klarna, final estimates are made upon checkout.")}
				</p>
		  	</div>
			`;	
		}

		function paymentCreditFooterGrid(){
			return `
			<div class="finance-popup__credit">
				<div class="finance-popup__credit-text">
					${Granite.I18n.get("*Subject to financial circumstances. You must be at least 18. Credit is provided by Klarna Bank AB, which is authorised and regulated by the Swedish Financial Services " + 
					"Authority, with limited supervision by the Financial Conduct Authority and Prudential Regulation Authority in the UK. Registered office: Sveavägen 46, 111 34 " + 
					"Stockholm, Sweden. Corporation ID number: 556737-0431. If you already have a Klarna Credit account, this purchase will be added to your balance. " + 
					"<a href=\"https://www.samsung.com/ua/online-credit/\" title=\"Terms and conditions\" target=\"_blank\">T&amp;Cs apply</a>.")}
				</div>
			</div>
			`;
		}		
	}

	function showEmiPopup(modelCode, closeFocus) {
		// EMI API 호출
		var siteCode = $("#siteCode").val();
		
		// epp shop분기 추가
		const siteCodeWithEpp = checkEppSite() ? (window.sg.epp != null && window.sg.epp.common != null ? window.sg.epp.common.companyCode : "") : siteCode;

		let shopParm = '';
		if( $('#shopParmLang').val() ){
			shopParm=`&lang=${$('#shopParmLang').val()}`;
		}
		
		var _xhrFields = $('#isEppPage').val() === 'true' ? { withCredentials: true } : {};
		
		if(siteCode == 'id'){
				$.ajax({
					url : storeDomain + "/tokocommercewebservices/v2/"+ siteCodeWithEpp+ "/products/getInstallmentPlans?fields=DEFAULT&sku=" + modelCode+shopParm,
					type: "GET",
					dataType: "json",
					xhrFields: _xhrFields,
					crossDomain: true,
					timeout: 10000,
					success: function (data) {
						if (data && data.modes.length > 0) {
							emiDataGridID(data);
							//window.sg.components.hubbleEipPopup.reInit();
							window.sg.components.eipPopup.init();
							//window.sg.components.hubblePdPopup.openPopup(document.querySelector("#hubble-eip-layer"), closeFocus);
							window.sg.components.eipPopup.showPopup();
							$(".hubble-eip-select-area").off("click",".hubble-eip--select-radio input[name=radio-01]")
							$(".hubble-eip-select-area").on("click",".hubble-eip--select-radio input[name=radio-01]", function(){
								var id = $(this).attr('id');
								var tabIdx = id.split('-')[1];
								var tables = $('.hubble-eip-table-area');
								for(let i = 0; i < tables.length; i++){
									if(i == tabIdx){
										tables[i].style.display = 'block';
									}else{
										tables[i].style.display = 'none';
									}
								}
							});
							
							$(document).on("click",".eip-popup__tab--select-item", function(){
								var selectWrap = $(".eip-popup__tab--select-item");
								var tableWrap = $(".eip-popup__tab--table-wrap").siblings(".scrollbar__contents");
								var selectedTable = "";
								
								for(var i=0; i<selectWrap.length; i++){
									if(selectWrap[i].classList.value.indexOf("active") > -1){
										selectedTable = tableWrap.clone()[i];
										selectedTable.removeAttribute("style");
									}
								}
								$(".eip-popup__tab--table-wrap .scrollbar__wrap").html(selectedTable);
								window.sg.components.eipPopup.resizeTableWrap();
							});
							
							$(".eip-popup__tab--select-item.active").click();
						}
					},
					error: function (e) {
						errLayerPop(e);
					}
				});
		}else if(isCalculateInstallment){
			//uk와 uk외 국가들에 대한 적용  (ee, lv, lt) + pl
			let apiUrl = '';
			//COMP6FE-1590 [SMB] Financing Calculator& Leasing es추가
			if(isB2B){
				let storeSiteCode = $("#store_sitecode").val();
				shopParm = `lang=${$('#language').val()}&`;
				
				if($('#priceCurrency').val()){
					shopParm +=`curr=${$('#priceCurrency').val().toUpperCase()}`;
				}else{
					shopParm +=`curr=${$('#pfPriceCurrency').val().toUpperCase()}`;
				}
				apiUrl = storeDomain + "/tokocommercewebservices/v2/" + storeSiteCode + "/products/" + modelCode + "/calculateInstallment?"+shopParm;
			}else{
				//[EPP] &EPPONLY 도메인 변경
				if(checkEppSite() && ($('#shopIntegrationFlag').val() === 'Hybris'|| $('#shopIntegrationFlag').val() === 'Hybris-intg')){
					storeDomain = window.sg.epp.common.orgNewHyvStoreDomain;
				}
				//B2C
				apiUrl = storeDomain + "/tokocommercewebservices/v2/" + siteCodeWithEpp + "/products/" + modelCode + "/calculateInstallment?fields=DEFAULT"+shopParm;
			}
 
			$.ajax({
				url : apiUrl,
				type: "GET",
				dataType: "json",
				xhrFields: _xhrFields,
				crossDomain: true,
				timeout: 10000,
				success: function (data) {
					if (data && data.values.length > 0) {
						if(siteCode == 'ua'){ // CRHQ-24
							emiDataGridUa(data.values);
						}else{
							emiDataGrid(data.values, siteCode);
						}
						window.sg.components.financePopup.reInit(); //reInit 호출
						//api호출 data가 있는 경우 팝업 오픈, data 없으면 동작 X
						window.sg.components.financePopup.showPopup(closeFocus[0]);
					}
				},
				error: function (e) {
					errLayerPop(e);
				}
			});
		}  
	}

	// hubbleEipPopup 마크업 js 이후 세팅
	// window.sg.components.hubbleEipPopup.showEmiPopup(modelCode, clickBtn);
	//window.sg.components.hubbleEipPopup.showEmiPopup = showEmiPopup;
	window.sg.components.financePopup.showEmiPopup = showEmiPopup;
	
})($);
